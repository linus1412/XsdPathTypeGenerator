<?xml version="1.0" encoding="UTF-8"?>
<!--
Schematron
Generated by CoreFiling: generator revision 425991
Fri Jun 19 11:11:56 BST 2015
-->
<sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron" queryBinding="exslt">
  <sch:title>Schematron for CT</sch:title>
  <sch:ns prefix="hd" uri="http://www.govtalk.gov.uk/CM/envelope"/>
  <sch:ns prefix="dsig" uri="http://www.w3.org/2000/09/xmldsig#"/>
  <sch:ns prefix="ct" uri="http://www.govtalk.gov.uk/taxation/CT/3"/>
    <sch:pattern id="p2">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:IRheader/ct:Keys/ct:Key">
        <sch:assert test="count(/hd:GovTalkMessage/hd:GovTalkDetails/hd:Keys/hd:Key[@Type = current()/@Type and . = current()]) &gt; 0" id="a_CTIRheader.1" diagnostics="errorCode.CTIRheader.1 transactional.CTIRheader.1 transactional.en.CTIRheader.1 ">Keys in the IR header must also exist in the GovTalk header with the same value</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p1">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:IRheader">
        <sch:assert test="count(ct:Keys/ct:Key) &gt; 0" id="a_CTIRheader.0" diagnostics="errorCode.CTIRheader.0 transactional.CTIRheader.0 transactional.en.CTIRheader.0 ">At least one key must exist</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p4">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyInformation/ct:Reference">
        <sch:assert test="count(../../../ct:IRheader/ct:Keys/ct:Key[@Type = &quot;UTR&quot; and . = current()]) &gt; 0" id="a_N007.0" diagnostics="errorCode.N007.0 transactional.N007.0 transactional.en.N007.0 transactional.cy.N007.0 ">There must be a Key element in the Irheader whose Type attribute is UTR and whose content is the same as the entry in [Company reference].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p6">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyInformation/ct:PeriodCovered/ct:From">
        <sch:assert test="translate(.,&apos;-&apos;,&apos;&apos;) &gt;= translate(&apos;1998-07-02&apos;,&apos;-&apos;,&apos;&apos;)" id="a_N012.1" diagnostics="errorCode.N012.1 transactional.N012.1 transactional.en.N012.1 transactional.cy.N012.1 ">From is valid if and only if it is on or after '1998-07-02'</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(.)) div 86400) &lt; round(date:seconds(normalize-space(date:date())) div 86400))" id="a_N012.2" diagnostics="errorCode.N012.2 transactional.N012.2 transactional.en.N012.2 transactional.cy.N012.2 ">From Date cannot be later than yesterday</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space((.))) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2015-03-31&apos;)) div 86400))" id="a_N012.0" diagnostics="errorCode.N012.0 transactional.N012.0 transactional.en.N012.0 transactional.cy.N012.0 ">[AP From Date] is valid only if this on or before '2015-03-31'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p7">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyInformation/ct:PeriodCovered/ct:To">
        <sch:assert test="translate(.,&apos;-&apos;,&apos;&apos;) &gt;= translate(&apos;1999-07-01&apos;,&apos;-&apos;,&apos;&apos;)" id="a_N013.0" diagnostics="errorCode.N013.0 transactional.N013.0 transactional.en.N013.0 transactional.cy.N013.0 ">To is valid if and only if it is on or after '1999-07-01'</sch:assert>
        <sch:assert test="translate(.,&apos;-&apos;,&apos;&apos;) &gt;= translate(../ct:From,&apos;-&apos;,&apos;&apos;)" id="a_N013.1" diagnostics="errorCode.N013.1 transactional.N013.1 transactional.en.N013.1 transactional.cy.N013.1 ">To is valid if and only if it is on or after [AP From Date]</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(.)) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400)) or ../../ct:CompanyType = 3" id="a_N013.2" diagnostics="errorCode.N013.2 transactional.N013.2 transactional.en.N013.2 transactional.cy.N013.2 ">End date cannot be later than today unless [Company type] = 3.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p5">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyInformation/ct:PeriodCovered">
        <sch:assert test="translate(date:add(normalize-space(string(ct:To)),normalize-space(&apos;-P12M&apos;)),&apos;-&apos;,&apos;&apos;) &lt; translate(ct:From,&apos;-&apos;,&apos;&apos;)" id="a_N010.1" diagnostics="errorCode.N010.1 transactional.N010.1 transactional.en.N010.1 transactional.cy.N010.1 ">Period Covered must not be longer than 12 months</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p8">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:PartOfNonSmallGroup">
        <sch:assert test="not((translate(../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &lt;= translate(&apos;2008-03-31&apos;,&apos;-&apos;,&apos;&apos;)) and (.))" id="a_N020.0" diagnostics="errorCode.N020.0 transactional.N020.0 transactional.en.N020.0 transactional.cy.N020.0 ">Part of non small group should not be present if [AP To Date] is on or before '2008-03-31'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p9">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:RegisteredAvoidanceScheme">
        <sch:assert test="not((translate(../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &lt;= translate(&apos;2004-03-31&apos;,&apos;-&apos;,&apos;&apos;)) and (.))" id="a_N021.0" diagnostics="errorCode.N021.0 transactional.N021.0 transactional.en.N021.0 transactional.cy.N021.0 ">Registered avoidance scheme should not be present if [AP To Date] is on or before '2004-03-31'</sch:assert>
        <sch:assert test="not ((.)) or ../../@ReturnType = &apos;amended&apos; or ../ct:SupplementaryPages/ct:CT600J" id="a_N021.1" diagnostics="errorCode.N021.1 transactional.N021.1 transactional.en.N021.1 transactional.cy.N021.1 ">If 'yes' then [CT600J attached] must also be 'yes' - unless [Return type] = 'amended'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p10">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:TransferPricing">
        <sch:assert test="not(ct:Adjustment = &apos;yes&apos; and ct:SME = &apos;yes&apos;)" id="a_N022.1" diagnostics="errorCode.N022.1 transactional.N022.1 transactional.en.N022.1 transactional.cy.N022.1 "> [Transfer Pricing adjustment] and [Transfer Pricing SME] cannot both be 'yes'</sch:assert>
        <sch:assert test="not((translate(../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &lt;= translate(&apos;2004-03-31&apos;,&apos;-&apos;,&apos;&apos;)) and (.))" id="a_N022.0" diagnostics="errorCode.N022.0 transactional.N022.0 transactional.en.N022.0 transactional.cy.N022.0 ">Transfer pricing should not be present if [AP To Date] is on or before '2004-03-31'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p12">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:Accounts/ct:NoAccountsReason">
        <sch:assert test="count(../../../ct:AttachedFiles/ct:XBRLsubmission/ct:Accounts) = 0" id="a_N028.3" diagnostics="errorCode.N028.3 transactional.N028.3 transactional.en.N028.3 transactional.cy.N028.3 ">If present, then there must be no Accounts element as a child of [XBRL Submission]</sch:assert>
        <sch:assert test="not((.) = &apos;Amendment - a/cs already submitted&apos;) or (../../../@ReturnType = &apos;amended&apos;)" id="a_N028.4" diagnostics="errorCode.N028.4 transactional.N028.4 transactional.en.N028.4 transactional.cy.N028.4 ">If [No accounts reason] = 'Amendment - a/cs already submitted' then [Return type] must equal 'amended'.</sch:assert>
        <sch:assert test="not((.) = &quot;PDF accounts attached with explanation&quot;) or (count(../../../ct:AttachedFiles/ct:Attachment[@Type=&apos;accounts&apos;]) &gt; 0)" id="a_N028.5" diagnostics="errorCode.N028.5 transactional.N028.5 transactional.en.N028.5 transactional.cy.N028.5 ">If [No accounts reason] is "PDF accounts attached with explanation", then there must be at least one instance of [Attachment] with type = 'accounts'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p11">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:Accounts">
        <sch:assert test="ct:NoAccountsReason = &quot;PDF accounts attached with explanation&quot; or count(../../ct:AttachedFiles/ct:Attachment[@Type=&apos;accounts&apos;]) = 0" id="a_N028.2" diagnostics="errorCode.N028.2 transactional.N028.2 transactional.en.N028.2 transactional.cy.N028.2 ">If [No accounts reason] is (absent or) not "PDF accounts attached with explanation", then there must be no instance of [Attachment] with a type attribute of 'accounts'.</sch:assert>
        <sch:assert test="ct:NoAccountsReason or (count(../../ct:AttachedFiles/ct:XBRLsubmission/ct:Accounts) &gt; 0)" id="a_N025.0" diagnostics="errorCode.N025.0 transactional.N025.0 transactional.en.N025.0 transactional.cy.N025.0 ">If [No accounts reason] is absent then the Accounts child of [XBRL Submission] must be present.</sch:assert>
        <sch:assert test="not(not(ct:NoAccountsReason) or ct:NoAccountsReason = &quot;PDF accounts attached with explanation&quot;) or (count(ct:ThisPeriodAccounts) + count(ct:DifferentPeriod)) = 1" id="a_N025.1" diagnostics="errorCode.N025.1 transactional.N025.1 transactional.en.N025.1 transactional.cy.N025.1 ">If [No accounts reason] is absent or "PDF accounts attached with explanation", then exactly one of [This period accounts tick box] or [Different period accounts tick box] must be present.</sch:assert>
        <sch:assert test="not(ct:NoAccountsReason) or ct:NoAccountsReason = &quot;PDF accounts attached with explanation&quot; or (count(ct:ThisPeriodAccounts) + count(ct:DifferentPeriod)) = 0" id="a_N025.2" diagnostics="errorCode.N025.2 transactional.N025.2 transactional.en.N025.2 transactional.cy.N025.2 ">If [No accounts reason] is present and not "PDF accounts attached with explanation", then neither [This period accounts tick box] nor [Different period accounts tick box] may be present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p14">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:Computations/ct:NoComputationsReason">
        <sch:assert test="count(../../../ct:AttachedFiles/ct:Attachment[@Type=&apos;computations&apos;]) = 0" id="a_N028d.4" diagnostics="errorCode.N028d.4 transactional.N028d.4 transactional.en.N028d.4 transactional.cy.N028d.4 ">If present, then there must be no instance of [Attachment] with a type attribute of 'computations'</sch:assert>
        <sch:assert test="count(../../../ct:AttachedFiles/ct:XBRLsubmission/ct:Computation) = 0" id="a_N028d.5" diagnostics="errorCode.N028d.5 transactional.N028d.5 transactional.en.N028d.5 transactional.cy.N028d.5 ">If present, then there must be no Computation element as a child of [XBRL Submission]</sch:assert>
        <sch:assert test="not((.) = &apos;Amendment - comps already submitted&apos;) or (../../../@ReturnType = &apos;amended&apos;)" id="a_N028d.6" diagnostics="errorCode.N028d.6 transactional.N028d.6 transactional.en.N028d.6 transactional.cy.N028d.6 ">If [No computations reason] = 'Amendment - comps already submitted' then [Return type] must equal 'amended'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p13">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:Computations">
        <sch:assert test="ct:NoComputationsReason or (count(../../ct:AttachedFiles/ct:Attachment[@Type=&apos;computations&apos;]) &gt; 0) or (count(../../ct:AttachedFiles/ct:XBRLsubmission/ct:Computation) &gt; 0)" id="a_N028a.0" diagnostics="errorCode.N028a.0 transactional.N028a.0 transactional.en.N028a.0 transactional.cy.N028a.0 ">If [No computations reason] is absent, then there must be a Computations element as a child of [XBRL Submission], or at least one instance of [Attachment] with type = 'computations'.</sch:assert>
        <sch:assert test="ct:NoComputationsReason or not((count(../../ct:AttachedFiles/ct:Attachment[@Type=&apos;computations&apos;]) &gt; 0) and (count(../../ct:AttachedFiles/ct:XBRLsubmission/ct:Computation) &gt; 0))" id="a_N028a.1" diagnostics="errorCode.N028a.1 transactional.N028a.1 transactional.en.N028a.1 transactional.cy.N028a.1 ">If [No computations reason] is absent, then there must not be both a Computations element as a child of [XBRL Submission] and any instances of [Attachment] with type = 'computations'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p15">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600A">
        <sch:assert test="not((.) = &apos;yes&apos; and ../../../@ReturnType = &apos;new&apos;) or ../../../ct:LoansByCloseCompanies" id="a_N030.0" diagnostics="errorCode.N030.0 transactional.N030.0 transactional.en.N030.0 transactional.cy.N030.0 ">If CT600A is yes and [Return type] = 'new', then [CT600A] must be present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p16">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600B">
        <sch:assert test="not((.) = &apos;yes&apos; and ../../../@ReturnType = &apos;new&apos;) or ../../../ct:ControlledForeignCompanies" id="a_N031.0" diagnostics="errorCode.N031.0 transactional.N031.0 transactional.en.N031.0 transactional.cy.N031.0 ">If CT600B is yes and [Return type] = 'new', then there must be a [CT600B] page present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p17">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600C">
        <sch:assert test="not((.) = &apos;yes&apos; and ../../../@ReturnType = &apos;new&apos;) or ../../../ct:GroupAndConsortium" id="a_N032.0" diagnostics="errorCode.N032.0 transactional.N032.0 transactional.en.N032.0 transactional.cy.N032.0 ">If CT600C is yes and [Return type] = 'new', then there must be a [CT600C] page present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p18">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600D">
        <sch:assert test="not((.) = &apos;yes&apos; and ../../../@ReturnType = &apos;new&apos;) or ../../../ct:Insurance" id="a_N033.0" diagnostics="errorCode.N033.0 transactional.N033.0 transactional.en.N033.0 transactional.cy.N033.0 ">If [CT600D attached] is 'yes' and [Return type] = 'new', then [CT600D] must be present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p19">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600E">
        <sch:assert test="not((.) = &apos;yes&apos; and ../../../@ReturnType = &apos;new&apos;) or ../../../ct:Charity" id="a_N034.0" diagnostics="errorCode.N034.0 transactional.N034.0 transactional.en.N034.0 transactional.cy.N034.0 ">If [CT600E attached] is 'yes' and [Return type] = 'new', then [CT600E] must be present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p20">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600F">
        <sch:assert test="not((.) = &apos;yes&apos; and ../../../@ReturnType = &apos;new&apos;) or ../../../ct:TonnageTax" id="a_N035.0" diagnostics="errorCode.N035.0 transactional.N035.0 transactional.en.N035.0 transactional.cy.N035.0 ">If [CT600F attached] is 'yes' and [Return type] = 'new', then [CT600F] must be present.</sch:assert>
        <sch:assert test="not((.) = &apos;yes&apos;) or ../../../ct:CompanyTaxCalculation/ct:Income/ct:IncomeWithinD/ct:TonnageTaxProfits" id="a_N002.13" diagnostics="errorCode.N002.13 transactional.N002.13 transactional.en.N002.13 transactional.cy.N002.13 ">Tonnage tax profits should be present if [CT600F attached] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p21">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600G">
        <sch:assert test="not((.) = &apos;yes&apos; and ../../../@ReturnType = &apos;new&apos;) or ../../../ct:CorporateVenturingScheme" id="a_N036.0" diagnostics="errorCode.N036.0 transactional.N036.0 transactional.en.N036.0 transactional.cy.N036.0 ">If [CT600G attached] is 'yes' and [Return type] = 'new', then [CT600G] must be present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p22">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600H">
        <sch:assert test="not((.) = &apos;yes&apos; and ../../../@ReturnType = &apos;new&apos;) or ../../../ct:CrossBorderRoyalties" id="a_N037.0" diagnostics="errorCode.N037.0 transactional.N037.0 transactional.en.N037.0 transactional.cy.N037.0 ">If [CT600H attached] is 'yes' and [Return type] = 'new', then [CT600H] must be present.</sch:assert>
        <sch:assert test="(../../../ct:CompanyTaxCalculation/ct:Indicators/ct:CrossBorderRoyalty = &apos;yes&apos;) or not((.) = &apos;yes&apos;)" id="a_N037.1" diagnostics="errorCode.N037.1 transactional.N037.1 transactional.en.N037.1 transactional.cy.N037.1 ">If [CT600H attached] is 'yes' then [98] must be 'yes'.</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(&apos;2002-10-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)) or not((.) = &apos;yes&apos;)" id="a_N037.2" diagnostics="errorCode.N037.2 transactional.N037.2 transactional.en.N037.2 transactional.cy.N037.2 ">If CT600H is 'yes' then [AP To Date] must not be earlier than '2002-10-01'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p23">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600I">
        <sch:assert test="not((.) = &apos;yes&apos; and ../../../@ReturnType = &apos;new&apos;) or ../../../ct:RingFenceTrade" id="a_N038.1" diagnostics="errorCode.N038.1 transactional.N038.1 transactional.en.N038.1 transactional.cy.N038.1 ">If [CT600I attached] is 'yes' and [Return type] = 'new', then [CT600I] must be present.</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2002-04-16&apos;)) div 86400)))" id="a_N038.0" diagnostics="errorCode.N038.0 transactional.N038.0 transactional.en.N038.0 transactional.cy.N038.0 ">CT600 i should not be present if [AP From Date] is on or before '2002-04-16'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p24">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600J">
        <sch:assert test="(../../ct:RegisteredAvoidanceScheme = &apos;yes&apos;) or not((.) = &apos;yes&apos;)" id="a_N039.1" diagnostics="errorCode.N039.1 transactional.N039.1 transactional.en.N039.1 transactional.cy.N039.1 ">If [CT600J attached] is 'yes' then [Registered avoidance scheme] must be 'yes'</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2004-03-17&apos;)) div 86400)))" id="a_N039.0" diagnostics="errorCode.N039.0 transactional.N039.0 transactional.en.N039.0 transactional.cy.N039.0 ">CT600 j should not be present if [AP To Date] is on or before '2004-03-17'</sch:assert>
        <sch:assert test="not((.) = &apos;yes&apos; and ../../../@ReturnType = &apos;new&apos;) or ../../../ct:TaxAvoidanceSchemes" id="a_N039.2" diagnostics="errorCode.N039.2 transactional.N039.2 transactional.en.N039.2 transactional.cy.N039.2 ">If [CT600J attached] is 'yes' and [Return type] = 'new', then [CT600J] must be present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p27">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:TradingAndProfessional/ct:LossesBroughtForward">
        <sch:assert test=". &lt;= sum(../ct:Profits)" id="a_F002.1" diagnostics="errorCode.F002.1 transactional.F002.1 transactional.en.F002.1 transactional.cy.F002.1 ">Losses brought forward is valid if and only if it does not exceed [3]</sch:assert>
        <sch:assert test="sum(../ct:Profits) &gt; 0" id="a_F002.0" diagnostics="errorCode.F002.0 transactional.F002.0 transactional.en.F002.0 transactional.cy.F002.0 ">If Losses brought forward is present the following should be true: [3] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p28">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:TradingAndProfessional/ct:NetProfits">
        <sch:assert test="(math:abs((.) - ((sum(../ct:Profits) - sum(../ct:LossesBroughtForward)))) &lt; 0.001)" id="a_F003.1" diagnostics="errorCode.F003.1 transactional.F003.1 transactional.en.F003.1 transactional.cy.F003.1 ">Net profits is valid if and only if it equals ( [3] minus [4] )</sch:assert>
        <sch:assert test="../../../ct:ProfitsBeforeOtherDeductions or not((.) &gt; 0)" id="a_F014.2" diagnostics="errorCode.F014.2 transactional.F014.2 transactional.en.F014.2 transactional.cy.F014.2 ">[21] should be present if [5] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p26">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:TradingAndProfessional">
        <sch:assert test="not(sum(ct:Profits) &gt; 0) or ct:NetProfits" id="a_N043.0" diagnostics="errorCode.N043.0 transactional.N043.0 transactional.en.N043.0 transactional.cy.N043.0 ">Net profits should be present if [3] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p29">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:NonTradingLoanProfitsAndGains">
        <sch:assert test="../../ct:ProfitsBeforeOtherDeductions or not((.) &gt; 0)" id="a_F014.3" diagnostics="errorCode.F014.3 transactional.F014.3 transactional.en.F014.3 transactional.cy.F014.3 ">[21] should be present if [6] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p30">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:IncomeStatedNet">
        <sch:assert test="sum(../ct:NonTradingLoanProfitsAndGains) &gt;= 0" id="a_F949.1" diagnostics="errorCode.F949.1 transactional.F949.1 transactional.en.F949.1 transactional.cy.F949.1 ">If [7] is present the following should be true: [6] is not less than 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p31">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:NonLoanAnnuitiesAnnualPaymentsDiscounts">
        <sch:assert test="../../ct:ProfitsBeforeOtherDeductions or not((.) &gt; 0)" id="a_F014.4" diagnostics="errorCode.F014.4 transactional.F014.4 transactional.en.F014.4 transactional.cy.F014.4 ">[21] should be present if [8] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p32">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:OverseasIncome">
        <sch:assert test="../../ct:ProfitsBeforeOtherDeductions or not((.) &gt; 0)" id="a_F014.5" diagnostics="errorCode.F014.5 transactional.F014.5 transactional.en.F014.5 transactional.cy.F014.5 ">[21] should be present if [9] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p33">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:DeductedIncome">
        <sch:assert test="../../ct:ProfitsBeforeOtherDeductions or not((.) &gt; 0)" id="a_F014.6" diagnostics="errorCode.F014.6 transactional.F014.6 transactional.en.F014.6 transactional.cy.F014.6 ">[21] should be present if [10] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p34">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:LandAndBuildingIncome">
        <sch:assert test="../../ct:ProfitsBeforeOtherDeductions or not((.) &gt; 0)" id="a_F014.7" diagnostics="errorCode.F014.7 transactional.F014.7 transactional.en.F014.7 transactional.cy.F014.7 ">[21] should be present if [11] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p36">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:IncomeWithinD/ct:NonTradingGainsIntangibles">
        <sch:assert test="../ct:IncomeWithinDTotal or ../../../../@Short or not((.) &gt; 0)" id="a_F007.2" diagnostics="errorCode.F007.2 transactional.F007.2 transactional.en.F007.2 transactional.cy.F007.2 ">[15] should be present if not ( [N111] ) and [12] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p37">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:IncomeWithinD/ct:TonnageTaxProfits">
        <sch:assert test="(../../../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600F = &apos;yes&apos;) or (../../../../@ReturnType = &apos;amended&apos;)" id="a_F175.0" diagnostics="errorCode.F175.0 transactional.F175.0 transactional.en.F175.0 transactional.cy.F175.0 ">If Tonnage tax profits is present the following should be true: [CT600F attached] equals 'yes' or [Return type] equals 'amended'</sch:assert>
        <sch:assert test="not(../../../../ct:TonnageTax/ct:TonnageTax/ct:QualifyingShips/ct:Total) or (. = ../../../../ct:TonnageTax/ct:TonnageTax/ct:QualifyingShips/ct:Total)" id="a_F175.1" diagnostics="errorCode.F175.1 transactional.F175.1 transactional.en.F175.1 transactional.cy.F175.1 ">[13] must equal [F10] if [F10] is present.</sch:assert>
        <sch:assert test="../ct:IncomeWithinDTotal or ../../../../@Short or not((.) &gt; 0)" id="a_F007.3" diagnostics="errorCode.F007.3 transactional.F007.3 transactional.en.F007.3 transactional.cy.F007.3 ">[15] should be present if not ( [N111] ) and [13] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p38">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:IncomeWithinD/ct:ProfitsAndGainsNotAnyOtherHeading">
        <sch:assert test="../ct:IncomeWithinDTotal or ../../../../@Short or not((.) &gt; 0)" id="a_F007.4" diagnostics="errorCode.F007.4 transactional.F007.4 transactional.en.F007.4 transactional.cy.F007.4 ">[15] should be present if not ( [N111] ) and [14] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p39">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:IncomeWithinD/ct:IncomeWithinDTotal">
        <sch:assert test="(math:abs((.) - ((sum(../ct:NonTradingGainsIntangibles) + sum(../ct:TonnageTaxProfits) + sum(../ct:ProfitsAndGainsNotAnyOtherHeading)))) &lt; 0.001)" id="a_F007.1" diagnostics="errorCode.F007.1 transactional.F007.1 transactional.en.F007.1 transactional.cy.F007.1 ">Income within dTotal is valid if and only if it equals ( The sum of [12], [13], and [14] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p35">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Income/ct:IncomeWithinD">
        <sch:assert test="../../ct:ProfitsBeforeOtherDeductions or not((sum(ct:NonTradingGainsIntangibles) + sum(ct:TonnageTaxProfits) + sum(ct:ProfitsAndGainsNotAnyOtherHeading)) &gt; 0)" id="a_F014.8" diagnostics="errorCode.F014.8 transactional.F014.8 transactional.en.F014.8 transactional.cy.F014.8 ">[21] should be present if the sum of ( [12], [13], and [14] ) exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p40">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:ChargeableGains/ct:AllowableLosses">
        <sch:assert test=". &lt;= sum(../ct:GrossGains)" id="a_F012.1" diagnostics="errorCode.F012.1 transactional.F012.1 transactional.en.F012.1 transactional.cy.F012.1 ">Allowable losses is valid if and only if it does not exceed [16]</sch:assert>
        <sch:assert test="sum(../ct:GrossGains) &gt; 0" id="a_F012.2" diagnostics="errorCode.F012.2 transactional.F012.2 transactional.en.F012.2 transactional.cy.F012.2 ">If Allowable losses is present the following should be true: [16] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p41">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:ChargeableGains/ct:NetChargeableGains">
        <sch:assert test="(math:abs((.) - ((sum(../ct:GrossGains) - sum(../ct:AllowableLosses)))) &lt; 0.001)" id="a_F013.1" diagnostics="errorCode.F013.1 transactional.F013.1 transactional.en.F013.1 transactional.cy.F013.1 ">Net chargeable gains is valid if and only if it equals ( [16] minus [17] )</sch:assert>
        <sch:assert test="../../ct:ProfitsBeforeOtherDeductions or not((.) &gt; 0)" id="a_F014.9" diagnostics="errorCode.F014.9 transactional.F014.9 transactional.en.F014.9 transactional.cy.F014.9 ">[21] should be present if [18] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p42">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:LossesBroughtForward">
        <sch:assert test="((.) - ((sum(../ct:Income/ct:NonTradingLoanProfitsAndGains) + sum(../ct:Income/ct:NonLoanAnnuitiesAnnualPaymentsDiscounts) + sum(../ct:Income/ct:OverseasIncome) + sum(../ct:Income/ct:DeductedIncome) + sum(../ct:Income/ct:LandAndBuildingIncome) + sum(../ct:Income/ct:IncomeWithinD/ct:IncomeWithinDTotal) + sum(../ct:ChargeableGains/ct:NetChargeableGains))) &lt; 0.001)" id="a_F020.0" diagnostics="errorCode.F020.0 transactional.F020.0 transactional.en.F020.0 transactional.cy.F020.0 ">Losses brought forward is valid if and only if it does not exceed ( The sum of [6], [8], [9], [10], [11], [15], and [18] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p43">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:NonTradeDeficitsOnLoans">
        <sch:assert test="((.) - (((sum(../ct:Income/ct:NonTradingLoanProfitsAndGains) + sum(../ct:Income/ct:NonLoanAnnuitiesAnnualPaymentsDiscounts) + sum(../ct:Income/ct:OverseasIncome) + sum(../ct:Income/ct:DeductedIncome) + sum(../ct:Income/ct:LandAndBuildingIncome) + sum(../ct:Income/ct:IncomeWithinD/ct:IncomeWithinDTotal) + sum(../ct:ChargeableGains/ct:NetChargeableGains)) - sum(../ct:LossesBroughtForward))) &lt; 0.001)" id="a_F139.1" diagnostics="errorCode.F139.1 transactional.F139.1 transactional.en.F139.1 transactional.cy.F139.1 ">Non trade deficits on loans is valid if and only if it does not exceed ( ( The sum of [6], [8], [9], [10], [11], [15], and [18] ) minus [19] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p44">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:ProfitsBeforeOtherDeductions">
        <sch:assert test="(math:abs((.) - (((sum(../ct:Income/ct:TradingAndProfessional/ct:NetProfits) + sum(../ct:Income/ct:NonTradingLoanProfitsAndGains) + sum(../ct:Income/ct:NonLoanAnnuitiesAnnualPaymentsDiscounts) + sum(../ct:Income/ct:OverseasIncome) + sum(../ct:Income/ct:DeductedIncome) + sum(../ct:Income/ct:LandAndBuildingIncome) + (sum(../ct:Income/ct:IncomeWithinD/ct:NonTradingGainsIntangibles) + sum(../ct:Income/ct:IncomeWithinD/ct:TonnageTaxProfits) + sum(../ct:Income/ct:IncomeWithinD/ct:ProfitsAndGainsNotAnyOtherHeading)) + sum(../ct:ChargeableGains/ct:NetChargeableGains)) - (sum(../ct:LossesBroughtForward) + sum(../ct:NonTradeDeficitsOnLoans))))) &lt; 0.001)" id="a_F014.1" diagnostics="errorCode.F014.1 transactional.F014.1 transactional.en.F014.1 transactional.cy.F014.1 ">[21] should equal ( ( The sum of [5], [6], [8], [9], [10], [11], [12], [13], [14], and [18] ) minus ( [19] plus [20] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p45">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:IncludesCVSLossRelief">
        <sch:assert test="not ((.) = &apos;yes&apos;) or (../../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600G = &apos;yes&apos;)" id="a_F177.0" diagnostics="errorCode.F177.0 transactional.F177.0 transactional.en.F177.0 transactional.cy.F177.0 ">If box [23] is 'yes' then [CT600G attached] must be 'yes'</sch:assert>
        <sch:assert test="sum(../ct:CVSLossRelief) &gt; 0" id="a_F177.1" diagnostics="errorCode.F177.1 transactional.F177.1 transactional.en.F177.1 transactional.cy.F177.1 ">If [23] is present the following should be true: [22] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p46">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:CVSLossRelief">
        <sch:assert test=". &lt;= sum(../../ct:ProfitsBeforeOtherDeductions)" id="a_F015.1" diagnostics="errorCode.F015.1 transactional.F015.1 transactional.en.F015.1 transactional.cy.F015.1 ">CVS loss relief is valid if and only if it does not exceed [21]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p47">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:ManagementExpenses">
        <sch:assert test="((.) - ((sum(../../ct:ProfitsBeforeOtherDeductions) - sum(../ct:CVSLossRelief))) &lt; 0.001)" id="a_F018.1" diagnostics="errorCode.F018.1 transactional.F018.1 transactional.en.F018.1 transactional.cy.F018.1 ">Management expenses is valid if and only if it does not exceed ( [21] minus [22] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p48">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:InterestDistributions">
        <sch:assert test="((.) - ((sum(../../ct:ProfitsBeforeOtherDeductions) - (sum(../ct:CVSLossRelief) + sum(../ct:ManagementExpenses)))) &lt; 0.001)" id="a_F084.1" diagnostics="errorCode.F084.1 transactional.F084.1 transactional.en.F084.1 transactional.cy.F084.1 ">Interest distributions is valid if and only if it does not exceed ( [21] minus ( [22] plus [24] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p49">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:ScheduleALosses">
        <sch:assert test="((.) - ((sum(../../ct:ProfitsBeforeOtherDeductions) - (sum(../ct:CVSLossRelief) + sum(../ct:ManagementExpenses) + sum(../ct:InterestDistributions)))) &lt; 0.001)" id="a_F085.1" diagnostics="errorCode.F085.1 transactional.F085.1 transactional.en.F085.1 transactional.cy.F085.1 ">Schedule A Losses is valid if and only if it does not exceed ( [21] minus ( The sum of [22], [24], and [25] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p50">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:CapitalAllowances">
        <sch:assert test="((.) - ((sum(../../ct:ProfitsBeforeOtherDeductions) - (sum(../ct:CVSLossRelief) + sum(../ct:ManagementExpenses) + sum(../ct:InterestDistributions) + sum(../ct:ScheduleALosses)))) &lt; 0.001)" id="a_F086.1" diagnostics="errorCode.F086.1 transactional.F086.1 transactional.en.F086.1 transactional.cy.F086.1 ">Capital allowances is valid if and only if it does not exceed ( [21] minus ( The sum of [22], [24], [25], and [26] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p51">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:NonTradeDeficits">
        <sch:assert test="((.) - ((sum(../../ct:ProfitsBeforeOtherDeductions) - (sum(../ct:CVSLossRelief) + sum(../ct:ManagementExpenses) + sum(../ct:InterestDistributions) + sum(../ct:ScheduleALosses) + sum(../ct:CapitalAllowances)))) &lt; 0.001)" id="a_F140.1" diagnostics="errorCode.F140.1 transactional.F140.1 transactional.en.F140.1 transactional.cy.F140.1 ">Non trade deficits is valid if and only if it does not exceed ( [21] minus ( The sum of [22], [24], [25], [26], and [27] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p52">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:NonTradingLossIntangibles">
        <sch:assert test=". &lt;= sum(../../../ct:LossesDeficitsAndExcess/ct:NonTradingLossesIntangibles/ct:Arising)" id="a_F198.3" diagnostics="errorCode.F198.3 transactional.F198.3 transactional.en.F198.3 transactional.cy.F198.3 ">Must be less than or equal to the arising element of [132].</sch:assert>
        <sch:assert test="((.) - ((sum(../../ct:ProfitsBeforeOtherDeductions) - (sum(../ct:CVSLossRelief) + sum(../ct:ManagementExpenses) + sum(../ct:InterestDistributions) + sum(../ct:ScheduleALosses) + sum(../ct:CapitalAllowances) + sum(../ct:NonTradeDeficits)))) &lt; 0.001)" id="a_F198.4" diagnostics="errorCode.F198.4 transactional.F198.4 transactional.en.F198.4 transactional.cy.F198.4 ">Non trading loss intangibles is valid if and only if it does not exceed ( [21] minus ( The sum of [22], [24], [25], [26], [27], and [28] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p53">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:TradingLossesS393AcarriedBack">
        <sch:assert test="sum(../ct:TradingLosses) &gt; 0" id="a_F904.0" diagnostics="errorCode.F904.0 transactional.F904.0 transactional.en.F904.0 transactional.cy.F904.0 ">If Trading losses S393A carried back is present the following should be true: [30] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p54">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:TradingLosses">
        <sch:assert test="../ct:TradingLossesS393AcarriedBack  or (. &lt;= sum(../../../ct:LossesDeficitsAndExcess/ct:CaseI/ct:Arising))" id="a_F016.1" diagnostics="errorCode.F016.1 transactional.F016.1 transactional.en.F016.1 transactional.cy.F016.1 ">If [31] is not 'yes' then [30] must be less than or equal to the arising element of [122].</sch:assert>
        <sch:assert test="((.) - ((sum(../../ct:ProfitsBeforeOtherDeductions) - (sum(../ct:CVSLossRelief) + sum(../ct:ManagementExpenses) + sum(../ct:InterestDistributions) + sum(../ct:ScheduleALosses) + sum(../ct:CapitalAllowances) + sum(../ct:NonTradeDeficits) + sum(../ct:NonTradingLossIntangibles)))) &lt; 0.001)" id="a_F016.2" diagnostics="errorCode.F016.2 transactional.F016.2 transactional.en.F016.2 transactional.cy.F016.2 ">Trading losses is valid if and only if it does not exceed ( [21] minus ( The sum of [22], [24], [25], [26], [27], [28], and [29] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p55">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:NonTradeCapitalAllowances">
        <sch:assert test="((.) - ((sum(../../ct:ProfitsBeforeOtherDeductions) - (sum(../ct:CVSLossRelief) + sum(../ct:ManagementExpenses) + sum(../ct:InterestDistributions) + sum(../ct:ScheduleALosses) + sum(../ct:CapitalAllowances) + sum(../ct:NonTradeDeficits) + sum(../ct:NonTradingLossIntangibles) + sum(../ct:TradingLosses)))) &lt; 0.001)" id="a_F019.3" diagnostics="errorCode.F019.3 transactional.F019.3 transactional.en.F019.3 transactional.cy.F019.3 ">Non trade capital allowances is valid if and only if it does not exceed ( [21] minus ( The sum of [22], [24], [25], [26], [27], [28], [29], and [30] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p56">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:Total">
        <sch:assert test=". &lt;= sum(../../ct:ProfitsBeforeOtherDeductions)" id="a_F021.2" diagnostics="errorCode.F021.2 transactional.F021.2 transactional.en.F021.2 transactional.cy.F021.2 ">Total is valid if and only if it does not exceed [21]</sch:assert>
        <sch:assert test="(math:abs((.) - ((sum(../ct:CVSLossRelief) + sum(../ct:ManagementExpenses) + sum(../ct:InterestDistributions) + sum(../ct:ScheduleALosses) + sum(../ct:CapitalAllowances) + sum(../ct:NonTradeDeficits) + sum(../ct:NonTradingLossIntangibles) + sum(../ct:TradingLosses) + sum(../ct:NonTradeCapitalAllowances)))) &lt; 0.001)" id="a_F021.3" diagnostics="errorCode.F021.3 transactional.F021.3 transactional.en.F021.3 transactional.cy.F021.3 ">Total is valid if and only if it equals ( The sum of [22], [24], [25], [26], [27], [28], [29], [30], and [32] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p57">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:ChargesAndReliefs/ct:ProfitsBeforeCharges">
        <sch:assert test="(math:abs((.) - ((sum(../../ct:ProfitsBeforeOtherDeductions) - (sum(../../ct:DeductionsAndReliefs/ct:CVSLossRelief) + sum(../../ct:DeductionsAndReliefs/ct:ManagementExpenses) + sum(../../ct:DeductionsAndReliefs/ct:InterestDistributions) + sum(../../ct:DeductionsAndReliefs/ct:ScheduleALosses) + sum(../../ct:DeductionsAndReliefs/ct:CapitalAllowances) + sum(../../ct:DeductionsAndReliefs/ct:NonTradeDeficits) + sum(../../ct:DeductionsAndReliefs/ct:NonTradingLossIntangibles) + sum(../../ct:DeductionsAndReliefs/ct:TradingLosses) + sum(../../ct:DeductionsAndReliefs/ct:NonTradeCapitalAllowances))))) &lt; 0.001)" id="a_F022.1" diagnostics="errorCode.F022.1 transactional.F022.1 transactional.en.F022.1 transactional.cy.F022.1 ">[34] should equal ( [21] minus ( The sum of [22], [24], [25], [26], [27], [28], [29], [30], and [32] ) )</sch:assert>
        <sch:assert test="sum(../ct:ChargesPaid) &lt;= ." id="a_F023.1" diagnostics="errorCode.F023.1 transactional.F023.1 transactional.en.F023.1 transactional.cy.F023.1 ">If [34] present then [35] must not exceed [34]</sch:assert>
        <sch:assert test="(math:abs((../../ct:ChargeableProfits) - ((. - (sum(../ct:ChargesPaid) + sum(../ct:GroupRelief))))) &lt; 0.001)" id="a_F900.3" diagnostics="errorCode.F900.3 transactional.F900.3 transactional.en.F900.3 transactional.cy.F900.3 ">If [34] is present then [37] must equal [34] minus ( [35] + [36] ).</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p58">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:ChargesAndReliefs/ct:ChargesPaid">
        <sch:assert test="../ct:ProfitsBeforeCharges or ((.) - ((sum(../../ct:ProfitsBeforeOtherDeductions) - (sum(../../ct:DeductionsAndReliefs/ct:CVSLossRelief) + sum(../../ct:DeductionsAndReliefs/ct:ManagementExpenses) + sum(../../ct:DeductionsAndReliefs/ct:InterestDistributions) + sum(../../ct:DeductionsAndReliefs/ct:ScheduleALosses) + sum(../../ct:DeductionsAndReliefs/ct:CapitalAllowances) + sum(../../ct:DeductionsAndReliefs/ct:NonTradeDeficits) + sum(../../ct:DeductionsAndReliefs/ct:NonTradingLossIntangibles) + sum(../../ct:DeductionsAndReliefs/ct:TradingLosses) + sum(../../ct:DeductionsAndReliefs/ct:NonTradeCapitalAllowances)))) &lt; 0.001)" id="a_F023.0" diagnostics="errorCode.F023.0 transactional.F023.0 transactional.en.F023.0 transactional.cy.F023.0 ">If [34] is absent then [35] must not exceed [21] minus ([22] + [24] + [25] + [26] + [27] + [28] + [29] + [30] + F019])</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p59">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:ChargesAndReliefs/ct:GroupRelief">
        <sch:assert test="((.) - (((sum(../../ct:ProfitsBeforeOtherDeductions) - (sum(../../ct:DeductionsAndReliefs/ct:CVSLossRelief) + sum(../../ct:DeductionsAndReliefs/ct:ManagementExpenses) + sum(../../ct:DeductionsAndReliefs/ct:InterestDistributions) + sum(../../ct:DeductionsAndReliefs/ct:ScheduleALosses) + sum(../../ct:DeductionsAndReliefs/ct:CapitalAllowances) + sum(../../ct:DeductionsAndReliefs/ct:NonTradeDeficits) + sum(../../ct:DeductionsAndReliefs/ct:NonTradingLossIntangibles) + sum(../../ct:DeductionsAndReliefs/ct:TradingLosses) + sum(../../ct:DeductionsAndReliefs/ct:NonTradeCapitalAllowances))) - sum(../ct:ChargesPaid))) &lt; 0.001)" id="a_F025.1" diagnostics="errorCode.F025.1 transactional.F025.1 transactional.en.F025.1 transactional.cy.F025.1 ">[36] should not exceed ( ( [21] minus ( The sum of [22], [24], [25], [26], [27], [28], [29], [30], and [32] ) ) minus [35] )</sch:assert>
        <sch:assert test="not(../../../@ReturnType = &apos;new&apos;) or (.) &lt;= 0 or ../../../ct:GroupAndConsortium/ct:GroupAndConsortium/ct:ClaimToGroupRelief/ct:CompanyInformation/ct:TotalAmountClaimed" id="a_F025.2" diagnostics="errorCode.F025.2 transactional.F025.2 transactional.en.F025.2 transactional.cy.F025.2 ">If [Return type] is 'new' and there is an entry greater than zero in [36] then [C1] must be submitted.</sch:assert>
        <sch:assert test="(../../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600C = &apos;yes&apos;) or (../../../@ReturnType = &apos;amended&apos;)" id="a_F025.0" diagnostics="errorCode.F025.0 transactional.F025.0 transactional.en.F025.0 transactional.cy.F025.0 ">If Group relief is present the following should be true: [CT600C attached] equals 'yes' or [Return type] equals 'amended'</sch:assert>
        <sch:assert test="not(../../../@ReturnType = &apos;new&apos;) or (.) &lt;= 0 or ../../../ct:GroupAndConsortium/ct:GroupAndConsortium/ct:ClaimToGroupRelief/ct:ClaimAuthorisation/ct:AuthorisationOptions/ct:SimplifiedArrangementInForce or ../../../ct:GroupAndConsortium/ct:GroupAndConsortium/ct:ClaimToGroupRelief/ct:ClaimAuthorisation/ct:AuthorisationOptions/ct:CopyOfNoticesOfConsentAttached" id="a_F025.3" diagnostics="errorCode.F025.3 transactional.F025.3 transactional.en.F025.3 transactional.cy.F025.3 ">If [Return type] is 'new' and [36] is greater than zero then one or both of [Simplified arrangement in force] or [Copy of notices of consent attached] must be present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p60">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:ChargeableProfits">
        <sch:assert test=". = sum(../ct:CorporationTaxChargeable/ct:FinancialYearOne/ct:Details/ct:Profit) + sum(../ct:CorporationTaxChargeable/ct:FinancialYearTwo/ct:Details/ct:Profit)" id="a_F900.1" diagnostics="errorCode.F900.1 transactional.F900.1 transactional.en.F900.1 transactional.cy.F900.1 ">This must equal the sum of all iterations of [44] + the sum of all iterations of [54].</sch:assert>
        <sch:assert test="../ct:ChargesAndReliefs/ct:ProfitsBeforeCharges or (math:abs((.) - ((sum(../ct:ProfitsBeforeOtherDeductions) - (sum(../ct:DeductionsAndReliefs/ct:CVSLossRelief) + sum(../ct:DeductionsAndReliefs/ct:ManagementExpenses) + sum(../ct:DeductionsAndReliefs/ct:InterestDistributions) + sum(../ct:DeductionsAndReliefs/ct:ScheduleALosses) + sum(../ct:DeductionsAndReliefs/ct:CapitalAllowances) + sum(../ct:DeductionsAndReliefs/ct:NonTradeDeficits) + sum(../ct:DeductionsAndReliefs/ct:NonTradingLossIntangibles) + sum(../ct:DeductionsAndReliefs/ct:TradingLosses) + sum(../ct:DeductionsAndReliefs/ct:NonTradeCapitalAllowances) + sum(../ct:ChargesAndReliefs/ct:ChargesPaid) + sum(../ct:ChargesAndReliefs/ct:GroupRelief))))) &lt; 0.001)" id="a_F900.2" diagnostics="errorCode.F900.2 transactional.F900.2 transactional.en.F900.2 transactional.cy.F900.2 ">If [34] is absent then [37] must equal [21] minus ([22] + [24] + [25] + [26] + [27] + [28] + [29] + [30] + [32]) minus ([35] + [36])</sch:assert>
        <sch:assert test="(date:year(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;-P3M&apos;)))) - date:year(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From),normalize-space(&apos;-P3M&apos;)))) != 1) or ../ct:CorporationTaxChargeable/ct:FinancialYearTwo or not((.) &gt; 0)" id="a_F900.0" diagnostics="errorCode.F900.0 transactional.F900.0 transactional.en.F900.0 transactional.cy.F900.0 ">[53-56] must be submitted if [37] &gt; 0 and [AP To Date] falls in the financial year following the financial year of [AP From Date].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p61">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:RingFenceProfitsIncluded">
        <sch:assert test="translate(../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &gt;= translate(&apos;2007-04-01&apos;,&apos;-&apos;,&apos;&apos;)" id="a_F229.1" diagnostics="errorCode.F229.1 transactional.F229.1 transactional.en.F229.1 transactional.cy.F229.1 ">If Ring fence profits included is present the following should be true: [AP To Date] is on or after '2007-04-01'</sch:assert>
        <sch:assert test=". &lt;= ../ct:ChargeableProfits" id="a_F229.2" diagnostics="errorCode.F229.2 transactional.F229.2 transactional.en.F229.2 transactional.cy.F229.2 ">Ring fence profits included is valid if and only if it does not exceed [37]</sch:assert>
        <sch:assert test="(../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600I = &apos;yes&apos;) or (../../@ReturnType = &apos;amended&apos;)" id="a_F229.3" diagnostics="errorCode.F229.3 transactional.F229.3 transactional.en.F229.3 transactional.cy.F229.3 ">If [169] is present the following should be true: ( [CT600I attached] equals yes ) or ( [Return type] equals amended )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p62">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxCalculation/ct:StartingOrSmallCompaniesRate">
        <sch:assert test="../../ct:ChargeableProfits &gt; 0" id="a_F213.0" diagnostics="errorCode.F213.0 transactional.F213.0 transactional.en.F213.0 transactional.cy.F213.0 ">If Starting or small companies rate is present the following should be true: [37] exceeds 0</sch:assert>
        <sch:assert test="not(
                      ../../../ct:CompanyInformation/ct:CompanyType = 1
                    or
                      ../../../ct:CompanyInformation/ct:CompanyType = 2
                    or 
                      ../../../ct:CompanyInformation/ct:CompanyType = 3
                    )" id="a_F213.1" diagnostics="errorCode.F213.1 transactional.F213.1 transactional.en.F213.1 transactional.cy.F213.1 ">If [Company type] = 1, 2 or 3 then [42] must be absent.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p63">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:CorporationTaxChargeable/ct:FinancialYearOne/ct:Year">
        <sch:assert test="(.) = date:year(normalize-space(date:add(normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&apos;-P3M&apos;))))" id="a_F032.1" diagnostics="errorCode.F032.1 transactional.F032.1 transactional.en.F032.1 transactional.cy.F032.1 ">Must equal the equivalent financial year of the date in [AP From Date] (nb. This will be the same year as that entered in [AP From Date] if [AP From Date] is between 1st of April and 31st of December inclusive, or the year before that entered in [AP From Date] if 1st of January and 31st March inclusive).</sch:assert>
        <sch:assert test=". &gt;= 1998" id="a_F032.2" diagnostics="errorCode.F032.2 transactional.F032.2 transactional.en.F032.2 transactional.cy.F032.2 ">Year is valid if and only if it is not less than 1998</sch:assert>
        <sch:assert test="not (
                    date:year(normalize-space(date:add(normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&apos;-P3M&apos;)))) = date:year(normalize-space(date:add(normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)),normalize-space(&apos;-P3M&apos;))))
                  )
                  or (
                    sum(../ct:Details/ct:Profit) = ../../../ct:ChargeableProfits
                  )" id="a_F032.3" diagnostics="errorCode.F032.3 transactional.F032.3 transactional.en.F032.3 transactional.cy.F032.3 ">Where [AP From Date] and [AP To Date] are in the same financial year, the sum of all iterations of [44] must equal [37].</sch:assert>
        <sch:assert test="date:year(normalize-space(date:add(normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&apos;-P3M&apos;)))) = date:year(normalize-space(date:add(normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)),normalize-space(&apos;-P3M&apos;))))
                    or
                      sum(../ct:Details/ct:Profit) = round(../../../ct:ChargeableProfits * round((date:seconds(normalize-space(date:difference(normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(concat( (.) + 1 , &apos;-03-31&apos;))))) div 86400) + 1) div round((date:seconds(normalize-space(date:difference(normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1))" id="a_F032.4" diagnostics="errorCode.F032.4 transactional.F032.4 transactional.en.F032.4 transactional.cy.F032.4 ">Where [AP From Date] and [AP To Date] are in different financial years: Sum of all iterations of [44] must equal [37] divided by the number of days between [AP From Date] and [AP To Date] inclusive multiplied by the number of days between [AP From Date] and the end of financial year [43] (inclusive). Rounding is applied such that values from x.5 upwards are rounded up, and values less than x.5 are rounded down (where x represents a whole number).</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p64">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:CorporationTaxChargeable/ct:FinancialYearOne/ct:Details/ct:TaxRate">
        <sch:assert test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 5)
                    or
                      (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    33

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    31

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    28

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
    26

+
    number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
    23

+
    number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001)
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400))) *
    25

+
    number((round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400))) *
    19

+
    number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001))
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2000-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    10

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    0)) &lt; 0.001))
                    or
                      ((math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1993-04-01&apos;)) div 86400))) *
    25

+
    number((round(date:seconds(normalize-space(&apos;1993-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1994-04-01&apos;)) div 86400))) *
    22.5

+
    number((round(date:seconds(normalize-space(&apos;1994-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001))
                    or
                      (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    30)) &lt; 0.001))
                    or
                      (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    19

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    19)) &lt; 0.001))" id="a_F034.5" diagnostics="errorCode.F034.5 transactional.F034.5 transactional.en.F034.5 transactional.cy.F034.5 ">If [Company type] = '5' then [45] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [EQUIV. LOW CT RATE] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
        <sch:assert test="../../../../../ct:CompanyInformation/ct:CompanyType
                    or
                      (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    33

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    31

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    28

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
    26

+
    number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
    23

+
    number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001)
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400))) *
    25

+
    number((round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400))) *
    19

+
    number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001))
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2000-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    10

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    0)) &lt; 0.001))
                    or
                      (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    30)) &lt; 0.001))
                    or
                      (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    19

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    19)) &lt; 0.001))" id="a_F034.4" diagnostics="errorCode.F034.4 transactional.F034.4 transactional.en.F034.4 transactional.cy.F034.4 ">If [Company type] is absent then [45] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
        <sch:assert test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 4 or ../../../../../ct:CompanyInformation/ct:CompanyType = 6 or ../../../../../ct:CompanyInformation/ct:CompanyType = 7 or ../../../../../ct:CompanyInformation/ct:CompanyType = 8 or ../../../../../ct:CompanyInformation/ct:CompanyType = 9)
                    or
                      (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    33

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    31

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    28

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
    26

+
    number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
    23

+
    number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001)
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400))) *
    25

+
    number((round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400))) *
    19

+
    number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001))
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2000-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    10

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    0)) &lt; 0.001))" id="a_F034.3" diagnostics="errorCode.F034.3 transactional.F034.3 transactional.en.F034.3 transactional.cy.F034.3 ">If [Company type] = '4' or '6' or '7' or '8' or '9' then [45] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:assert>
        <sch:assert test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 1) or
                      (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1993-04-01&apos;)) div 86400))) *
    25

+
    number((round(date:seconds(normalize-space(&apos;1993-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1994-04-01&apos;)) div 86400))) *
    22.5

+
    number((round(date:seconds(normalize-space(&apos;1994-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001)" id="a_F034.1" diagnostics="errorCode.F034.1 transactional.F034.1 transactional.en.F034.1 transactional.cy.F034.1 ">If [Company type] is 1, [45] must be [EQUIV. LOW CT RATE].</sch:assert>
        <sch:assert test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 2 or ../../../../../ct:CompanyInformation/ct:CompanyType = 3) or
                      (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    33

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    31

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    28

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
    26

+
    number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
    23

+
    number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001)" id="a_F034.2" diagnostics="errorCode.F034.2 transactional.F034.2 transactional.en.F034.2 transactional.cy.F034.2 ">If [Company type] is 2 or 3, [45] must be [FULL RATE OF CT].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p65">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:CorporationTaxChargeable/ct:FinancialYearOne/ct:Details/ct:Tax">
        <sch:assert test="(math:abs((.) - (( round ( (../ct:Profit * (translate(string(../ct:TaxRate),&apos;.&apos;,&apos;&apos;))) div 100 ) * 100) div 10000)) &lt; 0.001)" id="a_F035.0" diagnostics="errorCode.F035.0 transactional.F035.0 transactional.en.F035.0 transactional.cy.F035.0 ">For each iteration of [44-46], [46] Must equal [44] multiplied by ([45] divided by 100) rounded to two decimal places (round up if third decimal is greater than or equal to 5, otherwise round down)</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p67">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:CorporationTaxChargeable/ct:FinancialYearTwo/ct:Year">
        <sch:assert test="(math:abs((.) - ((../../ct:FinancialYearOne/ct:Year + 1))) &lt; 0.001)" id="a_F039.0" diagnostics="errorCode.F039.0 transactional.F039.0 transactional.en.F039.0 transactional.cy.F039.0 ">Year is valid if and only if it equals ( [43] plus 1 )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p68">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:CorporationTaxChargeable/ct:FinancialYearTwo/ct:Details/ct:TaxRate">
        <sch:assert test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 5)
                    or
                      (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    33

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    31

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    28

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
    26

+
    number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
    23

+
    number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001)
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400))) *
    25

+
    number((round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400))) *
    19

+
    number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001))
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2000-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    10

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    0)) &lt; 0.001))
                    or
                      ((math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1993-04-01&apos;)) div 86400))) *
    25

+
    number((round(date:seconds(normalize-space(&apos;1993-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1994-04-01&apos;)) div 86400))) *
    22.5

+
    number((round(date:seconds(normalize-space(&apos;1994-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001))
                    or
                      (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    30)) &lt; 0.001))
                    or
                      (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    19

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    19)) &lt; 0.001))" id="a_F041.5" diagnostics="errorCode.F041.5 transactional.F041.5 transactional.en.F041.5 transactional.cy.F041.5 ">If [Company type] = '5' then [55] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [EQUIV. LOW CT RATE] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
        <sch:assert test="../../../../../ct:CompanyInformation/ct:CompanyType
                    or
                      (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    33

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    31

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    28

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
    26

+
    number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
    23

+
    number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001)
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400))) *
    25

+
    number((round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400))) *
    19

+
    number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001))
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2000-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    10

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    0)) &lt; 0.001))
                    or
                      (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    30)) &lt; 0.001))
                    or
                      (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    19

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    19)) &lt; 0.001))" id="a_F041.4" diagnostics="errorCode.F041.4 transactional.F041.4 transactional.en.F041.4 transactional.cy.F041.4 ">If [Company type] is absent then [55] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
        <sch:assert test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 4 or ../../../../../ct:CompanyInformation/ct:CompanyType = 6 or ../../../../../ct:CompanyInformation/ct:CompanyType = 7 or ../../../../../ct:CompanyInformation/ct:CompanyType = 8 or ../../../../../ct:CompanyInformation/ct:CompanyType = 9)
                    or
                      (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    33

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    31

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    28

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
    26

+
    number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
    23

+
    number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001)
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400))) *
    25

+
    number((round(date:seconds(normalize-space(&apos;1996-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400))) *
    19

+
    number((round(date:seconds(normalize-space(&apos;2007-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    20

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001))
                    or
                      ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;) and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;2000-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400))) *
    10

+
    number((round(date:seconds(normalize-space(&apos;2002-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    0)) &lt; 0.001))" id="a_F041.3" diagnostics="errorCode.F041.3 transactional.F041.3 transactional.en.F041.3 transactional.cy.F041.3 ">If [Company type] = '4' or '6' or '7' or '8' or '9' then [55] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:assert>
        <sch:assert test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 1) or
                      (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1993-04-01&apos;)) div 86400))) *
    25

+
    number((round(date:seconds(normalize-space(&apos;1993-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1994-04-01&apos;)) div 86400))) *
    22.5

+
    number((round(date:seconds(normalize-space(&apos;1994-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001)" id="a_F041.1" diagnostics="errorCode.F041.1 transactional.F041.1 transactional.en.F041.1 transactional.cy.F041.1 ">If [Company type] is 1, [55] must be [EQUIV. LOW CT RATE].</sch:assert>
        <sch:assert test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 2 or ../../../../../ct:CompanyInformation/ct:CompanyType = 3) or
                      (math:abs((.) - (number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400))) *
    33

+
    number((round(date:seconds(normalize-space(&apos;1997-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400))) *
    31

+
    number((round(date:seconds(normalize-space(&apos;1999-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
    30

+
    number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400))) *
    28

+
    number((round(date:seconds(normalize-space(&apos;2011-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
    26

+
    number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400))) *
    24

+
    number((round(date:seconds(normalize-space(&apos;2013-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
    23

+
    number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
     number((round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400) &lt; round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400))) *
    21

+
    number((round(date:seconds(normalize-space(&apos;2015-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, &apos;-04-01&apos;))) div 86400))) *
    20)) &lt; 0.001)" id="a_F041.2" diagnostics="errorCode.F041.2 transactional.F041.2 transactional.en.F041.2 transactional.cy.F041.2 ">If [Company type] is 2 or 3, [55] must be [FULL RATE OF CT].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p69">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:CorporationTaxChargeable/ct:FinancialYearTwo/ct:Details/ct:Tax">
        <sch:assert test="(math:abs((.) - (( round ( (../ct:Profit * (translate(string(../ct:TaxRate),&apos;.&apos;,&apos;&apos;))) div 100 ) * 100) div 10000)) &lt; 0.001)" id="a_F042.0" diagnostics="errorCode.F042.0 transactional.F042.0 transactional.en.F042.0 transactional.cy.F042.0 ">For each iteration of the group: The box [56] must equal [54] multiplied by ([55] divided by 100) rounded to two decimal places (round up if third decimal is greater than or equal to 5, otherwise round down).</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p66">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:CorporationTaxChargeable/ct:FinancialYearTwo">
        <sch:assert test="date:year(normalize-space(date:add(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From),normalize-space(&apos;-P3M&apos;)))) != date:year(normalize-space(date:add(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;-P3M&apos;))))" id="a_N052b.0" diagnostics="errorCode.N052b.0 transactional.N052b.0 transactional.en.N052b.0 transactional.cy.N052b.0 ">[53-56] must not be submitted if [AP From Date] and [AP To Date] both fall within the same financial year.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p70">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TotalChargeableCorporationTax">
        <sch:assert test="(math:abs((.) - (sum(../ct:CorporationTaxChargeable/ct:FinancialYearOne/ct:Details/ct:Tax) + sum(../ct:CorporationTaxChargeable/ct:FinancialYearTwo/ct:Details/ct:Tax))) &lt; 0.001)" id="a_F046.0" diagnostics="errorCode.F046.0 transactional.F046.0 transactional.en.F046.0 transactional.cy.F046.0 ">The box [63] must equal the sum all iterations of [46] + all iterations of [56]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p72">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:FurtherTaxCalculations/ct:MarginalRateRelief">
        <sch:assert test=". &lt; sum(../../ct:TotalChargeableCorporationTax)" id="a_F047.4" diagnostics="errorCode.F047.4 transactional.F047.4 transactional.en.F047.4 transactional.cy.F047.4 ">Marginal rate relief is valid if and only if it is less than [63]</sch:assert>
        <sch:assert test="(../../../ct:CompanyInformation/ct:CompanyType = 4)
                or 
                  (../../../ct:CompanyInformation/ct:CompanyType = 5)
                or 
                  (../../../ct:CompanyInformation/ct:CompanyType = 6)
                or 
                  (../../../ct:CompanyInformation/ct:CompanyType = 7)
                or 
                  (../../../ct:CompanyInformation/ct:CompanyType = 8)
                or 
                  (../../../ct:CompanyInformation/ct:CompanyType = 9)
                or 
                  not(../../../ct:CompanyInformation/ct:CompanyType)" id="a_F047.0" diagnostics="errorCode.F047.0 transactional.F047.0 transactional.en.F047.0 transactional.cy.F047.0 ">If Marginal rate relief is present the following should be true: [Company type] equals '4' or [Company type] equals '5' or [Company type] equals '6' or [Company type] equals '7' or [Company type] equals '8' or [Company type] equals '9' or not ( [Company type] )</sch:assert>
        <sch:assert test="../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = &apos;yes&apos;" id="a_F047.1" diagnostics="errorCode.F047.1 transactional.F047.1 transactional.en.F047.1 transactional.cy.F047.1 ">If [64] is present the following should be true: [42] equals yes</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p73">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:FurtherTaxCalculations/ct:CTNetOfMRR">
        <sch:assert test="sum(../../ct:TotalChargeableCorporationTax) &gt; 0" id="a_F215.1" diagnostics="errorCode.F215.1 transactional.F215.1 transactional.en.F215.1 transactional.cy.F215.1 ">If CT Net of MRR is present the following should be true: [63] exceeds 0</sch:assert>
        <sch:assert test="(math:abs((.) - ((sum(../../ct:TotalChargeableCorporationTax) - sum(../ct:MarginalRateRelief)))) &lt; 0.001)" id="a_F215.2" diagnostics="errorCode.F215.2 transactional.F215.2 transactional.en.F215.2 transactional.cy.F215.2 ">CT Net of MRR is valid if and only if it equals ( [63] minus [64] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p75">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:UnderlyingRateOfCT">
        <sch:assert test="((.) - (19) &lt; 0.001)" id="a_F216.1" diagnostics="errorCode.F216.1 transactional.F216.1 transactional.en.F216.1 transactional.cy.F216.1 ">Must not be greater than [NCD RATE OF CT]</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2006-03-31&apos;)) div 86400)))
                    or
                  (sum(../../ct:CTNetOfMRR) = 0 and (.) = 0)
                    or
                  (not(sum(../../ct:CTNetOfMRR) = 0) and not(0 = ../../../ct:ChargeableProfits) and ((math:abs((.) - (floor((100 * (translate(string(../../ct:CTNetOfMRR),&apos;.&apos;,&apos;&apos;))) div ../../../ct:ChargeableProfits) div 100)) &lt; 0.001)))" id="a_F216.0" diagnostics="errorCode.F216.0 transactional.F216.0 transactional.en.F216.0 transactional.cy.F216.0 ">If [AP To Date] is on or before '2006-03-31' then the box [66] must equal [65] divided by [37] multiplied by 100</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p76">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:NonCorporateDistributions">
        <sch:assert test="(translate(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From,&apos;-&apos;,&apos;&apos;) &gt;= translate(&apos;2004-04-01&apos;,&apos;-&apos;,&apos;&apos;))
                      or
                    (translate(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &lt; translate(&apos;2004-04-01&apos;,&apos;-&apos;,&apos;&apos;))
                      or
                    (. &lt;= sum(../../../ct:CorporationTaxChargeable/ct:FinancialYearTwo/ct:Details/ct:Profit))" id="a_F217.1" diagnostics="errorCode.F217.1 transactional.F217.1 transactional.en.F217.1 transactional.cy.F217.1 ">If [AP From Date] is strictly before '2004-04-01' and [AP To Date] is on or after '2004-04-01' then [67] must not exceed the sum of all iterations of [54]</sch:assert>
        <sch:assert test="(translate(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From,&apos;-&apos;,&apos;&apos;) &gt; translate(&apos;2006-03-31&apos;,&apos;-&apos;,&apos;&apos;))
                      or
                    (translate(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &lt;= translate(&apos;2006-03-31&apos;,&apos;-&apos;,&apos;&apos;))
                      or
                    (. &lt;= sum(../../../ct:CorporationTaxChargeable/ct:FinancialYearOne/ct:Details/ct:Profit))" id="a_F217.2" diagnostics="errorCode.F217.2 transactional.F217.2 transactional.en.F217.2 transactional.cy.F217.2 ">If [AP From Date] is on or before '2006-03-31'' and [AP To Date] is strictly after '2006-03-31'' then [67] must not exceed the sum of all iterations of [44]</sch:assert>
        <sch:assert test=". &lt;= ../../../ct:ChargeableProfits" id="a_F217.6" diagnostics="errorCode.F217.6 transactional.F217.6 transactional.en.F217.6 transactional.cy.F217.6 ">Non corporate distributions is valid if and only if it does not exceed [37]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p77">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:TaxAtNCDRate">
        <sch:assert test="(math:abs((.) - ((../ct:NonCorporateDistributions * 19) div 100)) &lt; 0.001)" id="a_F218.1" diagnostics="errorCode.F218.1 transactional.F218.1 transactional.en.F218.1 transactional.cy.F218.1 ">Must equal [67] multiplied by (the current [NCD RATE OF CT] divided by 100)</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p78">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:TaxAtUnderlyingRate">
        <sch:assert test="not((round(date:seconds(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2006-03-31&apos;)) div 86400))) or (math:abs((.) - (( round ( ((../../../ct:ChargeableProfits - ../ct:NonCorporateDistributions) * (translate(string(../ct:UnderlyingRateOfCT),&apos;.&apos;,&apos;&apos;))) div 100 ) * 100) div 10000)) &lt; 0.001)" id="a_F219.0" diagnostics="errorCode.F219.0 transactional.F219.0 transactional.en.F219.0 transactional.cy.F219.0 ">If [AP To Date] is on or before '2006-03-31', then the box [69] must equal ([37] minus [67]) multiplied by [66] divided by 100, with the following rounding rules: round up to two decimal places if the third decimal digit is greater than or equal to 5, otherwise round down to 2dp</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2006-03-31&apos;)) div 86400)) and (round(date:seconds(normalize-space(&apos;2006-03-31&apos;)) div 86400) &lt; round(date:seconds(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))
                  or
                  (math:abs((.) - (( round ( (((sum(../../../ct:CorporationTaxChargeable/ct:FinancialYearOne/ct:Details/ct:Profit) - ../ct:NonCorporateDistributions) * (translate(string(../ct:UnderlyingRateOfCT),&apos;.&apos;,&apos;&apos;)))) div 100 ) * 100) div 10000)) &lt; 0.001)" id="a_F219.1" diagnostics="errorCode.F219.1 transactional.F219.1 transactional.en.F219.1 transactional.cy.F219.1 ">If [AP From Date] is on or before '2006-03-31' and [AP To Date] is strictly after '2006-03-31', then [69] must equal (the sum of all iterations of [44] minus [67]) multiplied by [66] divided by 100, with the following rounding rules: round up to two decimal places if the third decimal digit is greater than or equal to 5, otherwise round down to 2dp.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p74">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation">
        <sch:assert test="not((translate(../../../ct:CompanyInformation/ct:PeriodCovered/ct:From,&apos;-&apos;,&apos;&apos;) &gt;= translate(&apos;2006-04-01&apos;,&apos;-&apos;,&apos;&apos;)) and (.))" id="a_N054b.1" diagnostics="errorCode.N054b.1 transactional.N054b.1 transactional.en.N054b.1 transactional.cy.N054b.1 ">Non corporate distributions calculation should not be present if [AP From Date] is on or after '2006-04-01'</sch:assert>
        <sch:assert test="not((translate(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &lt;= translate(&apos;2004-03-31&apos;,&apos;-&apos;,&apos;&apos;)) and (.))" id="a_N054b.3" diagnostics="errorCode.N054b.3 transactional.N054b.3 transactional.en.N054b.3 transactional.cy.N054b.3 ">Non corporate distributions calculation should not be present if [AP To Date] is on or before '2004-03-31'</sch:assert>
        <sch:assert test="../../ct:ChargeableProfits &gt; 0" id="a_N054b.0" diagnostics="errorCode.N054b.0 transactional.N054b.0 transactional.en.N054b.0 transactional.cy.N054b.0 ">If Non corporate distributions calculation is present the following should be true: [37] exceeds 0</sch:assert>
        <sch:assert test="../../ct:ChargeableProfits &lt;= 50000.00" id="a_N054b.4" diagnostics="errorCode.N054b.4 transactional.N054b.4 transactional.en.N054b.4 transactional.cy.N054b.4 ">If Non corporate distributions calculation is present the following should be true: [37] does not exceed [Non Corporate Distributions Limit]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p71">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:FurtherTaxCalculations">
        <sch:assert test="not(sum(ct:MarginalRateRelief) &gt; 0) or ct:CTNetOfMRR" id="a_N002.12" diagnostics="errorCode.N002.12 transactional.N002.12 transactional.en.N002.12 transactional.cy.N002.12 ">CT Net of MRR should be present if [64] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p79">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:NetCorporationTaxChargeable">
        <sch:assert test="not(../ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation)
              or 
            (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2006-03-31&apos;)) div 86400))
              or
            (math:abs((.) - (sum(../ct:CorporationTaxChargeable/ct:FinancialYearTwo/ct:Details/ct:Tax) + sum(../ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:TaxAtNCDRate) + sum(../ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:TaxAtUnderlyingRate))) &lt; 0.001)" id="a_F220.0" diagnostics="errorCode.F220.0 transactional.F220.0 transactional.en.F220.0 transactional.cy.F220.0 ">If the group [66-69] is present and [AP To Date] is strictly after '2006-03-31' then [70] box must equal the sum of all iterations of [56] plus ([68] + [69]).</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p81">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReliefsAndDeductions/ct:CVSInvestmentRelief">
        <sch:assert test=". &lt;= ../../ct:NetCorporationTaxChargeable" id="a_F178.2" diagnostics="errorCode.F178.2 transactional.F178.2 transactional.en.F178.2 transactional.cy.F178.2 ">CVS investment relief is valid if and only if it does not exceed [70]</sch:assert>
        <sch:assert test="(../../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600G = &apos;yes&apos;) or (../../../@ReturnType = &apos;amended&apos;)" id="a_F178.0" diagnostics="errorCode.F178.0 transactional.F178.0 transactional.en.F178.0 transactional.cy.F178.0 ">If CVS investment relief is present the following should be true: [CT600G attached] equals 'yes' or [Return type] equals 'amended'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p82">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReliefsAndDeductions/ct:CommunityInvestmentTaxCredit">
        <sch:assert test="((.) - ((../../ct:NetCorporationTaxChargeable - sum(../ct:CVSInvestmentRelief))) &lt; 0.001)" id="a_F202.2" diagnostics="errorCode.F202.2 transactional.F202.2 transactional.en.F202.2 transactional.cy.F202.2 ">Community investment tax credit is valid if and only if it does not exceed ( [70] minus [71] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p83">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReliefsAndDeductions/ct:DoubleTaxation/ct:DoubleTaxationRelief">
        <sch:assert test="((.) - ((../../../ct:NetCorporationTaxChargeable - (sum(../../ct:CVSInvestmentRelief) + sum(../../ct:CommunityInvestmentTaxCredit)))) &lt; 0.001)" id="a_F048.1" diagnostics="errorCode.F048.1 transactional.F048.1 transactional.en.F048.1 transactional.cy.F048.1 ">Double taxation relief is valid if and only if it does not exceed ( [70] minus ( [71] plus [72] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p84">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReliefsAndDeductions/ct:DoubleTaxation/ct:UnderlyingRate">
        <sch:assert test="sum(../ct:DoubleTaxationRelief) &gt; 0" id="a_F214.0" diagnostics="errorCode.F214.0 transactional.F214.0 transactional.en.F214.0 transactional.cy.F214.0 ">If Underlying rate is present the following should be true: [73] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p85">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReliefsAndDeductions/ct:DoubleTaxation/ct:AmountCarriedBack">
        <sch:assert test="sum(../ct:DoubleTaxationRelief) &gt; 0" id="a_F186.0" diagnostics="errorCode.F186.0 transactional.F186.0 transactional.en.F186.0 transactional.cy.F186.0 ">If Amount carried back is present the following should be true: [73] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p86">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReliefsAndDeductions/ct:AdvanceCorporationTax">
        <sch:assert test="((.) - ((../../ct:NetCorporationTaxChargeable - (sum(../ct:CVSInvestmentRelief) + sum(../ct:CommunityInvestmentTaxCredit) + sum(../ct:DoubleTaxation/ct:DoubleTaxationRelief)))) &lt; 0.001)" id="a_F049.2" diagnostics="errorCode.F049.2 transactional.F049.2 transactional.en.F049.2 transactional.cy.F049.2 ">Advance corporation tax is valid if and only if it does not exceed ( [70] minus ( The sum of [71], [72], and [73] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p87">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReliefsAndDeductions/ct:TotalReliefsAndDeductions">
        <sch:assert test="(math:abs((.) - ((sum(../ct:CVSInvestmentRelief) + sum(../ct:CommunityInvestmentTaxCredit) + sum(../ct:DoubleTaxation/ct:DoubleTaxationRelief) + sum(../ct:AdvanceCorporationTax)))) &lt; 0.001)" id="a_F051.2" diagnostics="errorCode.F051.2 transactional.F051.2 transactional.en.F051.2 transactional.cy.F051.2 ">Total reliefs and deductions is valid if and only if it equals ( The sum of [71], [72], [73], and [76] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p80">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReliefsAndDeductions">
        <sch:assert test="not(ct:CVSInvestmentRelief) or ct:TotalReliefsAndDeductions" id="a_F051.3" diagnostics="errorCode.F051.3 transactional.F051.3 transactional.en.F051.3 transactional.cy.F051.3 ">Total reliefs and deductions should be present if [71]</sch:assert>
        <sch:assert test="not(ct:CommunityInvestmentTaxCredit) or ct:TotalReliefsAndDeductions" id="a_F051.4" diagnostics="errorCode.F051.4 transactional.F051.4 transactional.en.F051.4 transactional.cy.F051.4 ">Total reliefs and deductions should be present if [72]</sch:assert>
        <sch:assert test="not(ct:DoubleTaxation/ct:DoubleTaxationRelief) or ct:TotalReliefsAndDeductions" id="a_F051.5" diagnostics="errorCode.F051.5 transactional.F051.5 transactional.en.F051.5 transactional.cy.F051.5 ">Total reliefs and deductions should be present if [73]</sch:assert>
        <sch:assert test="not( ct:AdvanceCorporationTax) or ct:TotalReliefsAndDeductions" id="a_F051.6" diagnostics="errorCode.F051.6 transactional.F051.6 transactional.en.F051.6 transactional.cy.F051.6 ">Total reliefs and deductions should be present if [76]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p88">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:NetCorporationTaxLiability">
        <sch:assert test="(math:abs((.) - ((../ct:NetCorporationTaxChargeable - sum(../ct:TaxReliefsAndDeductions/ct:TotalReliefsAndDeductions)))) &lt; 0.001)" id="a_F052.1" diagnostics="errorCode.F052.1 transactional.F052.1 transactional.en.F052.1 transactional.cy.F052.1 ">Net corporation tax liability is valid if and only if it equals ( [70] minus [77] )</sch:assert>
        <sch:assert test="not(../ct:TaxChargeable) or (math:abs((sum(../ct:TaxChargeable)) - (((.) + sum(../ct:Payable) + sum(../ct:TaxPayableS747) + sum(../ct:S501AtaxCharge)))) &lt; 0.001)" id="a_F093.1" diagnostics="errorCode.F093.1 transactional.F093.1 transactional.en.F093.1 transactional.cy.F093.1 ">If [78] is present, then [83] should equal [78] + [79] + [81] + [82].</sch:assert>
        <sch:assert test="../ct:TaxChargeable or ../../@Short" id="a_F093.3" diagnostics="errorCode.F093.3 transactional.F093.3 transactional.en.F093.3 transactional.cy.F093.3 ">[83] should be present if not ( [N111] ) and [78]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p89">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:A11Completed">
        <sch:assert test="../ct:Payable" id="a_F096.0" diagnostics="errorCode.F096.0 transactional.F096.0 transactional.en.F096.0 transactional.cy.F096.0 ">If A11 completed is present the following should be true: [79]</sch:assert>
        <sch:assert test="not(
                  (../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600A = &apos;yes&apos;) and not(../../ct:LoansByCloseCompanies/ct:LoanLaterReliefNow/ct:ReliefDue)
                ) or (
                  not((.) = &apos;yes&apos;)
                )" id="a_F096.1" diagnostics="errorCode.F096.1 transactional.F096.1 transactional.en.F096.1 transactional.cy.F096.1 ">If [CT600A attached] = 'yes' and [A11] is absent, [80] must not be 'yes'.</sch:assert>
        <sch:assert test="not(
                  (../../@ReturnType = &apos;new&apos;) and not(../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600A = &apos;yes&apos;)
                ) or (
                  not((.))
                )" id="a_F096.2" diagnostics="errorCode.F096.2 transactional.F096.2 transactional.en.F096.2 transactional.cy.F096.2 ">If [Return type] = 'new' and [CT600A attached] is not 'yes' then [80] must not be 'yes'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p90">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:Payable">
        <sch:assert test="not(((../../@ReturnType = &apos;new&apos;) and not(../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600A = &apos;yes&apos;)) and (.))" id="a_F097.0" diagnostics="errorCode.F097.0 transactional.F097.0 transactional.en.F097.0 transactional.cy.F097.0 ">Payable should not be present if [Return type] equals 'new' and [CT600A attached] != 'yes'</sch:assert>
        <sch:assert test="../ct:TaxChargeable or ../../@Short" id="a_F093.4" diagnostics="errorCode.F093.4 transactional.F093.4 transactional.en.F093.4 transactional.cy.F093.4 ">[83] should be present if not ( [N111] ) and [79]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p91">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxPayableS747">
        <sch:assert test="../ct:TaxChargeable or ../../@Short" id="a_F093.5" diagnostics="errorCode.F093.5 transactional.F093.5 transactional.en.F093.5 transactional.cy.F093.5 ">[83] should be present if not ( [N111] ) and [81]</sch:assert>
        <sch:assert test="not(((../../@ReturnType = &apos;new&apos;) and (not(../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600B = &apos;yes&apos;))) and (.))" id="a_F098.0" diagnostics="errorCode.F098.0 transactional.F098.0 transactional.en.F098.0 transactional.cy.F098.0 ">Tax payable s747 should not be present if [Return type] equals 'new' and [CT600B attached] != 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p92">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:S501AtaxCharge">
        <sch:assert test="not(((../../@ReturnType = &apos;new&apos;) and (not(../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600I = &apos;yes&apos;))) and (.))" id="a_F203.1" diagnostics="errorCode.F203.1 transactional.F203.1 transactional.en.F203.1 transactional.cy.F203.1 ">S501A tax charge should not be present if [Return type] equals 'new' and [CT600I attached] != 'yes'</sch:assert>
        <sch:assert test="../ct:TaxChargeable or ../../@Short" id="a_F093.6" diagnostics="errorCode.F093.6 transactional.F093.6 transactional.en.F093.6 transactional.cy.F093.6 ">[83] should be present if not ( [N111] ) and [82]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p93">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxChargeable">
        <sch:assert test="../ct:NetCorporationTaxLiability or (math:abs((.) - (((../ct:NetCorporationTaxChargeable - sum(../ct:TaxReliefsAndDeductions/ct:TotalReliefsAndDeductions)) + sum(../ct:Payable) + sum(../ct:TaxPayableS747) + sum(../ct:S501AtaxCharge)))) &lt; 0.001)" id="a_F093.2" diagnostics="errorCode.F093.2 transactional.F093.2 transactional.en.F093.2 transactional.cy.F093.2 ">If [78] is absent, then [83] should equal [70] minus [77] + [79] + [81] + [82].</sch:assert>
        <sch:assert test="not(../ct:IncomeTax/ct:TaxRepayable) or (math:abs((sum(../ct:IncomeTax/ct:TaxRepayable)) - ((sum(../ct:IncomeTax/ct:DeductedIncomeTax) - (.)))) &lt; 0.001)" id="a_F055.1" diagnostics="errorCode.F055.1 transactional.F055.1 transactional.en.F055.1 transactional.cy.F055.1 ">If [83] is present then [85] must equal [84] - [83].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p94">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:IncomeTax/ct:TaxRepayable">
        <sch:assert test="../../ct:TaxChargeable or (math:abs(((.)) - ((sum(../ct:DeductedIncomeTax) + sum(../../ct:TaxReliefsAndDeductions/ct:TotalReliefsAndDeductions) - (../../ct:NetCorporationTaxChargeable + sum(../../ct:Payable) + sum(../../ct:TaxPayableS747) + sum(../../ct:S501AtaxCharge))))) &lt; 0.001)" id="a_F055.2" diagnostics="errorCode.F055.2 transactional.F055.2 transactional.en.F055.2 transactional.cy.F055.2 ">If [83] is absent then [85] must equal [84] + [77] minus ([70] + [79] + [81] + [82])</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p95">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxPayable">
        <sch:assert test="not(../ct:TaxChargeable) or ((((sum(../ct:TaxChargeable) - sum(../ct:IncomeTax/ct:DeductedIncomeTax))) - (0) &gt; -0.001) and (math:abs((.) - ((sum(../ct:TaxChargeable) - sum(../ct:IncomeTax/ct:DeductedIncomeTax)))) &lt; 0.001)) or ((((sum(../ct:TaxChargeable) - sum(../ct:IncomeTax/ct:DeductedIncomeTax))) - (0) &lt;= -0.001) and (. = 0))" id="a_F163.0" diagnostics="errorCode.F163.0 transactional.F163.0 transactional.en.F163.0 transactional.cy.F163.0 ">If [83] is present then [86] must equal [83] minus [84], where the result is equal to or greater than zero. Enter 0.00 if [83] minus [84] is negative.</sch:assert>
        <sch:assert test="../ct:TaxChargeable or ((((../ct:NetCorporationTaxChargeable + sum(../ct:Payable) + sum(../ct:TaxPayableS747) + sum(../ct:S501AtaxCharge) - (sum(../ct:IncomeTax/ct:DeductedIncomeTax) + sum(../ct:TaxReliefsAndDeductions/ct:TotalReliefsAndDeductions)))) - (0) &gt; -0.001) and (math:abs((.) - ((../ct:NetCorporationTaxChargeable + sum(../ct:Payable) + sum(../ct:TaxPayableS747) + sum(../ct:S501AtaxCharge) - (sum(../ct:IncomeTax/ct:DeductedIncomeTax) + sum(../ct:TaxReliefsAndDeductions/ct:TotalReliefsAndDeductions))))) &lt; 0.001)) or ((((../ct:NetCorporationTaxChargeable + sum(../ct:Payable) + sum(../ct:TaxPayableS747) + sum(../ct:S501AtaxCharge) - (sum(../ct:IncomeTax/ct:DeductedIncomeTax) + sum(../ct:TaxReliefsAndDeductions/ct:TotalReliefsAndDeductions)))) - (0) &lt;= -0.001) and (. = 0))" id="a_F163.1" diagnostics="errorCode.F163.1 transactional.F163.1 transactional.en.F163.1 transactional.cy.F163.1 ">If [83] is absent then [86] must equal ([70] + [79] + [81] + [82]) minus ([84] + [77]), where the result is equal to or greater than zero. Enter 0.00 if that sum is negative.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p96">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:RandDCredit">
        <sch:assert test="translate(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &gt;= &apos;20000401&apos;" id="a_F179.1" diagnostics="errorCode.F179.1 transactional.F179.1 transactional.en.F179.1 transactional.cy.F179.1 ">If R and D Credit is present the following should be true: [AP To Date] is on or after '2000-04-01'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p97">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:LandOrLifeCredit">
        <sch:assert test="translate(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &gt;= &apos;20010401&apos;" id="a_F184.1" diagnostics="errorCode.F184.1 transactional.F184.1 transactional.en.F184.1 transactional.cy.F184.1 ">If land or life credit is present the following should be true: [AP To Date] is on or after '2001-04-01'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p98">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:CapitalAllowancesFirstYearTaxCredit">
        <sch:assert test="translate(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &gt;= &apos;20080401&apos;" id="a_F814.0" diagnostics="errorCode.F814.0 transactional.F814.0 transactional.en.F814.0 transactional.cy.F814.0 ">If Capital allowances first year tax credit is present the following should be true: [AP To Date] is on or after '2008-04-01'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p99">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:RDCreditPayable">
        <sch:assert test="(((sum(../ct:RandDCredit) - ../../ct:TaxPayable) - (0) &lt;= -0.001) and (. = 0)) or (((sum(../ct:RandDCredit) - ../../ct:TaxPayable) - (0) &gt; -0.001) and (math:abs((.) - (sum(../ct:RandDCredit) - ../../ct:TaxPayable)) &lt; 0.001))" id="a_F180.0" diagnostics="errorCode.F180.0 transactional.F180.0 transactional.en.F180.0 transactional.cy.F180.0 ">[89] must equal [87] minus [86], where the result is equal to or greater than zero. Enter 0.00 if [87] minus [86] is negative</sch:assert>
        <sch:assert test="translate(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &gt;= &apos;20000401&apos;" id="a_F180.3" diagnostics="errorCode.F180.3 transactional.F180.3 transactional.en.F180.3 transactional.cy.F180.3 ">If RDCredit payable is present the following should be true: [AP To Date] is on or after '2000-04-01'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p100">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:LandOrLifeCreditPayable">
        <sch:assert test="(((sum(../ct:RandDCredit) + sum(../ct:LandOrLifeCredit) - (../../ct:TaxPayable + sum(../ct:RDCreditPayable))) - (0) &lt;= -0.001) and (. = 0)) or (((sum(../ct:RandDCredit) + sum(../ct:LandOrLifeCredit) - (../../ct:TaxPayable + sum(../ct:RDCreditPayable))) - (0) &gt; -0.001) and (math:abs((.) - (sum(../ct:RandDCredit) + sum(../ct:LandOrLifeCredit) - (../../ct:TaxPayable + sum(../ct:RDCreditPayable)))) &lt; 0.001))" id="a_F185.0" diagnostics="errorCode.F185.0 transactional.F185.0 transactional.en.F185.0 transactional.cy.F185.0 ">[90] must equal ([87] + [88]) minus ([86] + [89]), where the result is equal to or greater than zero. Enter 0.00 if ([87] + [88]) minus ([86] + [89]) is negative</sch:assert>
        <sch:assert test=". &lt;= sum(../ct:LandOrLifeCredit)" id="a_F185.3" diagnostics="errorCode.F185.3 transactional.F185.3 transactional.en.F185.3 transactional.cy.F185.3 ">Land or life credit payable is valid if and only if it does not exceed [88]</sch:assert>
        <sch:assert test="translate(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &gt;= &apos;20010401&apos;" id="a_F185.4" diagnostics="errorCode.F185.4 transactional.F185.4 transactional.en.F185.4 transactional.cy.F185.4 ">If land or life credit payable is present the following should be true: [AP To Date] is on or after '2001-04-01'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p101">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:CapitalAllowancesFirstYearTaxCreditPayable">
        <sch:assert test="translate(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &gt;= &apos;20080401&apos;" id="a_F815.0" diagnostics="errorCode.F815.0 transactional.F815.0 transactional.en.F815.0 transactional.cy.F815.0 ">If Capital allowances first year tax credit payable is present the following should be true: [AP To Date] is on or after '2008-04-01'</sch:assert>
        <sch:assert test=". &lt;= sum(../ct:CapitalAllowancesFirstYearTaxCredit)" id="a_F815.1" diagnostics="errorCode.F815.1 transactional.F815.1 transactional.en.F815.1 transactional.cy.F815.1 ">Capital allowances first year tax credit payable is valid if and only if it does not exceed [170]</sch:assert>
        <sch:assert test="(((sum(../ct:RandDCredit) + sum(../ct:LandOrLifeCredit) + sum(../ct:CapitalAllowancesFirstYearTaxCredit) - ( ../../ct:TaxPayable + sum(../ct:RDCreditPayable) + sum(../ct:LandOrLifeCreditPayable) )) - (0) &lt;= -0.001) and ((.) = 0)) or (((sum(../ct:RandDCredit) + sum(../ct:LandOrLifeCredit) + sum(../ct:CapitalAllowancesFirstYearTaxCredit) - ( ../../ct:TaxPayable + sum(../ct:RDCreditPayable) + sum(../ct:LandOrLifeCreditPayable) )) - (0) &gt; -0.001) and (math:abs((.) - (sum(../ct:RandDCredit) + sum(../ct:LandOrLifeCredit) + sum(../ct:CapitalAllowancesFirstYearTaxCredit) - ( ../../ct:TaxPayable + sum(../ct:RDCreditPayable) + sum(../ct:LandOrLifeCreditPayable) ))) &lt; 0.001))" id="a_F815.2" diagnostics="errorCode.F815.2 transactional.F815.2 transactional.en.F815.2 transactional.cy.F815.2 ">[171] must equal ([87] + [88] + [170]) minus ([86] + [89] + [90]), where the result is equal to or greater than zero. Enter 0.00 if ([87] + [88] + [170]) minus ([86] + [89] + [90]) is negative.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p102">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded">
        <sch:assert test="not(((../../../@ReturnType = &apos;new&apos;) and (not(../../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600I = &apos;yes&apos;))) and (.))" id="a_F221.1" diagnostics="errorCode.F221.1 transactional.F221.1 transactional.en.F221.1 transactional.cy.F221.1 ">Ring fence corp tax included should not be present if [Return type] equals 'new' and [CT600I attached] != 'yes'</sch:assert>
        <sch:assert test=". &lt;= ../../ct:TaxPayable" id="a_F221.2" diagnostics="errorCode.F221.2 transactional.F221.2 transactional.en.F221.2 transactional.cy.F221.2 ">[161] should not exceed [86]</sch:assert>
        <sch:assert test="not(../../../@ReturnType = &apos;new&apos;)
                or  (../../../ct:RingFenceTrade/ct:RingFenceCorpTaxIncluded and (../../../ct:RingFenceTrade/ct:RingFenceCorpTaxIncluded = .))" id="a_F221.3" diagnostics="errorCode.F221.3 transactional.F221.3 transactional.en.F221.3 transactional.cy.F221.3 ">If [161] is present and [Return type] is 'new' then [I10] must be present and equal to [161].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p103">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included">
        <sch:assert test=". &lt;= sum(../../ct:S501AtaxCharge)" id="a_F227.1" diagnostics="errorCode.F227.1 transactional.F227.1 transactional.en.F227.1 transactional.cy.F227.1 ">Tax under S501A ICTA 1988 included is valid if and only if it does not exceed [82]</sch:assert>
        <sch:assert test="not(((../../../@ReturnType = &apos;new&apos;) and (not(../../../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600I = &apos;yes&apos;))) and (.))" id="a_F227.0" diagnostics="errorCode.F227.0 transactional.F227.0 transactional.en.F227.0 transactional.cy.F227.0 ">Tax under S501A ICTA 1988 included should not be present if [Return type] equals 'new' and [CT600I attached] != 'yes'</sch:assert>
        <sch:assert test="not(../../../@ReturnType = &apos;new&apos;)
                or  (../../../ct:RingFenceTrade/ct:TaxUnderS501AICTA1988 and (../../../ct:RingFenceTrade/ct:TaxUnderS501AICTA1988 = .))" id="a_F227.3" diagnostics="errorCode.F227.3 transactional.F227.3 transactional.en.F227.3 transactional.cy.F227.3 ">If [166] is present and [Return type] is 'new' then [I11] must be present and equal to [166].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p105">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:TaxOutstandingOrOverpaid/ct:TaxOutstanding">
        <sch:assert test="((../../../ct:TaxPayable - (sum(../../ct:RandDCredit) + sum(../../ct:LandOrLifeCredit) + sum(../../ct:CapitalAllowancesFirstYearTaxCredit) + sum(../../ct:TaxAlreadyPaid))) - (0) &gt; -0.001) and (math:abs((.) - (../../../ct:TaxPayable - (sum(../../ct:RandDCredit) + sum(../../ct:LandOrLifeCredit) + sum(../../ct:CapitalAllowancesFirstYearTaxCredit) + sum(../../ct:TaxAlreadyPaid)))) &lt; 0.001)" id="a_F060.0" diagnostics="errorCode.F060.0 transactional.F060.0 transactional.en.F060.0 transactional.cy.F060.0 ">[92] must equal [86] minus ([87] + [88] + [170] + [91]), where the result is equal to or greater than zero. Must not be present if [86] minus ([87] + [88] + [170] + [91]) is negative.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p106">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:TaxOutstandingOrOverpaid/ct:TaxOverpaid">
        <sch:assert test="((sum(../../ct:RandDCredit) + sum(../../ct:LandOrLifeCredit) + sum(../../ct:CapitalAllowancesFirstYearTaxCredit) + sum(../../ct:TaxAlreadyPaid) - ../../../ct:TaxPayable) - (0) &gt; -0.001) and (math:abs((.) - (sum(../../ct:RandDCredit) + sum(../../ct:LandOrLifeCredit) + sum(../../ct:CapitalAllowancesFirstYearTaxCredit) + sum(../../ct:TaxAlreadyPaid) - ../../../ct:TaxPayable)) &lt; 0.001)" id="a_F061.0" diagnostics="errorCode.F061.0 transactional.F061.0 transactional.en.F061.0 transactional.cy.F061.0 ">[93] must equal ([87] + [88] + [170] + [91]) minus [86], where the result is equal to or greater than zero. Must not be present if ([87] + [88] + [170] + [91]) minus [86] is negative.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p104">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:TaxOutstandingOrOverpaid">
        <sch:assert test="not(ct:TaxOutstanding)
                      or
                    not(ct:TaxOverpaid)
                      or
                    (ct:TaxOutstanding = 0 and ct:TaxOverpaid = 0 )" id="a_N059b.0" diagnostics="errorCode.N059b.0 transactional.N059b.0 transactional.en.N059b.0 transactional.cy.N059b.0 ">Either one or neither of [92] and [93] must be present (unless both are zero)</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p25">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation">
        <sch:assert test="ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation or (math:abs((ct:NetCorporationTaxChargeable) - ((sum(ct:TotalChargeableCorporationTax) - sum(ct:FurtherTaxCalculations/ct:MarginalRateRelief)))) &lt; 0.001)" id="a_F220.1" diagnostics="errorCode.F220.1 transactional.F220.1 transactional.en.F220.1 transactional.cy.F220.1 ">If the group [66-69] is absent, then [70] must equal [63] minus [64].</sch:assert>
        <sch:assert test="not(ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation)
              or 
            not((round(date:seconds(normalize-space(../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2006-03-31&apos;)) div 86400)))
              or
            ((((sum(ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:TaxAtNCDRate) + sum(ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:TaxAtUnderlyingRate))) - ((sum(ct:TotalChargeableCorporationTax) - sum(ct:FurtherTaxCalculations/ct:MarginalRateRelief))) &gt; -0.001) and (math:abs((ct:NetCorporationTaxChargeable) - ((sum(ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:TaxAtNCDRate) + sum(ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:TaxAtUnderlyingRate)))) &lt; 0.001))
              or
            ((((sum(ct:TotalChargeableCorporationTax) - sum(ct:FurtherTaxCalculations/ct:MarginalRateRelief))) - ((sum(ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:TaxAtNCDRate) + sum(ct:FurtherTaxCalculations/ct:NonCorporateDistributionsCalculation/ct:TaxAtUnderlyingRate))) &gt; -0.001) and (math:abs((ct:NetCorporationTaxChargeable) - ((sum(ct:TotalChargeableCorporationTax) - sum(ct:FurtherTaxCalculations/ct:MarginalRateRelief)))) &lt; 0.001))" id="a_F220.2" diagnostics="errorCode.F220.2 transactional.F220.2 transactional.en.F220.2 transactional.cy.F220.2 ">If the group [66-69] is present and [AP To Date] is on or before '2006-03-31', then the box [70] must equal the greater of ([68] + [69]) or ([63] - [64])</sch:assert>
        <sch:assert test="not((count(../ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTclaimed/ct:CompanyInformation/ct:TotalAmountClaimed) + count(../ct:TonnageTax/ct:TonnageTax/ct:OffshoreTrainingAllowance/ct:OffsetAgainstCorpTax)) = 1)
              or
                ((sum(ct:TaxReliefsAndDeductions/ct:DoubleTaxation/ct:DoubleTaxationRelief)) - (sum(../ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTclaimed/ct:CompanyInformation/ct:TotalAmountClaimed) + sum(../ct:TonnageTax/ct:TonnageTax/ct:OffshoreTrainingAllowance/ct:OffsetAgainstCorpTax)) &gt; -0.001)" id="a_N041.1" diagnostics="errorCode.N041.1 transactional.N041.1 transactional.en.N041.1 transactional.cy.N041.1 ">If one of [C3] or [F8] is present then [73] must be present and greater than or equal to that value.</sch:assert>
        <sch:assert test="not(../ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTclaimed/ct:CompanyInformation/ct:TotalAmountClaimed and ../ct:TonnageTax/ct:TonnageTax/ct:OffshoreTrainingAllowance/ct:OffsetAgainstCorpTax) or
                                                         (ct:TaxReliefsAndDeductions/ct:DoubleTaxation/ct:DoubleTaxationRelief and ((sum(ct:TaxReliefsAndDeductions/ct:DoubleTaxation/ct:DoubleTaxationRelief)) - ((sum(../ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTclaimed/ct:CompanyInformation/ct:TotalAmountClaimed) + sum(../ct:TonnageTax/ct:TonnageTax/ct:OffshoreTrainingAllowance/ct:OffsetAgainstCorpTax))) &gt; -0.001))" id="a_N041.2" diagnostics="errorCode.N041.2 transactional.N041.2 transactional.en.N041.2 transactional.cy.N041.2 ">If both of [C3] and [F8] are present then [73] must be present and equal to or greater than the total of those two values, even if this is an amended return.</sch:assert>
        <sch:assert test="not(ct:ChargeableProfits &gt; 0) or ct:CorporationTaxChargeable/ct:FinancialYearOne/ct:Year" id="a_N002.10" diagnostics="errorCode.N002.10 transactional.N002.10 transactional.en.N002.10 transactional.cy.N002.10 ">Year should be present if [37] exceeds 0</sch:assert>
        <sch:assert test="not(ct:CorporationTaxChargeable/ct:FinancialYearOne/ct:Details/ct:Tax or ct:CorporationTaxChargeable/ct:FinancialYearTwo/ct:Details/ct:Tax) or ct:TotalChargeableCorporationTax" id="a_N002.11" diagnostics="errorCode.N002.11 transactional.N002.11 transactional.en.N002.11 transactional.cy.N002.11 ">Total chargeable corporation tax should be present if [46] or [56] is present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p107">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:ClaimingEnhancedExpenditureForFilm">
        <sch:assert test="not((.) = &apos;yes&apos;) or sum(../ct:RandDEnhancedExpenditure) &gt; 0" id="a_F228.2" diagnostics="errorCode.F228.2 transactional.F228.2 transactional.en.F228.2 transactional.cy.F228.2 ">If 'yes' then [101] must be greater than zero</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(&apos;2006-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))" id="a_F228.3" diagnostics="errorCode.F228.3 transactional.F228.3 transactional.en.F228.3 transactional.cy.F228.3 ">If Claiming enhanced expenditure for film is present the following should be true: [AP To Date] is on or after '2006-04-01'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p108">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:SMEclaimRandD">
        <sch:assert test="not((.) = &quot;yes&quot;) 
                or (sum(../ct:RandDEnhancedExpenditure) &gt; 0)
                or (sum(../ct:SMEclaimAsLargeCompany) &gt; 0)
                or (sum(../ct:VaccineResearch) &gt; 0)" id="a_F204.1" diagnostics="errorCode.F204.1 transactional.F204.1 transactional.en.F204.1 transactional.cy.F204.1 ">If 'yes' then there must be an entry greater than 0.00 in at least one of [101] and [102] and [103].</sch:assert>
        <sch:assert test="not((../ct:LargeCompanyClaimRandD = &apos;yes&apos;) and (.))" id="a_F204.0" diagnostics="errorCode.F204.0 transactional.F204.0 transactional.en.F204.0 transactional.cy.F204.0 ">[99] should not be present if [100] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p109">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:LargeCompanyClaimRandD">
        <sch:assert test="(not((.) = &apos;yes&apos;)) or (sum(../ct:RandDEnhancedExpenditure) &gt; 0) or (sum(../ct:VaccineResearch) &gt; 0)" id="a_F205.0" diagnostics="errorCode.F205.0 transactional.F205.0 transactional.en.F205.0 transactional.cy.F205.0 ">If [100] is 'yes' then there must be an entry greater than 0.00 in at least one of [101] and [103].</sch:assert>
        <sch:assert test="not((../ct:SMEclaimRandD = &apos;yes&apos;) and (.))" id="a_F205.3" diagnostics="errorCode.F205.3 transactional.F205.3 transactional.en.F205.3 transactional.cy.F205.3 ">Large company claim rand d should not be present if [99] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p110">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:RandDEnhancedExpenditure">
        <sch:assert test="(../ct:ClaimingEnhancedExpenditureForFilm = &apos;yes&apos;) or (../ct:SMEclaimRandD = &apos;yes&apos;) or (../ct:LargeCompanyClaimRandD = &apos;yes&apos;)" id="a_F181.1" diagnostics="errorCode.F181.1 transactional.F181.1 transactional.en.F181.1 transactional.cy.F181.1 ">If R and D Enhanced expenditure is present the following should be true: [167] equals 'yes' and/or [99] equals 'yes' and/or [100] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p111">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:VaccineResearch">
        <sch:assert test="(../ct:SMEclaimRandD = &apos;yes&apos;) or (../ct:LargeCompanyClaimRandD = &apos;yes&apos;)" id="a_F206.1" diagnostics="errorCode.F206.1 transactional.F206.1 transactional.en.F206.1 transactional.cy.F206.1 ">If Vaccine research is present the following should be true: [99] equals 'yes' or [100] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p112">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:SMEclaimAsLargeCompany">
        <sch:assert test="../ct:SMEclaimRandD = &apos;yes&apos;" id="a_F207.1" diagnostics="errorCode.F207.1 transactional.F207.1 transactional.en.F207.1 transactional.cy.F207.1 ">If SMEclaim as large company is present the following should be true: [99] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p114">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:ChargesAndAllowances/ct:AIACapitalAllowancesInc">
        <sch:assert test="translate(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &gt;= &apos;20080401&apos;" id="a_F816.0" diagnostics="errorCode.F816.0 transactional.F816.0 transactional.en.F816.0 transactional.cy.F816.0 ">If [172] is present the following should be true: [AP To Date] is on or after '2008-04-01'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p115">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:ChargesAndAllowances/ct:AIACapitalAllowancesNotInc">
        <sch:assert test="translate(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &gt;= &apos;20080401&apos;" id="a_F817.0" diagnostics="errorCode.F817.0 transactional.F817.0 transactional.en.F817.0 transactional.cy.F817.0 ">If Annual investment allowance not inc in calc is present the following should be true: [AP To Date] is on or after '2008-04-01'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p116">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:ChargesAndAllowances/ct:FlatConversion">
        <sch:assert test="not((.) = &apos;yes&apos;) or sum(../ct:OtherNonTradingChargesAndAllowances/ct:CapitalAllowances) &gt; 0" id="a_F182.1" diagnostics="errorCode.F182.1 transactional.F182.1 transactional.en.F182.1 transactional.cy.F182.1 ">[117] can only be 'yes' if there is an entry greater than zero in the capital allowance element of [115].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p113">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:ChargesAndAllowances">
        <sch:assert test="(
                (((sum(ct:AIACapitalAllowancesInc) + sum(ct:AIACapitalAllowancesNotInc))) - (( (
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) - round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))
    )
  ) * 0
    div
      (366 -
  number(
    (
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
    )
    or ((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)) + 1 &lt; 366)
  ))

    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) - round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))
    )
  ) * 50000
    div
      (366 -
  number(
    (
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
    )
    or ((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)) + 1 &lt; 366)
  ))

    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) - round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))
    )
  ) * 100000
    div
      (366 -
  number(
    (
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
    )
    or ((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)) + 1 &lt; 366)
  ))

    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) - round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))
    )
  ) * 25000
    div
      (366 -
  number(
    (
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
    )
    or ((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)) + 1 &lt; 366)
  ))

    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) - round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))
    )
  ) * 250000
    div
      (366 -
  number(
    (
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
    )
    or ((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)) + 1 &lt; 366)
  ))

    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) - round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))
    )
  ) * 500000
    div
      (366 -
  number(
    (
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
    )
    or ((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)) + 1 &lt; 366)
  ))

    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   (
    (
      number((round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))) *
      (round(date:seconds(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;)))) div 86400) - round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))
    )  ) * 25000
    div
      (366 -
  number(
    (
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
      or
      (
        (round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))
      and
        (round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))
      )
    )
    or ((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) - round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)) + 1 &lt; 366)
  ))

    )
  )
)
)) &lt; 0.001)
              )
                or
              (
                (
                  date:day-in-month(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) = 1 and date:day-in-month(normalize-space(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1DT12H&apos;)))) = 1
                )
                  and
                (
                  (((sum(ct:AIACapitalAllowancesInc) + sum(ct:AIACapitalAllowancesNotInc))) - (((
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(&apos;1992-04-01&apos;)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(&apos;1992-04-01&apos;))
    ) + (
      number((round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2008-04-01&apos;) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(&apos;2008-04-01&apos;) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;1992-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2008-04-01&apos;) - date:year(&apos;1992-04-01&apos;)) + date:month-in-year(&apos;2008-04-01&apos;) - date:month-in-year(&apos;1992-04-01&apos;))
    )
  ) * 0
    div
    12
    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(&apos;2008-04-01&apos;)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(&apos;2008-04-01&apos;))
    ) + (
      number((round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2010-04-01&apos;) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(&apos;2010-04-01&apos;) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2008-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2010-04-01&apos;) - date:year(&apos;2008-04-01&apos;)) + date:month-in-year(&apos;2010-04-01&apos;) - date:month-in-year(&apos;2008-04-01&apos;))
    )
  ) * 50000
    div
    12
    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(&apos;2010-04-01&apos;)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(&apos;2010-04-01&apos;))
    ) + (
      number((round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2012-04-01&apos;) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(&apos;2012-04-01&apos;) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2010-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2012-04-01&apos;) - date:year(&apos;2010-04-01&apos;)) + date:month-in-year(&apos;2012-04-01&apos;) - date:month-in-year(&apos;2010-04-01&apos;))
    )
  ) * 100000
    div
    12
    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(&apos;2012-04-01&apos;)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(&apos;2012-04-01&apos;))
    ) + (
      number((round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2013-01-01&apos;) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(&apos;2013-01-01&apos;) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2012-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2013-01-01&apos;) - date:year(&apos;2012-04-01&apos;)) + date:month-in-year(&apos;2013-01-01&apos;) - date:month-in-year(&apos;2012-04-01&apos;))
    )
  ) * 25000
    div
    12
    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(&apos;2013-01-01&apos;)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(&apos;2013-01-01&apos;))
    ) + (
      number((round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2014-04-01&apos;) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(&apos;2014-04-01&apos;) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2013-01-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2014-04-01&apos;) - date:year(&apos;2013-01-01&apos;)) + date:month-in-year(&apos;2014-04-01&apos;) - date:month-in-year(&apos;2013-01-01&apos;))
    )
  ) * 250000
    div
    12
    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))) *
  (
    (
      number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(&apos;2014-04-01&apos;)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(&apos;2014-04-01&apos;))
    ) + (
      number((round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2016-01-01&apos;) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(&apos;2016-01-01&apos;) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2014-04-01&apos;)) div 86400))) *
      number((round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
      (12 * (date:year(&apos;2016-01-01&apos;) - date:year(&apos;2014-04-01&apos;)) + date:month-in-year(&apos;2016-01-01&apos;) - date:month-in-year(&apos;2014-04-01&apos;))
    )
  ) * 500000
    div
    12
    )
  )
  +
  ceiling(
    (
  number((round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))) *
   (
    (
      number((round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(../../ct:CompanyInformation/ct:PeriodCovered/ct:From))
    ) + (
      number((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2016-01-01&apos;)) div 86400))) *
      (12 * (date:year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:year(&apos;2016-01-01&apos;)) + date:month-in-year(date:add(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P1D&apos;))) - date:month-in-year(&apos;2016-01-01&apos;))
    )  ) * 25000
    div
    12
    )
  )
)
)) &lt; 0.001)
                ) 
              )" id="a_N062.1" diagnostics="errorCode.N062.1 transactional.N062.1 transactional.en.N062.1 transactional.cy.N062.1 ">The sum of [172] and [173] must not exceed the apportioned AIA limit (see Appendix C)</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p117">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:ClaimingEnvironmentallyFriendly">
        <sch:assert test="translate(../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &lt;= &apos;20080331&apos;" id="a_F210.1" diagnostics="errorCode.F210.1 transactional.F210.1 transactional.en.F210.1 transactional.cy.F210.1 ">If Claiming environmentally friendly is present the following should be true: [AP To Date] is on or before '2008-03-31'</sch:assert>
        <sch:assert test="sum(../ct:MachineryAndPlantExpenditure) &gt; 0" id="a_F210.2" diagnostics="errorCode.F210.2 transactional.F210.2 transactional.en.F210.2 transactional.cy.F210.2 ">If Claiming environmentally friendly is present the following should be true: [118] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p118">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CapitalAllowancesExpenditure/ct:DesignatedEnvironmentallyFriendlyMachineryAndPlant">
        <sch:assert test="translate(../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &gt;= &apos;20080401&apos;" id="a_F818.0" diagnostics="errorCode.F818.0 transactional.F818.0 transactional.en.F818.0 transactional.cy.F818.0 ">If [174] is present the following should be true: [AP To Date] is on or after '2008-04-01'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p119">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LossesDeficitsAndExcess/ct:CaseI/ct:SurrenderMaximum">
        <sch:assert test="sum(../ct:Arising) &gt; 0" id="a_SurrenderMaximum.1" diagnostics="errorCode.SurrenderMaximum.1 transactional.SurrenderMaximum.1 transactional.en.SurrenderMaximum.1 ">If there is an entry in the second box of the arising and maximum pair, there must be an entry greater than zero in the first box of the pair.</sch:assert>
        <sch:assert test=". &lt;= sum(../ct:Arising)" id="a_SurrenderMaximum.2" diagnostics="errorCode.SurrenderMaximum.2 transactional.SurrenderMaximum.2 transactional.en.SurrenderMaximum.2 ">If there is an entry in the second box of the pair, it must not be greater than the entry in the first box of the pair.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p120">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LossesDeficitsAndExcess/ct:Loans/ct:SurrenderMaximum">
        <sch:assert test="sum(../ct:Arising) &gt; 0" id="a_SurrenderMaximum.1.0" diagnostics="errorCode.SurrenderMaximum.1.0 transactional.SurrenderMaximum.1.0 transactional.en.SurrenderMaximum.1.0 ">If there is an entry in the second box of the arising and maximum pair, there must be an entry greater than zero in the first box of the pair.</sch:assert>
        <sch:assert test=". &lt;= sum(../ct:Arising)" id="a_SurrenderMaximum.2.0" diagnostics="errorCode.SurrenderMaximum.2.0 transactional.SurrenderMaximum.2.0 transactional.en.SurrenderMaximum.2.0 ">If there is an entry in the second box of the pair, it must not be greater than the entry in the first box of the pair.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p121">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LossesDeficitsAndExcess/ct:ScheduleA/ct:SurrenderMaximum">
        <sch:assert test="sum(../ct:Arising) &gt; 0" id="a_SurrenderMaximum.1.1" diagnostics="errorCode.SurrenderMaximum.1.1 transactional.SurrenderMaximum.1.1 transactional.en.SurrenderMaximum.1.1 ">If there is an entry in the second box of the arising and maximum pair, there must be an entry greater than zero in the first box of the pair.</sch:assert>
        <sch:assert test=". &lt;= sum(../ct:Arising)" id="a_SurrenderMaximum.2.1" diagnostics="errorCode.SurrenderMaximum.2.1 transactional.SurrenderMaximum.2.1 transactional.en.SurrenderMaximum.2.1 ">If there is an entry in the second box of the pair, it must not be greater than the entry in the first box of the pair.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p122">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LossesDeficitsAndExcess/ct:NonTradingLossesIntangibles/ct:SurrenderMaximum">
        <sch:assert test="sum(../ct:Arising) &gt; 0" id="a_SurrenderMaximum.1.2" diagnostics="errorCode.SurrenderMaximum.1.2 transactional.SurrenderMaximum.1.2 transactional.en.SurrenderMaximum.1.2 ">If there is an entry in the second box of the arising and maximum pair, there must be an entry greater than zero in the first box of the pair.</sch:assert>
        <sch:assert test=". &lt;= sum(../ct:Arising)" id="a_SurrenderMaximum.2.2" diagnostics="errorCode.SurrenderMaximum.2.2 transactional.SurrenderMaximum.2.2 transactional.en.SurrenderMaximum.2.2 ">If there is an entry in the second box of the pair, it must not be greater than the entry in the first box of the pair.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p123">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LossesDeficitsAndExcess/ct:ExcessManagementExpenses/ct:SurrenderMaximum">
        <sch:assert test="sum(../ct:Arising) &gt; 0" id="a_SurrenderMaximum.1.3" diagnostics="errorCode.SurrenderMaximum.1.3 transactional.SurrenderMaximum.1.3 transactional.en.SurrenderMaximum.1.3 ">If there is an entry in the second box of the arising and maximum pair, there must be an entry greater than zero in the first box of the pair.</sch:assert>
        <sch:assert test=". &lt;= sum(../ct:Arising)" id="a_SurrenderMaximum.2.3" diagnostics="errorCode.SurrenderMaximum.2.3 transactional.SurrenderMaximum.2.3 transactional.en.SurrenderMaximum.2.3 ">If there is an entry in the second box of the pair, it must not be greater than the entry in the first box of the pair.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p124">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:OverpaymentsAndRepayments/ct:IncomeTax">
        <sch:assert test=". = sum(../../ct:CompanyTaxCalculation/ct:IncomeTax/ct:TaxRepayable)" id="a_N070.1" diagnostics="errorCode.N070.1 transactional.N070.1 transactional.en.N070.1 transactional.cy.N070.1 ">Income tax is valid if and only if it equals [85]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p125">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:OverpaymentsAndRepayments/ct:FilmTaxCredit">
        <sch:assert test="../../ct:CapitalAllowancesExpenditure/ct:ClaimingEnhancedExpenditureForFilm = &apos;yes&apos;" id="a_N072.1" diagnostics="errorCode.N072.1 transactional.N072.1 transactional.en.N072.1 transactional.cy.N072.1 ">If Film tax credit is present the following should be true: [167] equals 'yes'</sch:assert>
        <sch:assert test=". &lt;= sum(../../ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:RDCreditPayable)" id="a_N072.2" diagnostics="errorCode.N072.2 transactional.N072.2 transactional.en.N072.2 transactional.cy.N072.2 ">[168] is valid if and only if this does not exceed [89]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p126">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:OverpaymentsAndRepayments/ct:LandRemediationTaxCredit">
        <sch:assert test=". = sum(../../ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:LandOrLifeCreditPayable)" id="a_N073.0" diagnostics="errorCode.N073.0 transactional.N073.0 transactional.en.N073.0 transactional.cy.N073.0 ">Land remediation tax credit is valid if and only if it equals [90]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p127">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:OverpaymentsAndRepayments/ct:PayableCapitalAllowancesFirstYearTaxCredit">
        <sch:assert test=". = sum(../../ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:CapitalAllowancesFirstYearTaxCreditPayable)" id="a_N074.0" diagnostics="errorCode.N074.0 transactional.N074.0 transactional.en.N074.0 transactional.cy.N074.0 ">Payable capital allowances first year tax credit is valid if and only if it equals [171]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p128">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:OverpaymentsAndRepayments/ct:Surrender/ct:JointNotice/ct:Attached">
        <sch:assert test="../../../../ct:AttachedFiles/ct:Attachment" id="a_N078.1" diagnostics="errorCode.N078.1 transactional.N078.1 transactional.en.N078.1 transactional.cy.N078.1 ">If Attached is present the following should be true: [Attachment]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p129">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:OverpaymentsAndRepayments/ct:StopUntilNotice">
        <sch:assert test=". &lt;= sum(../ct:Surrender/ct:Amount)" id="a_N080.1" diagnostics="errorCode.N080.1 transactional.N080.1 transactional.en.N080.1 transactional.cy.N080.1 ">Stop until notice is valid if and only if it does not exceed [145]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p132">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:LoansInformation/ct:TotalLoans">
        <sch:assert test="(math:abs((.) - (sum(../ct:Loan/ct:AmountOfLoan))) &lt; 0.001)" id="a_SA012.0" diagnostics="errorCode.SA012.0 transactional.SA012.0 transactional.en.SA012.0 transactional.cy.SA012.0 ">Must equal the sum of all iterations of [Amount of Loan]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p133">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:LoansInformation/ct:TaxChargeable">
        <sch:assert test="(math:abs((.) - ((../ct:TotalLoans * 0.25))) &lt; 0.001)" id="a_SA014.0" diagnostics="errorCode.SA014.0 transactional.SA014.0 transactional.en.SA014.0 transactional.cy.SA014.0 ">Tax chargeable is valid if and only if it equals ( [A2] times [25%] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p131">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:LoansInformation">
        <sch:assert test="count(ct:Loan) &lt;= 999" id="a_LOAN.0" diagnostics="errorCode.LOAN.0 transactional.LOAN.0 transactional.en.LOAN.0 transactional.cy.LOAN.0 ">The group [Loan] may occur up to 999 times</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p136">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:ReliefEarlierThan/ct:Loan/ct:Date">
        <sch:assert test="(round(date:seconds(normalize-space((.))) div 86400) &lt;= round(date:seconds(normalize-space(date:add(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To),normalize-space(&apos;P310D&apos;)))) div 86400))" id="a_SA018.0" diagnostics="errorCode.SA018.0 transactional.SA018.0 transactional.en.SA018.0 transactional.cy.SA018.0 ">The box [Date of Loan] cannot be later than [AP To Date] plus 310 days</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p135">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:ReliefEarlierThan/ct:Loan">
        <sch:assert test="(sum(ct:AmountRepaid) &gt; 0) or (sum(ct:AmountReleasedOrWrittenOff) &gt; 0)" id="a_LOAN2.2" diagnostics="errorCode.LOAN2.2 transactional.LOAN2.2 transactional.en.LOAN2.2 transactional.cy.LOAN2.2 ">Within each iteration, either [Amount of Loan Repayed] &gt; 0 or [Amount of Loan Released of Written off] &gt; 0 or both.</sch:assert>
        <sch:assert test="../../ct:LoansInformation" id="a_LOAN2.0" diagnostics="errorCode.LOAN2.0 transactional.LOAN2.0 transactional.en.LOAN2.0 transactional.cy.LOAN2.0 ">If Loan is present the following should be true: [Loans Information]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p137">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:ReliefEarlierThan/ct:TotalAmountRepaid">
        <sch:assert test="(math:abs((.) - (sum(../ct:Loan/ct:AmountRepaid))) &lt; 0.001)" id="a_SA039.0" diagnostics="errorCode.SA039.0 transactional.SA039.0 transactional.en.SA039.0 transactional.cy.SA039.0 ">Must equal the sum of all iterations of [Amount of Loan Repayed]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p138">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:ReliefEarlierThan/ct:TotalAmountReleasedOrWritten">
        <sch:assert test="(math:abs((.) - (sum(../ct:Loan/ct:AmountReleasedOrWrittenOff))) &lt; 0.001)" id="a_SA040.0" diagnostics="errorCode.SA040.0 transactional.SA040.0 transactional.en.SA040.0 transactional.cy.SA040.0 ">Must equal the sum of all iterations of [Amount of Loan Released of Written off]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p139">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:ReliefEarlierThan/ct:TotalLoans">
        <sch:assert test="(math:abs((.) - ((sum(../ct:TotalAmountRepaid) + sum(../ct:TotalAmountReleasedOrWritten)))) &lt; 0.001)" id="a_SA042.0" diagnostics="errorCode.SA042.0 transactional.SA042.0 transactional.en.SA042.0 transactional.cy.SA042.0 ">Total loans is valid if and only if it equals ( [A4] plus [A5] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p140">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:ReliefEarlierThan/ct:ReliefDue">
        <sch:assert test="(math:abs((.) - ((../ct:TotalLoans * 0.25))) &lt; 0.001)" id="a_SA043.0" diagnostics="errorCode.SA043.0 transactional.SA043.0 transactional.en.SA043.0 transactional.cy.SA043.0 ">Relief due is valid if and only if it equals ( [A6] times [25%] )</sch:assert>
        <sch:assert test=". &lt;= sum(../../ct:LoansInformation/ct:TaxChargeable)" id="a_SA043.1" diagnostics="errorCode.SA043.1 transactional.SA043.1 transactional.en.SA043.1 transactional.cy.SA043.1 ">Relief due is valid if and only if it does not exceed [A3]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p134">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:ReliefEarlierThan">
        <sch:assert test="count(ct:Loan) &lt;= 999" id="a_LOAN2.1" diagnostics="errorCode.LOAN2.1 transactional.LOAN2.1 transactional.en.LOAN2.1 transactional.cy.LOAN2.1 ">[Loan] may repeat up to 999 times</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p142">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:Section3Check/ct:EndDate">
        <sch:assert test="(round(date:seconds(normalize-space(../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space((.))) div 86400))" id="a_SA045.0" diagnostics="errorCode.SA045.0 transactional.SA045.0 transactional.en.SA045.0 transactional.cy.SA045.0 ">End date is valid if and only if it is onOrAfter [AP To Date]</sch:assert>
        <sch:assert test="concat(translate(., &apos;-&apos;,&apos;&apos;),&apos;235959&apos;) &lt; translate(translate(translate(string(/hd:GovTalkMessage/hd:Header/hd:MessageDetails/hd:GatewayTimestamp),&apos;-&apos;,&apos;&apos;),&apos;:&apos;,&apos;&apos;), &apos;T&apos;,&apos;&apos;)" id="a_SA045.1" diagnostics="errorCode.SA045.1 transactional.SA045.1 transactional.en.SA045.1 transactional.cy.SA045.1 ">Must be earlier than the date of submission.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p143">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:Section3Check/ct:NineMonthsAfter">
        <sch:assert test="(date:day-in-month(normalize-space(../ct:EndDate)) != 1
                and
            (.) = date:add(normalize-space(date:add(normalize-space(../ct:EndDate),normalize-space(&apos;-P1D&apos;))),normalize-space(&apos;P9M&apos;)))
              or
            (date:day-in-month(normalize-space(../ct:EndDate)) = 1
                and
            (.) = date:add(normalize-space(date:add(normalize-space(../ct:EndDate),normalize-space(&apos;P9M&apos;))),normalize-space(&apos;-P1D&apos;)))" id="a_SA046.0" diagnostics="errorCode.SA046.0 transactional.SA046.0 transactional.en.SA046.0 transactional.cy.SA046.0 ">Must be exactly nine months after [Accounting Period of Loan End Date]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p144">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:Section3Check/ct:DateReturnSent">
        <sch:assert test="(round(date:seconds(normalize-space(.)) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))" id="a_SA047.1" diagnostics="errorCode.SA047.1 transactional.SA047.1 transactional.en.SA047.1 transactional.cy.SA047.1 ">Must be no later than today.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p141">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:Section3Check">
        <sch:assert test="../ct:LoansInformation" id="a_SECTION3CHECK.0" diagnostics="errorCode.SECTION3CHECK.0 transactional.SECTION3CHECK.0 transactional.en.SECTION3CHECK.0 transactional.cy.SECTION3CHECK.0 ">If Section3 check is present the following should be true: [Loans Information]</sch:assert>
        <sch:assert test="not(../ct:LoanLaterReliefNow)
            or
            not((round(date:seconds(normalize-space(ct:DateReturnSent)) div 86400) &lt;= round(date:seconds(normalize-space(ct:NineMonthsAfter)) div 86400)))" id="a_LOANLATERRELIEFNOW.0" diagnostics="errorCode.LOANLATERRELIEFNOW.0 transactional.LOANLATERRELIEFNOW.0 transactional.en.LOANLATERRELIEFNOW.0 transactional.cy.LOANLATERRELIEFNOW.0 ">[Loan later relief now] can only be submitted if [Date Return Sent] is strictly later than [9 months after Accounting Period End Date].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p147">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:LoanLaterReliefNow/ct:Loan/ct:Date">
        <sch:assert test="not(../../../ct:Section3Check/ct:EndDate)
                or
              (round(date:seconds(normalize-space((.))) div 86400) &lt;= round(date:seconds(normalize-space(../../../ct:Section3Check/ct:EndDate)) div 86400))" id="a_SA051.0" diagnostics="errorCode.SA051.0 transactional.SA051.0 transactional.en.SA051.0 transactional.cy.SA051.0 ">If [Accounting Period of Loan End Date] is present [Date of Loan] must be on or before [Accounting Period of Loan End Date].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p146">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:LoanLaterReliefNow/ct:Loan">
        <sch:assert test="(sum(ct:AmountRepaid) &gt; 0) or (sum(ct:AmountReleasedOrWrittenOff) &gt; 0)" id="a_LOAN3.1" diagnostics="errorCode.LOAN3.1 transactional.LOAN3.1 transactional.en.LOAN3.1 transactional.cy.LOAN3.1 ">Within each iteration, either [Amount of Loan Repayed] &gt; 0 or [Amount of Loan released or written off] &gt; 0 or both.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p148">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:LoanLaterReliefNow/ct:TotalAmountRepaid">
        <sch:assert test="(math:abs((.) - (sum(../ct:Loan/ct:AmountRepaid))) &lt; 0.001)" id="a_SA072.0" diagnostics="errorCode.SA072.0 transactional.SA072.0 transactional.en.SA072.0 transactional.cy.SA072.0 ">Must equal the sum of all iterations of [Amount of Loan Repayed]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p149">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:LoanLaterReliefNow/ct:TotalAmountReleasedOrWritten">
        <sch:assert test="(math:abs((.) - (sum(../ct:Loan/ct:AmountReleasedOrWrittenOff))) &lt; 0.001)" id="a_SA073.0" diagnostics="errorCode.SA073.0 transactional.SA073.0 transactional.en.SA073.0 transactional.cy.SA073.0 ">Must equal the sum of all iterations of [Amount of Loan released or written off]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p150">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:LoanLaterReliefNow/ct:TotalLoans">
        <sch:assert test="(math:abs((.) - ((sum(../ct:TotalAmountRepaid) + sum(../ct:TotalAmountReleasedOrWritten)))) &lt; 0.001)" id="a_SA075.0" diagnostics="errorCode.SA075.0 transactional.SA075.0 transactional.en.SA075.0 transactional.cy.SA075.0 ">Total loans is valid if and only if it equals ( [A8] plus [A9] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p151">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:LoanLaterReliefNow/ct:ReliefDue">
        <sch:assert test="(math:abs((.) - ((../ct:TotalLoans * 0.25))) &lt; 0.001)" id="a_SA076.0" diagnostics="errorCode.SA076.0 transactional.SA076.0 transactional.en.SA076.0 transactional.cy.SA076.0 ">Relief due is valid if and only if it equals ( [A10] times [25%] )</sch:assert>
        <sch:assert test=". &lt;= sum(../../ct:LoansInformation/ct:TaxChargeable)" id="a_SA076.1" diagnostics="errorCode.SA076.1 transactional.SA076.1 transactional.en.SA076.1 transactional.cy.SA076.1 ">Relief due is valid if and only if it does not exceed [A3]</sch:assert>
        <sch:assert test="../../../ct:CompanyTaxCalculation/ct:A11Completed = &apos;yes&apos;" id="a_SA076.2" diagnostics="errorCode.SA076.2 transactional.SA076.2 transactional.en.SA076.2 transactional.cy.SA076.2 "> If there is an entry greater than or equal to zero in [A11], [80] must be 'yes'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p145">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:LoanLaterReliefNow">
        <sch:assert test="count(ct:Loan) &lt;= 999" id="a_LOAN3.0" diagnostics="errorCode.LOAN3.0 transactional.LOAN3.0 transactional.en.LOAN3.0 transactional.cy.LOAN3.0 ">[Loan] may repeat up to 999 times</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p152">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies/ct:TaxPayableS419">
        <sch:assert test="(math:abs((.) - ((sum(../ct:LoansInformation/ct:TaxChargeable) - (sum(../ct:ReliefEarlierThan/ct:ReliefDue) + sum(../ct:LoanLaterReliefNow/ct:ReliefDue))))) &lt; 0.001)" id="a_SA078.0" diagnostics="errorCode.SA078.0 transactional.SA078.0 transactional.en.SA078.0 transactional.cy.SA078.0 ">Tax payable s419 is valid if and only if it equals ( [A3] minus ( [A7] plus [A11] ) )</sch:assert>
        <sch:assert test="../../ct:CompanyTaxCalculation/ct:Payable and ../../ct:CompanyTaxCalculation/ct:Payable = (.)" id="a_SA078.1" diagnostics="errorCode.SA078.1 transactional.SA078.1 transactional.en.SA078.1 transactional.cy.SA078.1 ">If [A13] is submitted then [79] must be present and equal to [A13].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p130">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:LoansByCloseCompanies">
        <sch:assert test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600A = &apos;yes&apos;" id="a_N095.0" diagnostics="errorCode.N095.0 transactional.N095.0 transactional.en.N095.0 transactional.cy.N095.0 ">If [CT600A] is present the following should be true: [CT600A attached] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p154">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ControlledForeignCompanies/ct:CompanyInformation/ct:CFCTaxCalculation/ct:TaxChargeable">
        <sch:assert test="(math:abs((.) - ((../ct:TaxOnChargeable - (sum(../ct:CreditableTax) + sum(../ct:ReliefsInTaxTerms) + sum(../ct:ACTrestricted))))) &lt; 0.001)" id="a_SB010.0" diagnostics="errorCode.SB010.0 transactional.SB010.0 transactional.en.SB010.0 ">[J] should equal ( [F] minus ( The sum of [G], [H], and [I] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p155">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ControlledForeignCompanies/ct:TotalTaxChargeable">
        <sch:assert test="(math:abs(((.)) - (sum(../ct:CompanyInformation/ct:CFCTaxCalculation/ct:TaxOnChargeable))) &lt; 0.001)" id="a_SB121.0" diagnostics="errorCode.SB121.0 transactional.SB121.0 transactional.en.SB121.0 ">[TotalsF] must equal the sum of all entries in [F].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p156">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ControlledForeignCompanies/ct:TotalCreditableTax">
        <sch:assert test="(math:abs(((.)) - (sum(../ct:CompanyInformation/ct:CFCTaxCalculation/ct:CreditableTax))) &lt; 0.001)" id="a_SB122.0" diagnostics="errorCode.SB122.0 transactional.SB122.0 transactional.en.SB122.0 ">[TotalsG] must equal the sum of all entries in [G].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p157">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ControlledForeignCompanies/ct:TotalReliefInTaxTerms">
        <sch:assert test="(math:abs(((.)) - (sum(../ct:CompanyInformation/ct:CFCTaxCalculation/ct:ReliefsInTaxTerms))) &lt; 0.001)" id="a_SB123.0" diagnostics="errorCode.SB123.0 transactional.SB123.0 transactional.en.SB123.0 ">[TotalsH] must equal the sum of all entries in [H].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p158">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ControlledForeignCompanies/ct:TotalACTrestricted">
        <sch:assert test="(math:abs(((.)) - (sum(../ct:CompanyInformation/ct:CFCTaxCalculation/ct:ACTrestricted))) &lt; 0.001)" id="a_SB124.0" diagnostics="errorCode.SB124.0 transactional.SB124.0 transactional.en.SB124.0 ">[TotalsI] must equal the sum of all entries in [I].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p159">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ControlledForeignCompanies/ct:TotalS747TaxChargeable">
        <sch:assert test="(math:abs(((.)) - (sum(../ct:CompanyInformation/ct:CFCTaxCalculation/ct:TaxChargeable) + sum(../ct:BankLevy))) &lt; 0.001)" id="a_SB125.1" diagnostics="errorCode.SB125.1 transactional.SB125.1 transactional.en.SB125.1 ">[TotalsJ] must equal the sum of all entries in [J], plus [K]</sch:assert>
        <sch:assert test="../../ct:CompanyTaxCalculation/ct:TaxPayableS747 and (math:abs(((.)) - (../../ct:CompanyTaxCalculation/ct:TaxPayableS747)) &lt; 0.001)" id="a_SB125.0" diagnostics="errorCode.SB125.0 transactional.SB125.0 transactional.en.SB125.0 ">If [TotalsJ] is submitted then [81] must be present and equal to [TotalsJ].</sch:assert>
        <sch:assert test=". &gt;= sum(../ct:BankLevy)" id="a_SB125.2" diagnostics="errorCode.SB125.2 transactional.SB125.2 transactional.en.SB125.2 ">[TotalsJ] is valid if and only if this is not less than [K]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p153">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:ControlledForeignCompanies">
        <sch:assert test="sum(ct:CompanyInformation/ct:CFCTaxCalculation/ct:TaxOnChargeable) = 0 
          or 
          ct:TotalTaxChargeable" id="a_CT600B.0" diagnostics="errorCode.CT600B.0 transactional.CT600B.0 transactional.en.CT600B.0 ">[TotalsF] must be present if the sum of all iterations of [F] is greater than zero.</sch:assert>
        <sch:assert test="not(ct:CompanyInformation/ct:CFCTaxCalculation/ct:CreditableTax) or ct:TotalCreditableTax" id="a_CT600B.1" diagnostics="errorCode.CT600B.1 transactional.CT600B.1 transactional.en.CT600B.1 ">Total creditable tax should be present if [G]</sch:assert>
        <sch:assert test="not(ct:CompanyInformation/ct:CFCTaxCalculation/ct:ReliefsInTaxTerms) or ct:TotalReliefInTaxTerms" id="a_CT600B.2" diagnostics="errorCode.CT600B.2 transactional.CT600B.2 transactional.en.CT600B.2 ">Total relief in tax terms should be present if [H]</sch:assert>
        <sch:assert test="not(ct:CompanyInformation/ct:CFCTaxCalculation/ct:ACTrestricted) or ct:TotalACTrestricted" id="a_CT600B.3" diagnostics="errorCode.CT600B.3 transactional.CT600B.3 transactional.en.CT600B.3 ">Total aCTrestricted should be present if [I]</sch:assert>
        <sch:assert test="not(ct:CompanyInformation/ct:CFCTaxCalculation) or ct:TotalS747TaxChargeable" id="a_CT600B.4" diagnostics="errorCode.CT600B.4 transactional.CT600B.4 transactional.en.CT600B.4 ">Total s747 tax chargeable should be present if [CFC tax calculation]</sch:assert>
        <sch:assert test="ct:CompanyInformation or ct:BankLevy" id="a_CT600B.5" diagnostics="errorCode.CT600B.5 transactional.CT600B.5 transactional.en.CT600B.5 ">If [CT600B] is present the following should be true: [Company Information group] or [K]</sch:assert>
        <sch:assert test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600B = &apos;yes&apos;" id="a_N096.0" diagnostics="errorCode.N096.0 transactional.N096.0 transactional.en.N096.0 transactional.cy.N096.0 ">If Controlled foreign companies is present the following should be true: [CT600B attached] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p163">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:ClaimToGroupRelief/ct:CompanyInformation/ct:Company/ct:AccountingPeriod">
        <sch:assert test="not (ct:To = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)
                    or
                    not ( ct:From = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From )" id="a_SC002.1" diagnostics="errorCode.SC002.1 transactional.SC002.1 transactional.en.SC002.1 ">'To Date' must be different to [AP To Date] if 'Account of surrendering company Start Date' is equal to [AP From Date], and 'From Date' must be different to [AP From Date] if 'Account of surrendering company End Date' is equal to [AP To Date].</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))" id="a_SC002.2" diagnostics="errorCode.SC002.2 transactional.SC002.2 transactional.en.SC002.2 ">From date must be on or before [AP To Date].</sch:assert>
        <sch:assert test="translate(date:add(normalize-space(string(ct:To)),normalize-space(&apos;-P12M&apos;)),&apos;-&apos;,&apos;&apos;) &lt; translate(ct:From,&apos;-&apos;,&apos;&apos;)" id="a_SC002.3" diagnostics="errorCode.SC002.3 transactional.SC002.3 transactional.en.SC002.3 ">Period Covered must not be longer than 12 months</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(ct:To)) div 86400) &lt; round(date:seconds(normalize-space(ct:From)) div 86400)))" id="a_SC002.4" diagnostics="errorCode.SC002.4 transactional.SC002.4 transactional.en.SC002.4 ">The To date must not be before the From date.</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(ct:To)) div 86400) &lt; round(date:seconds(normalize-space(../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))" id="a_SC002.5" diagnostics="errorCode.SC002.5 transactional.SC002.5 transactional.en.SC002.5 ">To date must be on or after [AP From Date].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p164">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:ClaimToGroupRelief/ct:CompanyInformation/ct:TotalAmountClaimed">
        <sch:assert test="../../../../../ct:CompanyTaxCalculation/ct:ChargesAndReliefs/ct:GroupRelief = (.)" id="a_SC021.0" diagnostics="errorCode.SC021.0 transactional.SC021.0 transactional.en.SC021.0 ">If there is an entry in [C1] then [36] must be present and must equal that value.</sch:assert>
        <sch:assert test=". = sum(../ct:Company/ct:AmountClaimed)" id="a_SC021.1" diagnostics="errorCode.SC021.1 transactional.SC021.1 transactional.en.SC021.1 ">[C1] must equal the sum of all iterations of [Amount claimed].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p165">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:ClaimToGroupRelief/ct:ClaimAuthorisation/ct:AuthorisationOptions/ct:SimplifiedArrangementInForce">
        <sch:assert test="../../ct:Authorisation" id="a_SC160.0" diagnostics="errorCode.SC160.0 transactional.SC160.0 transactional.en.SC160.0 ">If Simplified arrangement in force is present the following should be true: [Authorisation of claim to group relief]</sch:assert>
        <sch:assert test="sum(../../../../../../ct:CompanyTaxCalculation/ct:ChargesAndReliefs/ct:GroupRelief) &gt; 0" id="a_SC160.1" diagnostics="errorCode.SC160.1 transactional.SC160.1 transactional.en.SC160.1 ">If [Simplified arrangement in force] is present the following should be true: [36] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p166">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:ClaimToGroupRelief/ct:ClaimAuthorisation/ct:AuthorisationOptions/ct:CopyOfNoticesOfConsentAttached">
        <sch:assert test="count(../../../../../../ct:AttachedFiles/ct:Attachment[@Type=&apos;other&apos; and @Format=&apos;pdf&apos;]) &gt; 0" id="a_SC161.1" diagnostics="errorCode.SC161.1 transactional.SC161.1 transactional.en.SC161.1 ">If [Copy of notices of consent attached] is 'yes' then there must be a PDF attachment of type 'other' in this submission.</sch:assert>
        <sch:assert test="sum(../../../../../../ct:CompanyTaxCalculation/ct:ChargesAndReliefs/ct:GroupRelief) &gt; 0" id="a_SC161.2" diagnostics="errorCode.SC161.2 transactional.SC161.2 transactional.en.SC161.2 ">If [Copy of notices of consent attached] is present the following should be true: [36] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p162">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:ClaimToGroupRelief">
        <sch:assert test="ct:ClaimAuthorisation
              or
            not((.)) 
              or
            not(../../../@ReturnType = &apos;new&apos;)" id="a_CLAIMTOGROUPRELIEF.0" diagnostics="errorCode.CLAIMTOGROUPRELIEF.0 transactional.CLAIMTOGROUPRELIEF.0 transactional.en.CLAIMTOGROUPRELIEF.0 ">[Authorisation of claim] is mandatory if [Return type] eq 'new' and [1: Claim to group relief].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p167">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:SurrenderedGroupRelief/ct:TotalSurrender">
        <sch:assert test="(math:abs((.) - ((sum(../ct:TradingLosses) + sum(../ct:ExcessNonTrading) + sum(../ct:NonTradingDeficit) + sum(../ct:NonTradingLossesOnIntangibleFixedAssets) + sum(../ct:ExcessCharges) + sum(../ct:ExcessLosses) + sum(../ct:ExcessManagementExpenses)))) &lt; 0.001)" id="a_SC032.0" diagnostics="errorCode.SC032.0 transactional.SC032.0 transactional.en.SC032.0 ">[Total surrendered as group relief] should equal ( The sum of [Trading losses], [Excess non-trade capital allowances], [Non trading deficit], [Non trading losses on intangible fixed assets], [Excess charges over profits], [Excess of schedule A losses over profits], and [Excess management expenses] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p168">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:SurrenderedGroupRelief/ct:SurrenderInformation/ct:Company/ct:AccountingPeriod">
        <sch:assert test="not (ct:To = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)
                    or 
                    not ( ct:From = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From )" id="a_SC034.0" diagnostics="errorCode.SC034.0 transactional.SC034.0 transactional.en.SC034.0 ">'To Date' must be different to [AP To Date] if 'Account of claimant company Start Date' is equal to [AP From Date], and vice versa.</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))" id="a_SC034.2" diagnostics="errorCode.SC034.2 transactional.SC034.2 transactional.en.SC034.2 ">From date must be on or before [AP To Date].</sch:assert>
        <sch:assert test="translate(date:add(normalize-space(string(ct:To)),normalize-space(&apos;-P12M&apos;)),&apos;-&apos;,&apos;&apos;) &lt; translate(ct:From,&apos;-&apos;,&apos;&apos;)" id="a_SC034.3" diagnostics="errorCode.SC034.3 transactional.SC034.3 transactional.en.SC034.3 ">Period Covered must not be longer than 12 months</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(ct:To)) div 86400) &lt; round(date:seconds(normalize-space(ct:From)) div 86400)))" id="a_SC034.4" diagnostics="errorCode.SC034.4 transactional.SC034.4 transactional.en.SC034.4 ">The To date must not be before the From date.</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(ct:To)) div 86400) &lt; round(date:seconds(normalize-space(../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))" id="a_SC034.5" diagnostics="errorCode.SC034.5 transactional.SC034.5 transactional.en.SC034.5 ">To date must be on or after [AP From Date].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p169">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:SurrenderedGroupRelief/ct:SurrenderInformation/ct:AmountSurrenderedTotal">
        <sch:assert test=". = sum(../ct:Company/ct:AmountSurrendered)" id="a_SC061.1" diagnostics="errorCode.SC061.1 transactional.SC061.1 transactional.en.SC061.1 ">[C2] must equal the sum of all iterations of [Amount surrendered].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p170">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:SurrenderedGroupRelief/ct:ConsentToSurrender/ct:ConsentOptions/ct:SimplifiedArrangementInForce">
        <sch:assert test="../../../ct:SurrenderInformation/ct:AmountSurrenderedTotal &gt; 0" id="a_SC150.0" diagnostics="errorCode.SC150.0 transactional.SC150.0 transactional.en.SC150.0 ">If [Simplified arrangement in force] is present the following should be true: [C2] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p171">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:SurrenderedGroupRelief/ct:ConsentToSurrender/ct:ConsentOptions/ct:NoticeOfConsentCompleted">
        <sch:assert test="../../ct:Declaration" id="a_SC151.0" diagnostics="errorCode.SC151.0 transactional.SC151.0 transactional.en.SC151.0 ">If Notice of consent completed is present the following should be true: [Declaration of consent]</sch:assert>
        <sch:assert test="not(../ct:CopyOfNoticesOfConsentAttached)" id="a_SC151.3" diagnostics="errorCode.SC151.3 transactional.SC151.3 transactional.en.SC151.3 ">[Notice of consent completed] should not be present if [Copy of notices of consent attached]</sch:assert>
        <sch:assert test="../../../ct:SurrenderInformation/ct:AmountSurrenderedTotal &gt; 0" id="a_SC151.4" diagnostics="errorCode.SC151.4 transactional.SC151.4 transactional.en.SC151.4 ">If [Notice of consent completed] is present the following should be true: [C2] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p172">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:SurrenderedGroupRelief/ct:ConsentToSurrender/ct:ConsentOptions/ct:CopyOfNoticesOfConsentAttached">
        <sch:assert test="not(../../ct:Declaration and (.))" id="a_SC152.0" diagnostics="errorCode.SC152.0 transactional.SC152.0 transactional.en.SC152.0 ">[Copy of notices of consent attached] should not be present if [Declaration of consent]</sch:assert>
        <sch:assert test="count(../../../../../../ct:AttachedFiles/ct:Attachment[@Type=&apos;other&apos; and @Format=&apos;pdf&apos;]) &gt; 0" id="a_SC152.1" diagnostics="errorCode.SC152.1 transactional.SC152.1 transactional.en.SC152.1 ">If [Copy of notices of consent attached] is 'yes' then there must be a PDF attachment of type 'other' in this submission.</sch:assert>
        <sch:assert test="../../../ct:SurrenderInformation/ct:AmountSurrenderedTotal &gt; 0" id="a_SC152.2" diagnostics="errorCode.SC152.2 transactional.SC152.2 transactional.en.SC152.2 ">If [Copy of notices of consent attached] is present the following should be true: [C2] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p173">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:SurrenderedGroupRelief/ct:ConsentToSurrender/ct:Declaration/ct:CompanyName">
        <sch:assert test="../../../../../../ct:CompanyInformation/ct:CompanyName = (.)" id="a_SC153.0" diagnostics="errorCode.SC153.0 transactional.SC153.0 transactional.en.SC153.0 ">Must equal [Company name].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p174">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:SurrenderedGroupRelief/ct:ConsentToSurrender/ct:Declaration/ct:TaxReference">
        <sch:assert test="../../../../../../ct:CompanyInformation/ct:Reference = ct:UTR" id="a_SC154.0" diagnostics="errorCode.SC154.0 transactional.SC154.0 transactional.en.SC154.0 ">The value of the UTR element of [Tax reference of company surrendering relief] must equal the value of [Company reference].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p175">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:SurrenderedGroupRelief/ct:ConsentToSurrender/ct:Declaration/ct:AccountingPeriod">
        <sch:assert test="(ct:From = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From) and (ct:To = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)" id="a_SC155.1" diagnostics="errorCode.SC155.1 transactional.SC155.1 transactional.en.SC155.1 ">From and To dates must be equal to [AP From Date] and [AP To Date].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p178">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTclaimed/ct:CompanyInformation/ct:Company/ct:AccountingPeriod">
        <sch:assert test="not (ct:To = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)
                    or 
                    not ( ct:From = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From )" id="a_SC064.1" diagnostics="errorCode.SC064.1 transactional.SC064.1 transactional.en.SC064.1 ">'To Date' must be different to [AP To Date] if 'Account of surrendering company Start Date' is equal to [AP From Date], and 'From Date' must be different to [AP From Date] if 'Account of surrendering company End Date' is equal to [AP To Date].</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))" id="a_SC064.2" diagnostics="errorCode.SC064.2 transactional.SC064.2 transactional.en.SC064.2 ">From date must be on or before [AP To Date].</sch:assert>
        <sch:assert test="translate(date:add(normalize-space(string(ct:To)),normalize-space(&apos;-P12M&apos;)),&apos;-&apos;,&apos;&apos;) &lt; translate(ct:From,&apos;-&apos;,&apos;&apos;)" id="a_SC064.3" diagnostics="errorCode.SC064.3 transactional.SC064.3 transactional.en.SC064.3 ">Period Covered must not be longer than 12 months</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(ct:To)) div 86400) &lt; round(date:seconds(normalize-space(ct:From)) div 86400)))" id="a_SC064.4" diagnostics="errorCode.SC064.4 transactional.SC064.4 transactional.en.SC064.4 ">The To date must not be before the From date.</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(ct:To)) div 86400) &lt; round(date:seconds(normalize-space(../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))" id="a_SC064.5" diagnostics="errorCode.SC064.5 transactional.SC064.5 transactional.en.SC064.5 ">To date must be on or after [AP From Date].</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(ct:To)) div 86400) &lt;= round(date:seconds(normalize-space(../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))" id="a_SC064.6" diagnostics="errorCode.SC064.6 transactional.SC064.6 transactional.en.SC064.6 ">To date must be on or before [AP To Date].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p177">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTclaimed/ct:CompanyInformation/ct:Company">
        <sch:assert test="ct:EUFTNoticeOfConsent
                  or

                not(../../../../../@ReturnType = &quot;new&quot;)" id="a_COMPANY3.0" diagnostics="errorCode.COMPANY3.0 transactional.COMPANY3.0 transactional.en.COMPANY3.0 ">[EUFT notice of consent] is mandatory if [Return type] eq 'new' and [3: Claims to EUFT].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p179">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTclaimed/ct:CompanyInformation/ct:TotalAmountClaimed">
        <sch:assert test="(math:abs(((.)) - (sum(../ct:Company/ct:AmountClaimed))) &lt; 0.001)" id="a_SC091.1" diagnostics="errorCode.SC091.1 transactional.SC091.1 transactional.en.SC091.1 ">[C3] must equal the sum of all iterations of [Amount claimed].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p176">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTclaimed">
        <sch:assert test="not(../../../@ReturnType = &apos;new&apos;) or not((.)) or count(../../../ct:AttachedFiles/ct:Attachment[@Type=&apos;other&apos; and @Format=&apos;pdf&apos;]) &gt; 0" id="a_EUFTCLAIMED.1" diagnostics="errorCode.EUFTCLAIMED.1 transactional.EUFTCLAIMED.1 transactional.en.EUFTCLAIMED.1 ">If [Return type] is 'new' and [3: Claims to EUFT] is submitted then there must be a PDF attachment of type 'other' in this submission.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p180">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTsurrendered/ct:CompanyInformation/ct:Company/ct:AccountingPeriod">
        <sch:assert test="not (ct:To = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)
                    or 
                    not ( ct:From = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From )" id="a_SC094.0" diagnostics="errorCode.SC094.0 transactional.SC094.0 transactional.en.SC094.0 ">'To Date' must be different to [AP To Date] if 'Account of claimant company Start Date' is equal to [AP From Date] and vice versa.</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400))" id="a_SC094.2" diagnostics="errorCode.SC094.2 transactional.SC094.2 transactional.en.SC094.2 ">From date must be on or before [AP To Date].</sch:assert>
        <sch:assert test="translate(date:add(normalize-space(string(ct:To)),normalize-space(&apos;-P12M&apos;)),&apos;-&apos;,&apos;&apos;) &lt; translate(ct:From,&apos;-&apos;,&apos;&apos;)" id="a_SC094.3" diagnostics="errorCode.SC094.3 transactional.SC094.3 transactional.en.SC094.3 ">Period Covered must not be longer than 12 months</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(ct:To)) div 86400) &lt; round(date:seconds(normalize-space(ct:From)) div 86400)))" id="a_SC094.4" diagnostics="errorCode.SC094.4 transactional.SC094.4 transactional.en.SC094.4 ">The To date must not be before the From date.</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(ct:To)) div 86400) &lt; round(date:seconds(normalize-space(../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))" id="a_SC094.5" diagnostics="errorCode.SC094.5 transactional.SC094.5 transactional.en.SC094.5 transactional.cy.SC094.5 ">[Accounting period of claimant company] 'To' date must be on or after [AP To Date].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p181">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTsurrendered/ct:CompanyInformation/ct:TotalAmountSurrendered">
        <sch:assert test="(math:abs((.) - (sum(../ct:Company/ct:AmountSurrendered))) &lt; 0.001)" id="a_SC121.1" diagnostics="errorCode.SC121.1 transactional.SC121.1 transactional.en.SC121.1 ">[C4] must equal the sum of all iterations of [Amount surrendered].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p182">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTsurrendered/ct:ConsentToSurrender/ct:ConsentOptions/ct:NoticeOfConsentCompleted">
        <sch:assert test="../../ct:ConsentDeclaration" id="a_SC180.0" diagnostics="errorCode.SC180.0 transactional.SC180.0 transactional.en.SC180.0 ">If Notice of consent completed is present the following should be true: [Declaration of consent]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p183">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTsurrendered/ct:ConsentToSurrender/ct:ConsentOptions/ct:CopyOfNoticesOfConsentAttached">
        <sch:assert test="not(../../ct:ConsentDeclaration and (.))" id="a_SC181.0" diagnostics="errorCode.SC181.0 transactional.SC181.0 transactional.en.SC181.0 ">Copy of notices of consent attached should not be present if [Declaration of consent]</sch:assert>
        <sch:assert test="count(../../../../../../ct:AttachedFiles/ct:Attachment[@Type=&apos;other&apos; and @Format=&apos;pdf&apos;]) &gt; 0" id="a_SC181.1" diagnostics="errorCode.SC181.1 transactional.SC181.1 transactional.en.SC181.1 ">If this is 'yes' then there must be a PDF attachment of type 'other' in this submission.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p184">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTsurrendered/ct:ConsentToSurrender/ct:ConsentDeclaration/ct:CompanyName">
        <sch:assert test="../../../../../../ct:CompanyInformation/ct:CompanyName = (.)" id="a_SC182.0" diagnostics="errorCode.SC182.0 transactional.SC182.0 transactional.en.SC182.0 ">Must equal [Company name].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p185">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTsurrendered/ct:ConsentToSurrender/ct:ConsentDeclaration/ct:CompanyReference">
        <sch:assert test="../../../../../../ct:CompanyInformation/ct:Reference = ct:UTR" id="a_SC183.0" diagnostics="errorCode.SC183.0 transactional.SC183.0 transactional.en.SC183.0 ">The value of the UTR element of [Tax reference of company surrendering EUFT] must equal the value of [Company reference].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p186">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium/ct:EUFTsurrendered/ct:ConsentToSurrender/ct:ConsentDeclaration/ct:AccountingPeriod">
        <sch:assert test="(ct:From = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From) and (ct:To = ../../../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)" id="a_SC184.1" diagnostics="errorCode.SC184.1 transactional.SC184.1 transactional.en.SC184.1 ">From and To dates must be equal to [AP From Date] and [AP To Date].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p161">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium/ct:GroupAndConsortium">
        <sch:assert test="ct:ClaimToGroupRelief or ct:SurrenderedGroupRelief or ct:EUFTclaimed or ct:EUFTsurrendered" id="a_GROUPANDCONSORTIUM.0" diagnostics="errorCode.GROUPANDCONSORTIUM.0 transactional.GROUPANDCONSORTIUM.0 transactional.en.GROUPANDCONSORTIUM.0 ">If Group and consortium is present the following should be true: [1: Claim to group relief] or [2: Amounts surrendered as group relief] or [3: Claims to EUFT] or [4: Amounts of EUFT Surrendered]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p160">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:GroupAndConsortium">
        <sch:assert test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600C = &apos;yes&apos;" id="a_N097.0" diagnostics="errorCode.N097.0 transactional.N097.0 transactional.en.N097.0 transactional.cy.N097.0 ">If Group and consortium is present the following should be true: [CT600C attached] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p190">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:Schedule19AB/ct:NotionalRepayments">
        <sch:assert test="../../ct:RelevantCredits/ct:AppropriatePlusRelevant" id="a_SD003.0" diagnostics="errorCode.SD003.0 transactional.SD003.0 transactional.en.SD003.0 ">[D13] must be present if [D2] is present.</sch:assert>
        <sch:assert test="not((.)) or (round(date:seconds(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;1999-03-31&apos;)) div 86400))" id="a_SD003.1" diagnostics="errorCode.SD003.1 transactional.SD003.1 transactional.en.SD003.1 ">[D2] can only be submitted if [AP From Date] is on or before '1999-03-31'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p191">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:Schedule19AB/ct:TotalRepayments">
        <sch:assert test="(math:abs((.) - ((sum(../ct:RepaymentsMade) + sum(../ct:NotionalRepayments)))) &lt; 0.001)" id="a_SD004.0" diagnostics="errorCode.SD004.0 transactional.SD004.0 transactional.en.SD004.0 ">Total repayments is valid if and only if it equals ( [D1] plus [D2] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p189">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:Schedule19AB">
        <sch:assert test="ct:RepaymentsMade or ct:NotionalRepayments" id="a_SCHEDULE19AB.0" diagnostics="errorCode.SCHEDULE19AB.0 transactional.SCHEDULE19AB.0 transactional.en.SCHEDULE19AB.0 ">If Schedule19 aB is present the following should be true: [D1] or [D2]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p193">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:Gilts/ct:RealGiltsTax">
        <sch:assert test="not((.)) or (round(date:seconds(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;1999-03-31&apos;)) div 86400))" id="a_SD005.0" diagnostics="errorCode.SD005.0 transactional.SD005.0 transactional.en.SD005.0 ">[D4] can only be submitted if [AP From Date] is on or before '1999-03-31'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p194">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:Gilts/ct:ManufacturedGiltsTax">
        <sch:assert test="not((.)) or (round(date:seconds(normalize-space(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;1999-03-31&apos;)) div 86400))" id="a_SD006.0" diagnostics="errorCode.SD006.0 transactional.SD006.0 transactional.en.SD006.0 ">[D5] can only be submitted if [AP From Date] is on or before '1999-03-31'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p195">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:Gilts/ct:TotalRepayableGiltsTax">
        <sch:assert test="(math:abs((.) - ((sum(../ct:RealGiltsTax) + sum(../ct:ManufacturedGiltsTax)))) &lt; 0.001)" id="a_SD007.0" diagnostics="errorCode.SD007.0 transactional.SD007.0 transactional.en.SD007.0 ">Total repayable gilts tax is valid if and only if it equals ( [D4] plus [D5] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p192">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:Gilts">
        <sch:assert test="ct:RealGiltsTax or ct:ManufacturedGiltsTax" id="a_GILTS.0" diagnostics="errorCode.GILTS.0 transactional.GILTS.0 transactional.en.GILTS.0 ">If Gilts is present the following should be true: [D4] or [D5]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p196">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:PensionBusiness/ct:TotalPensionTax">
        <sch:assert test="(math:abs((.) - ((sum(../../ct:Gilts/ct:TotalRepayableGiltsTax) + sum(../ct:PensionIncomeTaxSuffered) + sum(../ct:OtherIncomeTaxSuffered)))) &lt; 0.001)" id="a_SD010.0" diagnostics="errorCode.SD010.0 transactional.SD010.0 transactional.en.SD010.0 ">Total pension tax is valid if and only if it equals ( The sum of [D6], [D7], and [D8] )</sch:assert>
        <sch:assert test="../../ct:RelevantCredits/ct:AppropriatePlusRelevant" id="a_SD010.1" diagnostics="errorCode.SD010.1 transactional.SD010.1 transactional.en.SD010.1 ">[D13] must be present if [D9] is present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p197">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:TotalIncomeTaxSuffered">
        <sch:assert test="../ct:RelevantCredits/ct:AppropriatePlusRelevant" id="a_SD011.0" diagnostics="errorCode.SD011.0 transactional.SD011.0 transactional.en.SD011.0 ">[D13] must be present if [D10] is present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p198">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:IncomeTaxDeducted">
        <sch:assert test="../ct:RelevantCredits/ct:AppropriatePlusRelevant" id="a_SD012.0" diagnostics="errorCode.SD012.0 transactional.SD012.0 transactional.en.SD012.0 ">[D13] must be present if [D11] is present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p199">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:CorporationTax">
        <sch:assert test="../ct:RelevantCredits/ct:AppropriatePlusRelevant" id="a_SD013.0" diagnostics="errorCode.SD013.0 transactional.SD013.0 transactional.en.SD013.0 ">[D13] must be present if [D12] is present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p201">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:RelevantCredits/ct:AppropriatePlusRelevant">
        <sch:assert test="(((sum(../../ct:Schedule19AB/ct:NotionalRepayments) + sum(../../ct:TotalIncomeTaxSuffered)) - (sum(../../ct:IncomeTaxDeducted) + sum(../../ct:CorporationTax))) &lt;= 0) 
  or 
(((sum(../../ct:PensionBusiness/ct:TotalPensionTax)) - (((sum(../../ct:Schedule19AB/ct:NotionalRepayments) + sum(../../ct:TotalIncomeTaxSuffered)) - (sum(../../ct:IncomeTaxDeducted) + sum(../../ct:CorporationTax)))) &lt; 0.001) and (math:abs((.) - (sum(../../ct:PensionBusiness/ct:TotalPensionTax))) &lt; 0.001))
  or
(((((sum(../../ct:Schedule19AB/ct:NotionalRepayments) + sum(../../ct:TotalIncomeTaxSuffered)) - (sum(../../ct:IncomeTaxDeducted) + sum(../../ct:CorporationTax)))) - (sum(../../ct:PensionBusiness/ct:TotalPensionTax)) &lt; 0.001) and (math:abs((.) - (((sum(../../ct:Schedule19AB/ct:NotionalRepayments) + sum(../../ct:TotalIncomeTaxSuffered)) - (sum(../../ct:IncomeTaxDeducted) + sum(../../ct:CorporationTax))))) &lt; 0.001))" id="a_SD014.0" diagnostics="errorCode.SD014.0 transactional.SD014.0 transactional.en.SD014.0 ">If the sum ([D2] + [D10] minus ([D11] + [D12]) ) is positive, then [D13] must equal the lower of [D9] or that sum, where [D9] is treated as being zero if absent.</sch:assert>
        <sch:assert test="((sum(../../ct:Schedule19AB/ct:NotionalRepayments) + sum(../../ct:TotalIncomeTaxSuffered)) - (sum(../../ct:IncomeTaxDeducted) + sum(../../ct:CorporationTax))) &gt; 0 or (.) = 0" id="a_SD014.1" diagnostics="errorCode.SD014.1 transactional.SD014.1 transactional.en.SD014.1 ">If the sum ([D2] + [D10] minus ([D11] + [D12]) ) is not positive, then [D13] must be zero or absent.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p202">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:RelevantCredits/ct:TotalFinalPlusCredits">
        <sch:assert test="(math:abs((.) - ((sum(../ct:AppropriatePlusRelevant) + sum(../ct:TaxCredits)))) &lt; 0.001)" id="a_SD016.0" diagnostics="errorCode.SD016.0 transactional.SD016.0 transactional.en.SD016.0 ">Total final plus credits is valid if and only if it equals ( [D13] plus [D14] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p200">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:RelevantCredits">
        <sch:assert test="ct:AppropriatePlusRelevant or ct:TaxCredits" id="a_RELEVANTCREDITS.0" diagnostics="errorCode.RELEVANTCREDITS.0 transactional.RELEVANTCREDITS.0 transactional.en.RELEVANTCREDITS.0 ">If Relevant credits is present the following should be true: [D13] or [D14]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p203">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS/ct:Liability">
        <sch:assert test="((../ct:Schedule19AB/ct:TotalRepayments - sum(../ct:RelevantCredits/ct:TotalFinalPlusCredits)) &gt; 0 and (.) = (../ct:Schedule19AB/ct:TotalRepayments - sum(../ct:RelevantCredits/ct:TotalFinalPlusCredits)))
              or
            (not((../ct:Schedule19AB/ct:TotalRepayments - sum(../ct:RelevantCredits/ct:TotalFinalPlusCredits)) &gt; 0) and (.) = 0)" id="a_SD017.0" diagnostics="errorCode.SD017.0 transactional.SD017.0 transactional.en.SD017.0 ">[D16] must equal [D3] minus [D15] if the sum is positive.  Otherwise, [D16] must equal zero.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p188">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance/ct:INYEARREPAYMENTS">
        <sch:assert test="not(ct:Schedule19AB/ct:TotalRepayments &gt; sum(ct:RelevantCredits/ct:TotalFinalPlusCredits)) or ct:Liability" id="a_INYEARREPAYMENTS.1" diagnostics="errorCode.INYEARREPAYMENTS.1 transactional.INYEARREPAYMENTS.1 transactional.en.INYEARREPAYMENTS.1 ">Liability should be present if [D3] exceeds [D15]</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2004-04-05&apos;)) div 86400))" id="a_INYEARREPAYMENTS.2" diagnostics="errorCode.INYEARREPAYMENTS.2 transactional.INYEARREPAYMENTS.2 transactional.en.INYEARREPAYMENTS.2 ">If [D1-D16] is submitted then [AP From Date] must be on or before '2004-04-05'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p187">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Insurance">
        <sch:assert test="ct:INYEARREPAYMENTS or ct:Declaration" id="a_CT600D.0" diagnostics="errorCode.CT600D.0 transactional.CT600D.0 transactional.en.CT600D.0 ">Either [D1-D16] or [Overseas life assurance business declaration] must be submitted.</sch:assert>
        <sch:assert test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600D = &apos;yes&apos;" id="a_N098.0" diagnostics="errorCode.N098.0 transactional.N098.0 transactional.en.N098.0 transactional.cy.N098.0 ">If Insurance is present the following should be true: [CT600D attached] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p205">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity/ct:ClaimExemption/ct:Status">
        <sch:assert test="ct:AllCharitable/ct:ClaimingExemptionAllOrPart or ct:AllCharitable/ct:AllExempt or ct:SomeNotOnlyCharitable" id="a_STATUS.1" diagnostics="errorCode.STATUS.1 transactional.STATUS.1 transactional.en.STATUS.1 transactional.cy.STATUS.1 ">If Status is present the following should be true: [Claiming exemption all or part tick box] or [All exemptAll exempt tick box] or [Some not only charitable tick box]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p207">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity/ct:Repayments/ct:TotalDue/ct:IncomeTax">
        <sch:assert test="../../ct:FurtherDue or ../../ct:AmountsOverclaimed" id="a_SE008.0" diagnostics="errorCode.SE008.0 transactional.SE008.0 transactional.en.SE008.0 transactional.cy.SE008.0 ">If Income tax is present the following should be true: [E3,E3c] or [E4,E4d]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p208">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity/ct:Repayments/ct:FurtherDue/ct:IncomeTax">
        <sch:assert test="not((sum(../../ct:TotalDue/ct:IncomeTax) &lt; sum(../../ct:AlreadyClaimed/ct:IncomeTax)) and (.))" id="a_SE010.0" diagnostics="errorCode.SE010.0 transactional.SE010.0 transactional.en.SE010.0 transactional.cy.SE010.0 ">[E3] should not be present if [E2] is less than [E1]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p209">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity/ct:Repayments/ct:FurtherDue/ct:TransitionalRelief">
        <sch:assert test="not((sum(../../ct:TotalDue/ct:TransitionalRelief) &lt; sum(../../ct:AlreadyClaimed/ct:TransitionalRelief)) and (.))" id="a_SE011.0" diagnostics="errorCode.SE011.0 transactional.SE011.0 transactional.en.SE011.0 transactional.cy.SE011.0 ">[E3c] should not be present if [E2b] is less than [E1a]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p210">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity/ct:Repayments/ct:AmountsOverclaimed/ct:IncomeTax">
        <sch:assert test="not((sum(../../ct:AlreadyClaimed/ct:IncomeTax) &lt; sum(../../ct:TotalDue/ct:IncomeTax)) and (.))" id="a_SE012.0" diagnostics="errorCode.SE012.0 transactional.SE012.0 transactional.en.SE012.0 transactional.cy.SE012.0 ">[E4] should not be present if [E1] is less than [E2]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p211">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity/ct:Repayments/ct:AmountsOverclaimed/ct:TransitionalRelief">
        <sch:assert test="not((sum(../../ct:AlreadyClaimed/ct:TransitionalRelief) &lt; sum(../../ct:TotalDue/ct:TransitionalRelief)) and (.))" id="a_SE013.0" diagnostics="errorCode.SE013.0 transactional.SE013.0 transactional.en.SE013.0 transactional.cy.SE013.0 ">[E4d] should not be present if [E1a] is less than [E2b]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p212">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity/ct:Repayments/ct:E3E3cIncludedAmounts">
        <sch:assert test="../ct:FurtherDue" id="a_SE042.1" diagnostics="errorCode.SE042.1 transactional.SE042.1 transactional.en.SE042.1 transactional.cy.SE042.1 ">If E3 e3c included amounts is present the following should be true: [E3,E3c]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p206">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity/ct:Repayments">
        <sch:assert test="not(sum(ct:TotalDue/ct:IncomeTax) &gt; sum(ct:AlreadyClaimed/ct:IncomeTax)) or ct:FurtherDue/ct:IncomeTax" id="a_REPAYMENTS.0" diagnostics="errorCode.REPAYMENTS.0 transactional.REPAYMENTS.0 transactional.en.REPAYMENTS.0 transactional.cy.REPAYMENTS.0 ">[E3] should be present if [E2] exceeds [E1]</sch:assert>
        <sch:assert test="not(sum(ct:TotalDue/ct:TransitionalRelief) &gt; sum(ct:AlreadyClaimed/ct:TransitionalRelief)) or ct:FurtherDue/ct:TransitionalRelief" id="a_REPAYMENTS.1" diagnostics="errorCode.REPAYMENTS.1 transactional.REPAYMENTS.1 transactional.en.REPAYMENTS.1 transactional.cy.REPAYMENTS.1 ">[E3c] should be present if [E2b] exceeds [E1a]</sch:assert>
        <sch:assert test="not(sum(ct:AlreadyClaimed/ct:IncomeTax) &gt; sum(ct:TotalDue/ct:IncomeTax)) or ct:AmountsOverclaimed/ct:IncomeTax" id="a_REPAYMENTS.2" diagnostics="errorCode.REPAYMENTS.2 transactional.REPAYMENTS.2 transactional.en.REPAYMENTS.2 transactional.cy.REPAYMENTS.2 ">[E4] should be present if [E1] exceeds [E2]</sch:assert>
        <sch:assert test="not(sum(ct:AlreadyClaimed/ct:TransitionalRelief) &gt; sum(ct:TotalDue/ct:TransitionalRelief)) or ct:AmountsOverclaimed/ct:TransitionalRelief" id="a_REPAYMENTS.3" diagnostics="errorCode.REPAYMENTS.3 transactional.REPAYMENTS.3 transactional.en.REPAYMENTS.3 transactional.cy.REPAYMENTS.3 ">[E4d] should be present if [E1a] exceeds [E2b]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p213">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity/ct:InformationRequired/ct:Expenditure/ct:TradingCosts">
        <sch:assert test="sum(../../ct:Income/ct:TotalTurnover) &gt; 0" id="a_SE023.0" diagnostics="errorCode.SE023.0 transactional.SE023.0 transactional.en.SE023.0 transactional.cy.SE023.0 ">If Trading costs is present the following should be true: [E5] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p214">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity/ct:InformationRequired/ct:Expenditure/ct:UKlandBuildings">
        <sch:assert test="sum(../../ct:Income/ct:UKlandBuildings) &gt; 0" id="a_SE024.0" diagnostics="errorCode.SE024.0 transactional.SE024.0 transactional.en.SE024.0 transactional.cy.SE024.0 ">If UKland buildings is present the following should be true: [E7] exceeds 0</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p215">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity/ct:InformationRequired/ct:Assets/ct:InvestmentsOrLoans/ct:Qualifying">
        <sch:assert test="not(../ct:ValueOfNonQualifying and (.))" id="a_SE039.1" diagnostics="errorCode.SE039.1 transactional.SE039.1 transactional.en.SE039.1 transactional.cy.SE039.1 ">Qualifying should not be present if [E27]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p204">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:Charity">
        <sch:assert test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600E = &apos;yes&apos;" id="a_N099.0" diagnostics="errorCode.N099.0 transactional.N099.0 transactional.en.N099.0 transactional.cy.N099.0 ">If Charity is present the following should be true: [CT600E attached] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p218">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TonnageTax/ct:TonnageTax/ct:Information/ct:TonnageGroup/ct:GroupElection">
        <sch:assert test="not((.) = &apos;yes&apos;) or ../ct:Name" id="a_SF001.1" diagnostics="errorCode.SF001.1 transactional.SF001.1 transactional.en.SF001.1 ">If [F1] is 'yes', then [F2] must be present</sch:assert>
        <sch:assert test="not((.) = &apos;yes&apos;) or ../../ct:GroupMetCharteredInLimit" id="a_SF001.2" diagnostics="errorCode.SF001.2 transactional.SF001.2 transactional.en.SF001.2 ">If [F1] is 'yes', then [F6] must be present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p219">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TonnageTax/ct:TonnageTax/ct:Information/ct:TonnageGroup/ct:Name">
        <sch:assert test="not(../ct:GroupElection = &apos;no&apos;) or not((.))" id="a_SF003.1" diagnostics="errorCode.SF003.1 transactional.SF003.1 transactional.en.SF003.1 ">If [F1] is 'no', [F2] must not be present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p220">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TonnageTax/ct:TonnageTax/ct:Information/ct:TonnageGroup/ct:RepresentativeCompany">
        <sch:assert test="not((../ct:GroupElection = &apos;no&apos;) and (.))" id="a_REPRESENTATIVECOMPANY.0" diagnostics="errorCode.REPRESENTATIVECOMPANY.0 transactional.REPRESENTATIVECOMPANY.0 transactional.en.REPRESENTATIVECOMPANY.0 ">Representative company should not be present if [F1] equals 'no'</sch:assert>
        <sch:assert test="not (../ct:GroupElection = &apos;yes&apos;)
                  or (ct:TonnageTaxGroupArrangement and not(ct:NotApplicable))
                  or (not(ct:TonnageTaxGroupArrangement) and ct:NotApplicable)" id="a_REPRESENTATIVECOMPANY.1" diagnostics="errorCode.REPRESENTATIVECOMPANY.1 transactional.REPRESENTATIVECOMPANY.1 transactional.en.REPRESENTATIVECOMPANY.1 ">If [F1] is 'yes' then exactly one of [Tonnage tax group arrangement] and [F3 - No representative company] must be present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p221">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TonnageTax/ct:TonnageTax/ct:Information/ct:CompanyMetCharteredInLimit">
        <sch:assert test="not(../ct:TonnageGroup/ct:GroupElection = &apos;yes&apos;) or (. = &apos;na&apos;)" id="a_SF009.1" diagnostics="errorCode.SF009.1 transactional.SF009.1 transactional.en.SF009.1 ">[F5] must equal 'na' if [F1] is 'yes'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p222">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TonnageTax/ct:TonnageTax/ct:Information/ct:GroupMetCharteredInLimit">
        <sch:assert test="(. = &apos;na&apos;) or (../ct:TonnageGroup/ct:RepresentativeCompany/ct:TonnageTaxGroupArrangement/ct:Name and (../ct:TonnageGroup/ct:RepresentativeCompany/ct:TonnageTaxGroupArrangement/ct:Name = ../../../../ct:CompanyInformation/ct:CompanyName))" id="a_SF012.1" diagnostics="errorCode.SF012.1 transactional.SF012.1 transactional.en.SF012.1 ">[F6] must be 'na' if [F3 - Name] is absent or not equal to [Company name].</sch:assert>
        <sch:assert test="(. = &apos;yes&apos;) or (. = &apos;no&apos;) or (not(../ct:TonnageGroup/ct:RepresentativeCompany/ct:TonnageTaxGroupArrangement/ct:Name = ../../../../ct:CompanyInformation/ct:CompanyName))" id="a_SF012.2" diagnostics="errorCode.SF012.2 transactional.SF012.2 transactional.en.SF012.2 ">[F6] must be 'yes' or 'no' if [F3 - Name] equals [Company name].</sch:assert>
        <sch:assert test="not(../ct:TonnageGroup/ct:GroupElection = &apos;no&apos;) or not((.))" id="a_SF012.3" diagnostics="errorCode.SF012.3 transactional.SF012.3 transactional.en.SF012.3 ">If [F1] is 'no', then [F6] must not be present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p223">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TonnageTax/ct:TonnageTax/ct:Information/ct:OffshoreActivities">
        <sch:assert test="not((.) = &apos;yes&apos;) or ../../ct:OffshoreTrainingAllowance" id="a_SF015.0" diagnostics="errorCode.SF015.0 transactional.SF015.0 transactional.en.SF015.0 ">Offshore training allowance should be present if [F7] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p224">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TonnageTax/ct:TonnageTax/ct:QualifyingShips/ct:Total">
        <sch:assert test=". = floor(sum(../ct:Ship/ct:Profits) + 0.0001 )" id="a_SF062.1" diagnostics="errorCode.SF062.1 transactional.SF062.1 transactional.en.SF062.1 ">[F10] must equal (the sum of all iterations of [Tonnage tax profits]) rounded down to the nearest whole pound.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p217">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TonnageTax/ct:TonnageTax">
        <sch:assert test="ct:QualifyingShips or ct:RelevantShippingProfits" id="a_TONNAGETAX.0" diagnostics="errorCode.TONNAGETAX.0 transactional.TONNAGETAX.0 transactional.en.TONNAGETAX.0 ">If Tonnage tax is present the following should be true: [Qualifying ships] or [4: Relevant shipping profits]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p216">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TonnageTax">
        <sch:assert test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600F = &apos;yes&apos;" id="a_N100.0" diagnostics="errorCode.N100.0 transactional.N100.0 transactional.en.N100.0 transactional.cy.N100.0 ">If Tonnage tax is present the following should be true: [CT600F attached] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p227">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CorporateVenturingScheme/ct:CorporateVenturingScheme/ct:InvestmentRelief/ct:ShareDetails/ct:DateOfIssue">
        <sch:assert test="translate(.,&apos;-&apos;,&apos;&apos;) &gt;= translate(&apos;2000-04-01&apos;,&apos;-&apos;,&apos;&apos;)" id="a_SG004.0" diagnostics="errorCode.SG004.0 transactional.SG004.0 transactional.en.SG004.0 ">[Date of issue] should be on or after '2000-04-01'</sch:assert>
        <sch:assert test="translate(.,&apos;-&apos;,&apos;&apos;) &lt;= translate(&apos;2010-03-31&apos;,&apos;-&apos;,&apos;&apos;)" id="a_SG004.1" diagnostics="errorCode.SG004.1 transactional.SG004.1 transactional.en.SG004.1 ">[Date of issue] should be on or before '2010-03-31'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p228">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CorporateVenturingScheme/ct:CorporateVenturingScheme/ct:InvestmentRelief/ct:TotalInvestmentReliefClaimed">
        <sch:assert test="../../../../ct:CompanyTaxCalculation/ct:TaxReliefsAndDeductions/ct:CVSInvestmentRelief and (../../../../ct:CompanyTaxCalculation/ct:TaxReliefsAndDeductions/ct:CVSInvestmentRelief = (.))" id="a_SG036.0" diagnostics="errorCode.SG036.0 transactional.SG036.0 transactional.en.SG036.0 ">If there is an entry in [G1] then [71] must be present and must equal that value.</sch:assert>
        <sch:assert test="(math:abs((.) - (sum(../ct:ShareDetails/ct:InvestmentReliefClaimed))) &lt; 0.001)" id="a_SG036.1" diagnostics="errorCode.SG036.1 transactional.SG036.1 transactional.en.SG036.1 ">This must equal the total of all iterations of [Investment Relief Claimed].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p229">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CorporateVenturingScheme/ct:CorporateVenturingScheme/ct:LossesOnDisposals/ct:DateOfIssue">
        <sch:assert test="translate(.,&apos;-&apos;,&apos;&apos;) &gt;= translate(&apos;2000-04-01&apos;,&apos;-&apos;,&apos;&apos;)" id="a_SG040.0" diagnostics="errorCode.SG040.0 transactional.SG040.0 transactional.en.SG040.0 ">[Date of issue of sharesDate of issue of shares] should be on or after '2000-04-01'</sch:assert>
        <sch:assert test="translate(.,&apos;-&apos;,&apos;&apos;) &lt;= translate(&apos;2010-03-31&apos;,&apos;-&apos;,&apos;&apos;)" id="a_SG040.1" diagnostics="errorCode.SG040.1 transactional.SG040.1 transactional.en.SG040.1 ">[Date of issue of sharesDate of issue of shares] should be on or before '2010-03-31'</sch:assert>
        <sch:assert test="translate(.,&apos;-&apos;,&apos;&apos;) &lt;= translate(../ct:DateOfDisposal,&apos;-&apos;,&apos;&apos;)" id="a_SG040.2" diagnostics="errorCode.SG040.2 transactional.SG040.2 transactional.en.SG040.2 ">[Date of issue of sharesDate of issue of shares] should be on or before [Date of Disposal]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p230">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CorporateVenturingScheme/ct:CorporateVenturingScheme/ct:LossesOnDisposals/ct:DateOfDisposal">
        <sch:assert test="concat(translate(., &apos;-&apos;,&apos;&apos;),&apos;000000&apos;) &lt;= translate(string(/hd:GovTalkMessage/hd:Header/hd:MessageDetails/hd:GatewayTimestamp),&apos;-:T&apos;,&apos;&apos;)" id="a_SG041.0" diagnostics="errorCode.SG041.0 transactional.SG041.0 transactional.en.SG041.0 ">Must not be later than the date of submission.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p231">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CorporateVenturingScheme/ct:CorporateVenturingScheme/ct:LossesOnDisposals/ct:FromDate">
        <sch:assert test="translate(.,&apos;-&apos;,&apos;&apos;) &lt;= translate(../ct:ToDate,&apos;-&apos;,&apos;&apos;)" id="a_SG042.0" diagnostics="errorCode.SG042.0 transactional.SG042.0 transactional.en.SG042.0 ">[Accounting period of claim from date] should be on or before [To Date]</sch:assert>
        <sch:assert test="number(translate(.,&apos;-&apos;,&apos;&apos;)) &gt; number(translate(../ct:ToDate,&apos;-&apos;,&apos;&apos;)) - 10000" id="a_SG042.1" diagnostics="errorCode.SG042.1 transactional.SG042.1 transactional.en.SG042.1 ">[Accounting period of claim from date] must not be more than 12 months earlier than [To Date].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p232">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CorporateVenturingScheme/ct:CorporateVenturingScheme/ct:DeferralRelief/ct:DateDisposal">
        <sch:assert test="concat(translate(., &apos;-&apos;,&apos;&apos;),&apos;000000&apos;) &lt;= translate(string(/hd:GovTalkMessage/hd:Header/hd:MessageDetails/hd:GatewayTimestamp),&apos;-:T&apos;,&apos;&apos;)" id="a_SG071.0" diagnostics="errorCode.SG071.0 transactional.SG071.0 transactional.en.SG071.0 ">Must not be later than the date of submission.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p233">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CorporateVenturingScheme/ct:CorporateVenturingScheme/ct:DeferralRelief/ct:NewDateIssue">
        <sch:assert test="concat(translate(., &apos;-&apos;,&apos;&apos;),&apos;000000&apos;) &lt;= translate(string(/hd:GovTalkMessage/hd:Header/hd:MessageDetails/hd:GatewayTimestamp),&apos;-:T&apos;,&apos;&apos;)" id="a_SG074.0" diagnostics="errorCode.SG074.0 transactional.SG074.0 transactional.en.SG074.0 ">Must not be later than the date of submission.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p226">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CorporateVenturingScheme/ct:CorporateVenturingScheme">
        <sch:assert test="ct:InvestmentRelief or ct:LossesOnDisposals or ct:DeferralRelief" id="a_CORPORATEVENTURINGSCHEME.0" diagnostics="errorCode.CORPORATEVENTURINGSCHEME.0 transactional.CORPORATEVENTURINGSCHEME.0 transactional.en.CORPORATEVENTURINGSCHEME.0 ">If Corporate venturing scheme is present the following should be true: [Investment Relief] or [Losses on Disposals] or [Deferral Relief]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p225">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CorporateVenturingScheme">
        <sch:assert test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600G = &apos;yes&apos;" id="a_N101.0" diagnostics="errorCode.N101.0 transactional.N101.0 transactional.en.N101.0 transactional.cy.N101.0 ">If Corporate venturing scheme is present the following should be true: [CT600G attached] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p235">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CrossBorderRoyalties/ct:Royalties/ct:DeductionAmount">
        <sch:assert test="(math:abs((.) - (round((../ct:Amount * (translate(string(../ct:DeductionRate),&apos;.&apos;,&apos;&apos;))) div 100) div 100)) &lt; 0.001)" id="a_SH008.0" diagnostics="errorCode.SH008.0 transactional.SH008.0 transactional.en.SH008.0 ">For each iteration, [Deduction amount] must equal [Gross amount of royalty paid] multiplied by [Deduction rate] divided by 100, and rounded to the nearest penny (round down for factions less than half a penny, and round up for fractions of half a penny or greater).</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p234">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CrossBorderRoyalties">
        <sch:assert test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600H = &apos;yes&apos;" id="a_N102.0" diagnostics="errorCode.N102.0 transactional.N102.0 transactional.en.N102.0 transactional.cy.N102.0 ">If Cross border royalties is present the following should be true: [CT600H attached] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p237">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:RingFenceTrade/ct:DisallowedFinancingCosts/ct:Total">
        <sch:assert test="(math:abs((.) - ((sum(../ct:RelatedToCompany) + sum(../ct:RelatedToLossRelief)))) &lt; 0.001)" id="a_SI006.0" diagnostics="errorCode.SI006.0 transactional.SI006.0 transactional.en.SI006.0 ">[I4] should equal ( [I2] plus [I3] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p238">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:RingFenceTrade/ct:Profits">
        <sch:assert test="not (../ct:Trade/ct:Profits = &apos;yes&apos;)
            or (math:abs((.) - (../ct:Trade/ct:Amount + sum(../ct:DisallowedFinancingCosts/ct:Total))) &lt; 0.001)" id="a_SI007.0" diagnostics="errorCode.SI007.0 transactional.SI007.0 transactional.en.SI007.0 ">If [A] is 'yes' then [I5] must equal [I1] plus [I4].</sch:assert>
        <sch:assert test="not( ../ct:Trade/ct:Losses = &apos;yes&apos;)
          or (
              sum(../ct:DisallowedFinancingCosts/ct:Total) - ../ct:Trade/ct:Amount &lt;= 0
            and
              (math:abs((.) - (0)) &lt; 0.001)
          )
          or (
              sum(../ct:DisallowedFinancingCosts/ct:Total) - ../ct:Trade/ct:Amount &gt; 0
            and
              (math:abs((.) - (sum(../ct:DisallowedFinancingCosts/ct:Total) - ../ct:Trade/ct:Amount)) &lt; 0.001)
          )" id="a_SI007.1" diagnostics="errorCode.SI007.1 transactional.SI007.1 transactional.en.SI007.1 ">If [B] is 'yes' then [I5] must equal [I4] minus [I1] if the sum is positive, or zero otherwise.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p239">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:RingFenceTrade/ct:MinusLosses">
        <sch:assert test=". &lt;= ../ct:Profits" id="a_SI008.0" diagnostics="errorCode.SI008.0 transactional.SI008.0 transactional.en.SI008.0 ">[I6] should not exceed [I5]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p240">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:RingFenceTrade/ct:FieldAllowance">
        <sch:assert test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2009-04-21&apos;)) div 86400)))" id="a_SI014.0" diagnostics="errorCode.SI014.0 transactional.SI014.0 transactional.en.SI014.0 ">[I12] should not be present if [AP To Date] onOrBefore 2009-04-21</sch:assert>
        <sch:assert test="((.) - ((../ct:Profits - sum(../ct:MinusLosses))) &lt; 0.001)" id="a_SI014.1" diagnostics="errorCode.SI014.1 transactional.SI014.1 transactional.en.SI014.1 ">[I12] should not exceed ( [I5] minus [I6] )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p241">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:RingFenceTrade/ct:NetProfits">
        <sch:assert test="(math:abs((.) - ((../ct:Profits - (sum(../ct:MinusLosses) + sum(../ct:FieldAllowance))))) &lt; 0.001)" id="a_SI009.0" diagnostics="errorCode.SI009.0 transactional.SI009.0 transactional.en.SI009.0 ">[I7] should equal ( [I5] minus ( [I6] plus [I12] ) )</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p242">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:RingFenceTrade/ct:Tax">
        <sch:assert test="../../ct:CompanyTaxCalculation/ct:S501AtaxCharge and ../../ct:CompanyTaxCalculation/ct:S501AtaxCharge = (.)" id="a_SI010.0" diagnostics="errorCode.SI010.0 transactional.SI010.0 transactional.en.SI010.0 ">If [I8] is submitted then [82] must be present and equal to [I8].</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2005-12-31&apos;)) div 86400))) or (math:abs((.) - (../ct:NetProfits * 0.1)) &lt; 0.001)" id="a_SI010.1" diagnostics="errorCode.SI010.1 transactional.SI010.1 transactional.en.SI010.1 ">If [AP To Date] is on or before '2005-12-31' then [I8] must equal [I7] * 0.1.</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(&apos;2006-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) 
            or
              not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2011-03-23&apos;)) div 86400)))
            or
              (math:abs((.) - (../ct:NetProfits * 0.2)) &lt; 0.001)" id="a_SI010.2" diagnostics="errorCode.SI010.2 transactional.SI010.2 transactional.en.SI010.2 ">If [AP From Date] is on or after '2006-01-01' and [AP To Date] is on or before '2011-03-23' then [I8] must equal [I7] * 0.2.</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2005-12-31&apos;)) div 86400)))
         or not((round(date:seconds(normalize-space(&apos;2006-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))
         or (math:abs((.) - ((round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2005-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1)) * 0.1) + ((../ct:NetProfits - round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2005-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1))) * 0.2))) &lt; 0.001)" id="a_SI010.3" diagnostics="errorCode.SI010.3 transactional.SI010.3 transactional.en.SI010.3 ">If [AP From Date] is on or before '2005-12-31' and [AP To Date] is on or after '2006-01-01' then calculate as follows: part1 = number of days between [AP From Date] and '2005-12-31' inclusive multiplied by [I7] and divided by number of days between [AP From Date] and [AP To Date] inclusive; part2 = [I7] minus part1; [I8] must equal part1 * 0.1 + part2 * 0.2. To round part1: If the pence figure is equal to or greater than 50p then round part1 up, otherwise round part1 down, to the nearest whole pound.</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(&apos;2011-03-24&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400))) 
            or
              not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2014-12-31&apos;)) div 86400)))
            or
              (math:abs((.) - (../ct:NetProfits * 0.32)) &lt; 0.001)" id="a_SI010.4" diagnostics="errorCode.SI010.4 transactional.SI010.4 transactional.en.SI010.4 ">If [AP From Date] is on or after '2011-03-24' and [AP To Date] is on or before '2014-12-31' then [I8] must equal [I7] * 0.32.</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2011-03-23&apos;)) div 86400)))
         or not((round(date:seconds(normalize-space(&apos;2011-03-24&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))
         or (math:abs((.) - ((round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2011-03-23&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1)) * 0.2) + ((../ct:NetProfits - round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2011-03-23&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1))) * 0.32))) &lt; 0.001)" id="a_SI010.5" diagnostics="errorCode.SI010.5 transactional.SI010.5 transactional.en.SI010.5 ">If [AP From Date] is on or before '2011-03-23' and [AP To Date] is on or after '2011-03-24' then calculate as follows: part1 = number of days between [AP From Date] and '2011-03-23' inclusive multiplied by [I7] and divided by number of days between [AP From Date] and [AP To Date] inclusive; part2 = [I7] minus part1; [I8] must equal part1 * 0.2 + part2 * 0.32. To round part1: If the pence figure is equal to or greater than 50p then round part1 up, otherwise round part1 down, to the nearest whole pound.</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space(&apos;2015-01-01&apos;)) div 86400))
            or
              (math:abs((.) - (../ct:NetProfits * 0.2)) &lt; 0.001)" id="a_SI010.6" diagnostics="errorCode.SI010.6 transactional.SI010.6 transactional.en.SI010.6 ">If [AP From Date] is on or after '2015-01-01' then [I8] must equal [I7] * 0.2</sch:assert>
        <sch:assert test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space(&apos;2014-12-31&apos;)) div 86400)))
         or not((round(date:seconds(normalize-space(&apos;2015-01-01&apos;)) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))
         or (math:abs((.) - ((round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2014-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1)) * 0.32) + ((../ct:NetProfits - round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2014-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1))) * 0.2))) &lt; 0.001)" id="a_SI010.7" diagnostics="errorCode.SI010.7 transactional.SI010.7 transactional.en.SI010.7 ">If [AP From Date] is on or before '2014-12-31' and [AP To Date] is on or after '2015-01-01' then calculate as follows: part1 = number of days between [AP From Date] and '2014-12-31' inclusive multiplied by [I7] and divided by number of days between [AP From Date] and [AP To Date] inclusive; part2 = [I7] minus part1; [I8] must equal part1 * 0.32 + part2 * 0.2. To round part1: If the pence figure is equal to or greater than 50p then round part1 up, otherwise round part1 down, to the nearest whole pound.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p243">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:RingFenceTrade/ct:RingFenceCorpTaxIncluded">
        <sch:assert test="../../ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded and ../../ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded = (.)" id="a_SI012.0" diagnostics="errorCode.SI012.0 transactional.SI012.0 transactional.en.SI012.0 ">If [I10] is submitted then [161] must be present and equal to [I10].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p244">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:RingFenceTrade/ct:TaxUnderS501AICTA1988">
        <sch:assert test="../../ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included and ../../ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included = (.)" id="a_SI013.0" diagnostics="errorCode.SI013.0 transactional.SI013.0 transactional.en.SI013.0 ">If [I11] is submitted then [166] must be present and equal to [I11].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p236">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:RingFenceTrade">
        <sch:assert test="not(ct:NetProfits &gt; 0) or ct:Tax" id="a_global.5" diagnostics="errorCode.global.5 transactional.global.5 transactional.en.global.5 ">Tax should be present if [I7] exceeds 0</sch:assert>
        <sch:assert test="not((ct:Trade/ct:Losses = &apos;yes&apos;) and ((((ct:Trade/ct:Amount - sum(ct:DisallowedFinancingCosts/ct:RelatedToCompany))) - (0) &gt;= 0.001))) or ct:LossesArising" id="a_CT600I.0" diagnostics="errorCode.CT600I.0 transactional.CT600I.0 transactional.en.CT600I.0 ">[I9] should be present if [B] equals 'yes' and ( [I1] minus [I2] ) exceeds 0</sch:assert>
        <sch:assert test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600I = &apos;yes&apos;" id="a_N103.0" diagnostics="errorCode.N103.0 transactional.N103.0 transactional.en.N103.0 transactional.cy.N103.0 ">If Ring fence trade is present the following should be true: [CT600I attached] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p246">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TaxAvoidanceSchemes/ct:AvoidanceSchemes/ct:AccountingPeriod">
        <sch:assert test="translate(.,&apos;-&apos;,&apos;&apos;) &gt;= translate(&apos;2004-03-18&apos;,&apos;-&apos;,&apos;&apos;)" id="a_SJ002.0" diagnostics="errorCode.SJ002.0 transactional.SJ002.0 transactional.en.SJ002.0 transactional.cy.SJ002.0 ">Accounting period is valid if and only if it is onOrAfter '2004-03-18'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p245">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:TaxAvoidanceSchemes">
        <sch:assert test="../ct:ReturnInfoSummary/ct:SupplementaryPages/ct:CT600J = &apos;yes&apos;" id="a_N104.0" diagnostics="errorCode.N104.0 transactional.N104.0 transactional.en.N104.0 transactional.cy.N104.0 ">If Tax avoidance schemes is present the following should be true: [CT600J attached] equals 'yes'</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p249">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:AttachedFiles/ct:XBRLsubmission/ct:Accounts/ct:Instance/ct:EncodedInlineXBRLDocument">
        <sch:assert test="count(./../ct:EncodedInlineXBRLDocument) &lt;= 1
                or
              @Filename" id="a_ENCODEDINLINEXBRLDOCUMENT.2" diagnostics="errorCode.ENCODEDINLINEXBRLDOCUMENT.2 transactional.ENCODEDINLINEXBRLDOCUMENT.2 transactional.en.ENCODEDINLINEXBRLDOCUMENT.2 transactional.cy.ENCODEDINLINEXBRLDOCUMENT.2 ">If multiple repetitions of [Base 64 encoded XBRL document] are submitted, each must have a Filename attribute.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p250">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:AttachedFiles/ct:XBRLsubmission/ct:Accounts/ct:Instance/ct:InlineXBRLDocument">
        <sch:assert test="count(./../ct:InlineXBRLDocument) &lt;= 1
                or
              @Filename" id="a_INLINEXBRLDOCUMENT.2" diagnostics="errorCode.INLINEXBRLDOCUMENT.2 transactional.INLINEXBRLDOCUMENT.2 transactional.en.INLINEXBRLDOCUMENT.2 transactional.cy.INLINEXBRLDOCUMENT.2 ">If multiple repetitions of [Inline XBRL document] are submitted, each must have a Filename attribute.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p248">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:AttachedFiles/ct:XBRLsubmission/ct:Accounts/ct:Instance">
        <sch:assert test="count(ct:EncodedInlineXBRLDocument) &lt; 2 or count(ct:EncodedInlineXBRLDocument[@entryPoint]) = 1" id="a_ENCODEDINLINEXBRLDOCUMENT.1" diagnostics="errorCode.ENCODEDINLINEXBRLDOCUMENT.1 transactional.ENCODEDINLINEXBRLDOCUMENT.1 transactional.en.ENCODEDINLINEXBRLDOCUMENT.1 ">If multiple repetitions of EncodedInlineXBRLDocument are submitted, exactly one should have an EntryPoint attribute.</sch:assert>
        <sch:assert test="count(ct:InlineXBRLDocument) &lt; 2 or count(ct:InlineXBRLDocument[@entryPoint]) = 1" id="a_INLINEXBRLDOCUMENT.1" diagnostics="errorCode.INLINEXBRLDOCUMENT.1 transactional.INLINEXBRLDOCUMENT.1 transactional.en.INLINEXBRLDOCUMENT.1 ">If multiple repetitions of InlineXBRLDocument are submitted, exactly one should have an EntryPoint attribute.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p251">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:AttachedFiles/ct:XBRLsubmission/ct:Accounts/ct:Extension">
        <sch:assert test="not(../ct:Instance/ct:RawXBRLDocument)" id="a_EXTENSION.0" diagnostics="errorCode.EXTENSION.0 transactional.EXTENSION.0 transactional.en.EXTENSION.0 ">[Extension taxonomy] should not be present if [Raw XBRL document content]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p253">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:AttachedFiles/ct:XBRLsubmission/ct:Computation/ct:Instance/ct:EncodedInlineXBRLDocument">
        <sch:assert test="count(./../ct:EncodedInlineXBRLDocument) &lt;= 1
                or
              @Filename" id="a_ENCODEDINLINEXBRLDOCUMENT.2.0" diagnostics="errorCode.ENCODEDINLINEXBRLDOCUMENT.2.0 transactional.ENCODEDINLINEXBRLDOCUMENT.2.0 transactional.en.ENCODEDINLINEXBRLDOCUMENT.2.0 transactional.cy.ENCODEDINLINEXBRLDOCUMENT.2.0 ">If multiple repetitions of [Base 64 encoded XBRL document] are submitted, each must have a Filename attribute.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p254">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:AttachedFiles/ct:XBRLsubmission/ct:Computation/ct:Instance/ct:InlineXBRLDocument">
        <sch:assert test="count(./../ct:InlineXBRLDocument) &lt;= 1
                or
              @Filename" id="a_INLINEXBRLDOCUMENT.2.0" diagnostics="errorCode.INLINEXBRLDOCUMENT.2.0 transactional.INLINEXBRLDOCUMENT.2.0 transactional.en.INLINEXBRLDOCUMENT.2.0 transactional.cy.INLINEXBRLDOCUMENT.2.0 ">If multiple repetitions of [Inline XBRL document] are submitted, each must have a Filename attribute.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p252">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:AttachedFiles/ct:XBRLsubmission/ct:Computation/ct:Instance">
        <sch:assert test="count(ct:EncodedInlineXBRLDocument) &lt; 2 or count(ct:EncodedInlineXBRLDocument[@entryPoint]) = 1" id="a_ENCODEDINLINEXBRLDOCUMENT.1.0" diagnostics="errorCode.ENCODEDINLINEXBRLDOCUMENT.1.0 transactional.ENCODEDINLINEXBRLDOCUMENT.1.0 transactional.en.ENCODEDINLINEXBRLDOCUMENT.1.0 ">If multiple repetitions of EncodedInlineXBRLDocument are submitted, exactly one should have an EntryPoint attribute.</sch:assert>
        <sch:assert test="count(ct:InlineXBRLDocument) &lt; 2 or count(ct:InlineXBRLDocument[@entryPoint]) = 1" id="a_INLINEXBRLDOCUMENT.1.0" diagnostics="errorCode.INLINEXBRLDOCUMENT.1.0 transactional.INLINEXBRLDOCUMENT.1.0 transactional.en.INLINEXBRLDOCUMENT.1.0 ">If multiple repetitions of InlineXBRLDocument are submitted, exactly one should have an EntryPoint attribute.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p255">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:AttachedFiles/ct:XBRLsubmission/ct:Computation/ct:Extension">
        <sch:assert test="not(../ct:Instance/ct:RawXBRLDocument)" id="a_EXTENSION.0.0" diagnostics="errorCode.EXTENSION.0.0 transactional.EXTENSION.0.0 transactional.en.EXTENSION.0.0 ">[Extension taxonomy] should not be present if [Raw XBRL document content]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p247">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:AttachedFiles/ct:XBRLsubmission">
        <sch:assert test="../../ct:ReturnInfoSummary/ct:Accounts/ct:NoAccountsReason
                or
                  translate(../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &lt; &apos;20100401&apos;
                or
                  translate(string(/hd:GovTalkMessage/hd:Header/hd:MessageDetails/hd:GatewayTimestamp),&apos;-:T&apos;,&apos;&apos;) &lt; &apos;20110401000000&apos;
                or
                  ct:Accounts" id="a_N107.1" diagnostics="errorCode.N107.1 transactional.N107.1 transactional.en.N107.1 transactional.cy.N107.1 ">If [AP To Date] is on or after '2010-04-01' and date of submission (based on GatewayTimestamp) is on or after '2011-04-01T00:00' and [No accounts reason] is absent then the Accounts child element must be present.</sch:assert>
        <sch:assert test="../../ct:ReturnInfoSummary/ct:Computations/ct:NoComputationsReason
                or
                  translate(../../ct:CompanyInformation/ct:PeriodCovered/ct:To,&apos;-&apos;,&apos;&apos;) &lt; &apos;20100401&apos;
                or
                  translate(string(/hd:GovTalkMessage/hd:Header/hd:MessageDetails/hd:GatewayTimestamp),&apos;-:T&apos;,&apos;&apos;) &lt; &apos;20110401000000&apos;
                or
                  ct:Computation" id="a_N107.2" diagnostics="errorCode.N107.2 transactional.N107.2 transactional.en.N107.2 transactional.cy.N107.2 ">If [AP To Date] is on or after '2010-04-01' and date of submission (based on GatewayTimestamp) is on or after '2011-04-01T00:00' and [No computations reason] is absent then the Computation child element must be present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p3">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn">
        <sch:assert test="not(
              not(@Short) 
            and 
              ((((sum(ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:CVSLossRelief) + 
                 sum(ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:ManagementExpenses) + 
                 sum(ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:InterestDistributions) + 
                 sum(ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:ScheduleALosses) + 
                 sum(ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:CapitalAllowances) + 
                 sum(ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:NonTradeDeficits) + 
                 sum(ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:NonTradingLossIntangibles) + 
                 sum(ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:TradingLosses) + 
                 sum(ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:NonTradeCapitalAllowances))) - (0) &gt;= 0.001)
              )
            ) 
          or
            ct:CompanyTaxCalculation/ct:DeductionsAndReliefs/ct:Total" id="a_N002.7" diagnostics="errorCode.N002.7 transactional.N002.7 transactional.en.N002.7 transactional.cy.N002.7 ">[33] should be present if not ( [N111] ) and ( ( The sum of [22], [24], [25], [26], [27], [28], [29], [30], and [32] ) exceeds 0 )</sch:assert>
        <sch:assert test="not(not(@Short) and (ct:CompanyTaxCalculation/ct:NetCorporationTaxChargeable &gt; 0)) or ct:CompanyTaxCalculation/ct:NetCorporationTaxLiability" id="a_N002.2" diagnostics="errorCode.N002.2 transactional.N002.2 transactional.en.N002.2 transactional.cy.N002.2 ">[78] should be present if not ( [N111] ) and ( [70] exceeds 0 )</sch:assert>
        <sch:assert test="not(not(@Short) and (sum(ct:CompanyTaxCalculation/ct:ProfitsBeforeOtherDeductions) &gt; 0)) or ct:CompanyTaxCalculation/ct:ChargesAndReliefs/ct:ProfitsBeforeCharges" id="a_N002.8" diagnostics="errorCode.N002.8 transactional.N002.8 transactional.en.N002.8 transactional.cy.N002.8 ">[34] should be present if not ( [N111] ) and ( [21] exceeds 0 )</sch:assert>
      </sch:rule>
    </sch:pattern>
  <sch:diagnostics>
    <sch:diagnostic id="errorCode.CTIRheader.0">5004</sch:diagnostic>
    <sch:diagnostic id="transactional.CTIRheader.0">At least one key must exist in the IRHeader</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CTIRheader.0">At least one key must exist in the IRHeader</sch:diagnostic>
    <sch:diagnostic id="errorCode.CTIRheader.1">5005</sch:diagnostic>
    <sch:diagnostic id="transactional.CTIRheader.1">Keys in the GovTalkDetails do not match those in the IRheader.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CTIRheader.1">Keys in the GovTalkDetails do not match those in the IRheader.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N002.7">9318</sch:diagnostic>
    <sch:diagnostic id="transactional.N002.7">Box 33 must be completed if the "Short" return flag does not equal 'yes' and the sum of Boxes 22, 24, 25, 26, 27, 28, 29, 30 and 32 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N002.7">Box 33 must be completed if the "Short" return flag does not equal 'yes' and the sum of Boxes 22, 24, 25, 26, 27, 28, 29, 30 and 32 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N002.7">Mae’n rhaid cwblhau Blwch 33 os nad yw’r faner ffurflen dreth “Fer” yn hafal a ‘ie’ ac mae swm Blychau 22, 24, 25, 26, 27, 28, 29, 30 a 32 yn fwy na 0 (sero)</sch:diagnostic>
    <sch:diagnostic id="errorCode.N002.2">9319</sch:diagnostic>
    <sch:diagnostic id="transactional.N002.2">Box 78 must be completed if the "Short" return flag does not equal 'yes' and Box 70 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N002.2">Box 78 must be completed if the "Short" return flag does not equal 'yes' and Box 70 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N002.2">Mae’n rhaid cwblhau Blwch 78 os nad yw’r faner ffurflen dreth “Fer” yn hafal a ‘ie’ ac mae Blwch 70 yn fwy na 0 (sero). </sch:diagnostic>
    <sch:diagnostic id="errorCode.N002.8">9320</sch:diagnostic>
    <sch:diagnostic id="transactional.N002.8">Box 34 must be completed if the "Short" return flag does not equal 'yes' and Box 21 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N002.8">Box 34 must be completed if the "Short" return flag does not equal 'yes' and Box 21 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N002.8">Mae’n rhaid cwblhau Blwch 34 os nad yw’r faner ffurflen dreth “Fer” yn hafal a ‘ie’ ac mae Blwch 21 yn fwy na 0 (sero). </sch:diagnostic>
    <sch:diagnostic id="errorCode.N007.0">9100</sch:diagnostic>
    <sch:diagnostic id="transactional.N007.0">There must be a Key element in the Irheader whose Type attribute is UTR and matches the 'Tax Reference'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N007.0">There must be a Key element in the Irheader whose Type attribute is UTR and matches the 'Tax Reference'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N007.0">Mae’n rhaid bod yna elfen Allweddol yn yr Irheader a’i briodoledd Teip yn UTR ac cyd-fynd a’r ‘Cyfeirnod Treth’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N010.1">9101</sch:diagnostic>
    <sch:diagnostic id="transactional.N010.1">The period covered must not be longer than 12 months.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N010.1">The period covered must not be longer than 12 months.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N010.1">Ni ddylai’r cyfnod a gwmpesir fod yn hirach na 12 mis.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N012.1">9102</sch:diagnostic>
    <sch:diagnostic id="transactional.N012.1">The period 'From' date must be on or after 02/07/1998.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N012.1">The period 'From' date must be on or after 02/07/1998.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N012.1">Mae’n rhaid i ddyddiad ‘O’ y cyfnod fod ar neu ar ol 02/07/1998.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N012.2">9103</sch:diagnostic>
    <sch:diagnostic id="transactional.N012.2">The period 'From' date cannot be later than yesterday.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N012.2">The period 'From' date cannot be later than yesterday.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N012.2">Ni all dyddiad y ‘O’ cyfnod fod yn hwyrach na ddoe.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N012.0">9978</sch:diagnostic>
    <sch:diagnostic id="transactional.N012.0">The period 'From' date must be on or before 31/03/2015.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N012.0">The period 'From' date must be on or before 31/03/2015.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N012.0">Mae’n rhaid i’r dyddiad 'O' fod ar neu cyn 31/03/2015.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N013.0">9104</sch:diagnostic>
    <sch:diagnostic id="transactional.N013.0">The period 'To' date must be on or after 01/07/1999.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N013.0">The period 'To' date must be on or after 01/07/1999.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N013.0">Mae’n rhaid i’r dyddiad ‘I’ fod ar neu ar ol 01/07/1999.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N013.1">9105</sch:diagnostic>
    <sch:diagnostic id="transactional.N013.1">The period 'To' date must be on or after the period 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N013.1">The period 'To' date must be on or after the period 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N013.1">Mae’n rhaid i ddyddiad ‘I’ y cyfnod fod ar neu ar ol dyddiad ‘O’ y cyfnod.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N013.2">9106</sch:diagnostic>
    <sch:diagnostic id="transactional.N013.2">The period 'To' date cannot be later than today unless the type of company is 3 (Company in Liquidation (second or subsequent year of liquidation)).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N013.2">The period 'To' date cannot be later than today unless the type of company is 3 (Company in Liquidation (second or subsequent year of liquidation)).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N013.2">Ni all dyddiad ‘I’ y cyfnod fod yn hwyrach na heddiw heblaw bod y math o gwmni yn 3 (Cwmni mewn Datodiad (ail flwyddyn neu flwyddyn ddilynol y datodiad)).</sch:diagnostic>
    <sch:diagnostic id="errorCode.N020.0">9107</sch:diagnostic>
    <sch:diagnostic id="transactional.N020.0">Your entry for 'Company is part of a group that is not small' can only be 'Yes' if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N020.0">Your entry for 'Company is part of a group that is not small' can only be 'Yes' if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N020.0">Gall eich cofnod ar gyfer ‘Cwmni’n rhan o grwp nad yw’n fach’ ond bod yn ‘Ie’ os yw dyddiad ‘I’ y cyfnod ar neu ar ol 01/04/2008.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N021.0">9108</sch:diagnostic>
    <sch:diagnostic id="transactional.N021.0">Your entry for 'Notice of disclosable avoidance schemes' can only be 'Yes' if the period 'To' date is on or after 01/04/2004.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N021.0">Your entry for 'Notice of disclosable avoidance schemes' can only be 'Yes' if the period 'To' date is on or after 01/04/2004.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N021.0">Gall eich cofnod ar gyfer ‘Hysbysiad o gynlluniau arbed sy’n rhaid eu datgelu’ ond bod yn ‘Ie’ os yw dyddiad ‘I’ y cyfnod ar neu ar ol 01/04/2004.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N021.1">9109</sch:diagnostic>
    <sch:diagnostic id="transactional.N021.1">Your entry for 'Notice of disclosable avoidance schemes' is 'Yes' so you must also select 'Yes' for 'CT600J (Disclosure of tax avoidance scheme)'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N021.1">Your entry for 'Notice of disclosable avoidance schemes' is 'Yes' so you must also select 'Yes' for 'CT600J (Disclosure of tax avoidance scheme)'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N021.1">‘Ie’ yw eich ateb ar gyfer ‘Hysbysiad o gynlluniau arbed sy’n rhaid eu datgelu’ felly dylech hefyd ddewis ‘Ie’ ar gyfer ‘CT600J (Datgelu cynllun arbed treth)’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N022.1">9110</sch:diagnostic>
    <sch:diagnostic id="transactional.N022.1">You cannot select 'Yes' for both 'Compensating adjustment claimed' and 'Company qualifies for SME exemption'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N022.1">You cannot select 'Yes' for both 'Compensating adjustment claimed' and 'Company qualifies for SME exemption'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N022.1">Ni allwch ddewis ‘Ie’ ar gyfer ‘Addasiad cyfadfer a hawliwyd’ yn ogystal a ‘Cwmni’n gymwys ar gyfer eithriad SME’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N022.0">9111</sch:diagnostic>
    <sch:diagnostic id="transactional.N022.0">Your entry for 'Compensating adjustment claimed' or 'Company qualifies for SME exemption' can only be 'Yes' if the period 'To' date is on or after 01/04/2004.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N022.0">Your entry for 'Compensating adjustment claimed' or 'Company qualifies for SME exemption' can only be 'Yes' if the period 'To' date is on or after 01/04/2004.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N022.0">Gall eich cofnod ar gyfer ‘Addasiad cyfadfer a hawliwyd’ neu ‘Cwmni’n gymwys ar gyfer eithriad SME’ ond bod yn ‘Ie’ os yw dyddiad ‘I’ y cyfnod ar neu ar ol 01/04/2004.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N028.2">9112</sch:diagnostic>
    <sch:diagnostic id="transactional.N028.2">You can only provide a set of PDF accounts if you also complete the ‘No accounts reason’ with the value of ‘PDF accounts attached with Explanation’ </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N028.2">You can only provide a set of PDF accounts if you also complete the ‘No accounts reason’ with the value of ‘PDF accounts attached with Explanation’ </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N028.2">Gallwch dim ond rhoi set o gyfrifon PDF os ydych hefyd yn llenwi'r 'Rheswm dim cyfrifon' gyda'r gwerth 'Cyfrifon PDF sydd wedi eu hatodi ynghyd ag Esboniad'</sch:diagnostic>
    <sch:diagnostic id="errorCode.N025.0">9113</sch:diagnostic>
    <sch:diagnostic id="transactional.N025.0">You must provide a set of iXBRL accounts if the ‘No accounts reason’ is absent</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N025.0">You must provide a set of iXBRL accounts if the ‘No accounts reason’ is absent</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N025.0">Mae'n rhaid i chi gyflwyno set o gyfrifon iXBRL os yw'r 'Rheswm dim cyfrifon' yn absennol</sch:diagnostic>
    <sch:diagnostic id="errorCode.N025.1">9114</sch:diagnostic>
    <sch:diagnostic id="transactional.N025.1">If ‘No accounts reason’ is absent or has been completed with ‘PDF accounts attached with Explanation’ you must complete either ‘This period accounts’ or ‘Different period account’.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N025.1">If ‘No accounts reason’ is absent or has been completed with ‘PDF accounts attached with Explanation’ you must complete either ‘This period accounts’ or ‘Different period account’.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N025.1">Os yw'r 'Rheswm dim cyfrifon' yn absennol neu wedi ei lenwi gyda 'Cyfrifon PDF sydd wedi eu hatodi ynghyd ag Esboniad', rhaid i chi lenwi naill ai 'Cyfrifon y cyfnod hwn' neu 'Cyfrifon cyfnod gwahanol'</sch:diagnostic>
    <sch:diagnostic id="errorCode.N025.2">9116</sch:diagnostic>
    <sch:diagnostic id="transactional.N025.2">If ‘No accounts reason’ is present and has not been completed with ‘PDF accounts attached with Explanation’ you must not complete either ‘This period accounts’ or ‘Different period account’.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N025.2">If ‘No accounts reason’ is present and has not been completed with ‘PDF accounts attached with Explanation’ you must not complete either ‘This period accounts’ or ‘Different period account’.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N025.2">Os yw 'Rheswm dim cyfrifon' yn bresennol ac nid yw wedi ei lenwi gyda 'Cyfrifon PDF sydd wedi eu hatodi ynghyd ag Esboniad', ni ddylech lenwi naill ai 'Cyfrifon y cyfnod hwn' neu 'Cyfrifon cyfnod gwahanol'</sch:diagnostic>
    <sch:diagnostic id="errorCode.N028.3">9349</sch:diagnostic>
    <sch:diagnostic id="transactional.N028.3"> iXBRL Accounts are attached so ‘No accounts reason’ must not be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N028.3"> iXBRL Accounts are attached so ‘No accounts reason’ must not be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N028.3">Mae cyfrifon wedi eu hatodi felly ni ddylid rhoi rheswm ar gyfer dim cyfrifon.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N028.4">9115</sch:diagnostic>
    <sch:diagnostic id="transactional.N028.4">'Amendment - accounts already submitted' is not a valid reason for a 'New' return.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N028.4">'Amendment - accounts already submitted' is not a valid reason for a 'New' return.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N028.4">Nid yw ‘Addasiad – cyfrifon eisoes wedi eu cyflwyno’ yn rheswm dilys dros ffurflen dreth ‘Newydd’. </sch:diagnostic>
    <sch:diagnostic id="errorCode.N028.5">9971</sch:diagnostic>
    <sch:diagnostic id="transactional.N028.5"> If ‘No accounts reason’ is completed with "PDF accounts attached with explanation", you must provide a set of PDF Accounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N028.5"> If ‘No accounts reason’ is completed with "PDF accounts attached with explanation", you must provide a set of PDF Accounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N028.5">Os yw'r 'Rheswm dim cyfrifon' wedi ei lenwi gyda 'Cyfrifon PDF sydd wedi eu hatodi ynghyd ag esboniad', mae'n rhaid i chi gyflwyno set o Gyfrifon PDF</sch:diagnostic>
    <sch:diagnostic id="errorCode.N028a.0">9965</sch:diagnostic>
    <sch:diagnostic id="transactional.N028a.0">You must provide a Tax Computation with the Return if there is no valid reason not to supply it</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N028a.0">You must provide a Tax Computation with the Return if there is no valid reason not to supply it</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N028a.0">Mae'n rhaid i chi gyflwyno Cyfrifiant Treth gyda'r Ffurflen Dreth os nad oes rheswm dilys dros beidio â'i chyflwyno</sch:diagnostic>
    <sch:diagnostic id="errorCode.N028a.1">9966</sch:diagnostic>
    <sch:diagnostic id="transactional.N028a.1">You cannot provide both an Inline XBRL and PDF Tax Computation with the return</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N028a.1">You cannot provide both an Inline XBRL and PDF Tax Computation with the return</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N028a.1">Ni allwch gyflwyno Inline XBRL a Chyfrifiant Treth PDF gyda'r ffurflen dreth</sch:diagnostic>
    <sch:diagnostic id="errorCode.N028d.4">9117</sch:diagnostic>
    <sch:diagnostic id="transactional.N028d.4">Computations are attached so a reason for no Computations must not be provided.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N028d.4">Computations are attached so a reason for no Computations must not be provided.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N028d.4">Mae cyfrifiannau wedi eu hatodi felly ni ddylid rhoi rheswm ar gyfer dim cyfrifiannau.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N028d.5">9118</sch:diagnostic>
    <sch:diagnostic id="transactional.N028d.5">Computations are attached so a reason for no Computations must not be provided.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N028d.5">Computations are attached so a reason for no Computations must not be provided.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N028d.5">Mae cyfrifiannau wedi eu hatodi felly ni ddylid rhoi rheswm ar gyfer dim cyfrifiannau.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N028d.6">9119</sch:diagnostic>
    <sch:diagnostic id="transactional.N028d.6">'Amendments - computations already submitted' is not a valid reason for a 'New' return.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N028d.6">'Amendments - computations already submitted' is not a valid reason for a 'New' return.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N028d.6">Nid yw ‘Addasiad – cyfrifiannau eisoes wedi eu cyflwyno’ yn rheswm dilys dros ffurflen dreth ‘Newydd’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N030.0">9120</sch:diagnostic>
    <sch:diagnostic id="transactional.N030.0">The form CT600A must be present if 'CT600A (Loans to Participators by Close Companies)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N030.0">The form CT600A must be present if 'CT600A (Loans to Participators by Close Companies)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N030.0">Mae’n rhaid i’r ffurflen CT600A fod yn bresennol os yw ‘CT600A (Benthyciadau i Gyfranogwyr gan Gwmniau Cau) yn ‘Ie’ a’r math o ffurflen dreth yn ‘Newydd’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N031.0">9121</sch:diagnostic>
    <sch:diagnostic id="transactional.N031.0">The form CT600B must be present if 'CT600B (Controlled Foreign Companies)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N031.0">The form CT600B must be present if 'CT600B (Controlled Foreign Companies)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N031.0">The form CT600B must be present if 'CT600B (Controlled Foreign Companies)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N032.0">9123</sch:diagnostic>
    <sch:diagnostic id="transactional.N032.0">The form CT600C must be present if 'CT600C (Group and Consortium)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N032.0">The form CT600C must be present if 'CT600C (Group and Consortium)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N032.0">The form CT600C must be present if 'CT600C (Group and Consortium)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N033.0">9124</sch:diagnostic>
    <sch:diagnostic id="transactional.N033.0">The form CT600D must be present if 'CT600D (Insurance)' is 'Yes' and the return type is 'New'. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N033.0">The form CT600D must be present if 'CT600D (Insurance)' is 'Yes' and the return type is 'New'. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N033.0">The form CT600D must be present if 'CT600D (Insurance)' is 'Yes' and the return type is 'New'. </sch:diagnostic>
    <sch:diagnostic id="errorCode.N034.0">9125</sch:diagnostic>
    <sch:diagnostic id="transactional.N034.0">The form CT600E must be present if 'CT600E (Charities and Community Amateur Sports Clubs)' is 'Yes' and the return type is 'New'. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N034.0">The form CT600E must be present if 'CT600E (Charities and Community Amateur Sports Clubs)' is 'Yes' and the return type is 'New'. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N034.0">Mae’n rhaid i’r ffurflen CT600E fod yn bresennol os yw ‘CT600E (Elusennau a Chlybiau Chwaraeon Amatur Cymunedol)’ yn ‘Ie’ a’r math o ffurflen dreth yn ‘Newydd’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N035.0">9126</sch:diagnostic>
    <sch:diagnostic id="transactional.N035.0">The form CT600F must be present if 'CT600F (Tonnage tax)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N035.0">The form CT600F must be present if 'CT600F (Tonnage tax)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N035.0">The form CT600F must be present if 'CT600F (Tonnage tax)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N002.13">9127</sch:diagnostic>
    <sch:diagnostic id="transactional.N002.13">If 'CT600F (Tonnage tax)' is 'Yes' then Box 13 must be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N002.13">If 'CT600F (Tonnage tax)' is 'Yes' then Box 13 must be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N002.13">If 'CT600F (Tonnage tax)' is 'Yes' then Box 13 must be completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N036.0">9128</sch:diagnostic>
    <sch:diagnostic id="transactional.N036.0">The form CT600G must be present if 'CT600G (Corporate Venturing Scheme)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N036.0">The form CT600G must be present if 'CT600G (Corporate Venturing Scheme)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N036.0">The form CT600G must be present if 'CT600G (Corporate Venturing Scheme)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N037.0">9129</sch:diagnostic>
    <sch:diagnostic id="transactional.N037.0">The form CT600H must be present if 'CT600H (Cross-border royalties)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N037.0">The form CT600H must be present if 'CT600H (Cross-border royalties)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N037.0">The form CT600H must be present if 'CT600H (Cross-border royalties)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N037.1">9130</sch:diagnostic>
    <sch:diagnostic id="transactional.N037.1">If 'CT600H (Cross-border royalties)' is 'Yes' then Box 98 must also be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N037.1">If 'CT600H (Cross-border royalties)' is 'Yes' then Box 98 must also be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N037.1">If 'CT600H (Cross-border royalties)' is 'Yes' then Box 98 must also be 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N037.2">9131</sch:diagnostic>
    <sch:diagnostic id="transactional.N037.2">If 'CT600H (Cross-border royalties)' is 'Yes' then the period 'To' date must be on or after 01/10/2002.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N037.2">If 'CT600H (Cross-border royalties)' is 'Yes' then the period 'To' date must be on or after 01/10/2002.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N037.2">If 'CT600H (Cross-border royalties)' is 'Yes' then the period 'To' date must be on or after 01/10/2002.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N038.1">9132</sch:diagnostic>
    <sch:diagnostic id="transactional.N038.1">The form CT600I must be present if 'CT600I (Supplementary charge in respect of ring fence trade)' is 'Yes' and the return type is 'New'. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N038.1">The form CT600I must be present if 'CT600I (Supplementary charge in respect of ring fence trade)' is 'Yes' and the return type is 'New'. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N038.1">The form CT600I must be present if 'CT600I (Supplementary charge in respect of ring fence trade)' is 'Yes' and the return type is 'New'. </sch:diagnostic>
    <sch:diagnostic id="errorCode.N038.0">9133</sch:diagnostic>
    <sch:diagnostic id="transactional.N038.0">If 'CT600I (Supplementary charge in respect of ring fence trade)' is 'Yes' then the period 'From' date must be on or after 17/04/2002.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N038.0">If 'CT600I (Supplementary charge in respect of ring fence trade)' is 'Yes' then the period 'From' date must be on or after 17/04/2002.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N038.0">If 'CT600I (Supplementary charge in respect of ring fence trade)' is 'Yes' then the period 'From' date must be on or after 17/04/2002.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N039.1">9134</sch:diagnostic>
    <sch:diagnostic id="transactional.N039.1">If 'CT600J (Disclosure of tax avoidance schemes)' is 'Yes' then 'Notice of disclosable avoidance schemes' must also be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N039.1">If 'CT600J (Disclosure of tax avoidance schemes)' is 'Yes' then 'Notice of disclosable avoidance schemes' must also be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N039.1">Os yw ‘CT600J (Datgelu cynlluniau arbed treth)’ yn ‘Ie’, rhaid i ‘Hysbysiad o gynlluniau arbed sy’n rhaid eu datgelu’ hefyd fod yn ‘Ie’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N039.0">9135</sch:diagnostic>
    <sch:diagnostic id="transactional.N039.0">If 'CT600J (Disclosure of tax avoidance schemes)' is 'Yes' then the period 'To' date must be on or after 18/03/2004.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N039.0">If 'CT600J (Disclosure of tax avoidance schemes)' is 'Yes' then the period 'To' date must be on or after 18/03/2004.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N039.0">Os yw ‘CT600J (Datgelu cynlluniau arbed treth)’ yn ‘Ie’, rhaid i ddyddiad ‘I’ y cyfnod fod ar neu ar ol 18/03/2004.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N039.2">9136</sch:diagnostic>
    <sch:diagnostic id="transactional.N039.2">The form CT600J must be present if 'CT600J (Disclosure of tax avoidance schemes)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N039.2">The form CT600J must be present if 'CT600J (Disclosure of tax avoidance schemes)' is 'Yes' and the return type is 'New'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N039.2">Mae’n rhaid i’r ffurflen CT600J fod yn bresennol os yw ‘CT600J (Datgelu cynlluniau arbed treth) yn ‘Ie’ a’r math o ffurflen dreth yn ‘Newydd’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F220.1">9137</sch:diagnostic>
    <sch:diagnostic id="transactional.F220.1">If Box 67 is not completed then Box 70 must equal Box 63 minus Box 64.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F220.1">If Box 67 is not completed then Box 70 must equal Box 63 minus Box 64.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F220.1">Os nad yw Blwch 67 wedi ei gwblhau, rhaid i Flwch 70 fod yn hafal a Blwch 63 llai Blwch 64.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F220.2">9138</sch:diagnostic>
    <sch:diagnostic id="transactional.F220.2">If Box 67 is completed then Box 70 must equal the greater of (Box 68 plus Box 69) or (Box 63 minus Box 64).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F220.2">If Box 67 is completed then Box 70 must equal the greater of (Box 68 plus Box 69) or (Box 63 minus Box 64).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F220.2">Os nad yw Blwch 67 wedi ei gwblhau, rhaid i Flwch 70 fod y mwyaf o (Blwch 68 plws Blwch 69) neu (Blwch 63 llai Blwch 64).</sch:diagnostic>
    <sch:diagnostic id="errorCode.N041.1">9140</sch:diagnostic>
    <sch:diagnostic id="transactional.N041.1">If there is an entry in only one of Box C3 or Box F8 then Box 73 must be greater than or equal to that entry.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N041.1">If there is an entry in only one of Box C3 or Box F8 then Box 73 must be greater than or equal to that entry.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N041.1">If there is an entry in only one of Box C3 or Box F8 then Box 73 must be greater than or equal to that entry.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N041.2">9141</sch:diagnostic>
    <sch:diagnostic id="transactional.N041.2">If there are entries in both Box C3 and Box F8 then Box 73 must be greater than or equal to the sum of those entries.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N041.2">If there are entries in both Box C3 and Box F8 then Box 73 must be greater than or equal to the sum of those entries.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N041.2">If there are entries in both Box C3 and Box F8 then Box 73 must be greater than or equal to the sum of those entries.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N002.10">9144</sch:diagnostic>
    <sch:diagnostic id="transactional.N002.10">Box 43 must be completed if Box 37 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N002.10">Box 43 must be completed if Box 37 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N002.10">Mae’n rhaid cwblhau Blwch 43 os yw Blwch 37 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.N002.11">9146</sch:diagnostic>
    <sch:diagnostic id="transactional.N002.11">Box 63 must be completed if Box 46 or Box 56 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N002.11">Box 63 must be completed if Box 46 or Box 56 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N002.11">Mae’n rhaid cwblhau Blwch 63 os yw Blwch 46 neu Flwch 56 wedi eu cwblhau.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N043.0">9148</sch:diagnostic>
    <sch:diagnostic id="transactional.N043.0">Box 5 must be completed if Box 3 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N043.0">Box 5 must be completed if Box 3 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N043.0">Mae’n rhaid cwblhau Blwch 5 os yw Blwch 3 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F002.1">9149</sch:diagnostic>
    <sch:diagnostic id="transactional.F002.1">Box 4 must not be greater than Box 3.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F002.1">Box 4 must not be greater than Box 3.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F002.1">Ni ddylai Blwch 4 fod yn fwy na Blwch 3.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F002.0">9150</sch:diagnostic>
    <sch:diagnostic id="transactional.F002.0">Box 4 can only be completed if Box 3 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F002.0">Box 4 can only be completed if Box 3 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F002.0">Gellir ond cwblhau Blwch 4 os yw Blwch 3 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F003.1">9151</sch:diagnostic>
    <sch:diagnostic id="transactional.F003.1">Box 5 must equal Box 3 minus Box 4.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F003.1">Box 5 must equal Box 3 minus Box 4.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F003.1">Mae’n rhaid i Flwch 5 fod yn hafal a Blwch 3 llai Blwch 4.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F014.2">9321</sch:diagnostic>
    <sch:diagnostic id="transactional.F014.2">Box 21 must be completed if Box 5 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F014.2">Box 21 must be completed if Box 5 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F014.2">Mae’n rhaid cwblhau Blwch 21 os yw Blwch 5 yn fwy na 0 (sero). </sch:diagnostic>
    <sch:diagnostic id="errorCode.F014.3">9322</sch:diagnostic>
    <sch:diagnostic id="transactional.F014.3">Box 21 must be completed if Box 6 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F014.3">Box 21 must be completed if Box 6 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F014.3">Mae’n rhaid cwblhau Blwch 21 os yw Blwch 6 yn fwy na 0 (sero). </sch:diagnostic>
    <sch:diagnostic id="errorCode.F949.1">9152</sch:diagnostic>
    <sch:diagnostic id="transactional.F949.1">If Box 7 is completed then Box 6 must not be less than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F949.1">If Box 7 is completed then Box 6 must not be less than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F949.1">If Box 7 is completed then Box 6 must not be less than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F014.4">9323</sch:diagnostic>
    <sch:diagnostic id="transactional.F014.4">Box 21 must be completed if Box 8 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F014.4">Box 21 must be completed if Box 8 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F014.4">Mae’n rhaid cwblhau Blwch 21 os yw Blwch 8 yn fwy na 0 (sero). </sch:diagnostic>
    <sch:diagnostic id="errorCode.F014.5">9324</sch:diagnostic>
    <sch:diagnostic id="transactional.F014.5">Box 21 must be completed if Box 9 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F014.5">Box 21 must be completed if Box 9 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F014.5">Mae’n rhaid cwblhau Blwch 21 os yw Blwch 9 yn fwy na 0 (sero). </sch:diagnostic>
    <sch:diagnostic id="errorCode.F014.6">9325</sch:diagnostic>
    <sch:diagnostic id="transactional.F014.6">Box 21 must be completed if Box 10 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F014.6">Box 21 must be completed if Box 10 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F014.6">Mae’n rhaid cwblhau Blwch 21 os yw Blwch 10 yn fwy na 0 (sero). </sch:diagnostic>
    <sch:diagnostic id="errorCode.F014.7">9326</sch:diagnostic>
    <sch:diagnostic id="transactional.F014.7">Box 21 must be completed if Box 11 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F014.7">Box 21 must be completed if Box 11 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F014.7">Mae’n rhaid cwblhau Blwch 21 os yw Blwch 11 yn fwy na 0 (sero). </sch:diagnostic>
    <sch:diagnostic id="errorCode.F014.8">9327</sch:diagnostic>
    <sch:diagnostic id="transactional.F014.8">Box 21 must be completed if (the sum of Boxes 12,13 and 14) is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F014.8">Box 21 must be completed if (the sum of Boxes 12,13 and 14) is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F014.8">Mae’n rhaid cwblhau Blwch 21 os yw (swm Blychau 12, 13 a 14) yn fwy na 0 (sero). </sch:diagnostic>
    <sch:diagnostic id="errorCode.F007.2">9328</sch:diagnostic>
    <sch:diagnostic id="transactional.F007.2">Box 15 must be completed if the "Short" return flag does not equal 'yes' and Box 12 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F007.2">Box 15 must be completed if the "Short" return flag does not equal 'yes' and Box 12 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F007.2">Mae’n rhaid cwblhau Blwch 15 os nad yw’r faner ffurflen dreth “Fer” yn hafal a ‘ie’ ac mae Blwch 12 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F175.0">9154</sch:diagnostic>
    <sch:diagnostic id="transactional.F175.0">Box 13 can only be completed if 'CT600F (Tonnage tax)' is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F175.0">Box 13 can only be completed if 'CT600F (Tonnage tax)' is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F175.0">Box 13 can only be completed if 'CT600F (Tonnage tax)' is 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F175.1">9155</sch:diagnostic>
    <sch:diagnostic id="transactional.F175.1">If there is an entry in Box F10 Box 13 must equal Box F10.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F175.1">If there is an entry in Box F10 Box 13 must equal Box F10.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F175.1">If there is an entry in Box F10 Box 13 must equal Box F10.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F007.3">9329</sch:diagnostic>
    <sch:diagnostic id="transactional.F007.3">Box 15 must be completed if the "Short" return flag does not equal 'yes' and Box 13 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F007.3">Box 15 must be completed if the "Short" return flag does not equal 'yes' and Box 13 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F007.3">Mae’n rhaid cwblhau Blwch 15 os nad yw’r faner ffurflen dreth “Fer” yn hafal a ‘ie’ ac mae Blwch 13 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F007.4">9330</sch:diagnostic>
    <sch:diagnostic id="transactional.F007.4">Box 15 must be completed if the "Short" return flag does not equal 'yes' and Box 14 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F007.4">Box 15 must be completed if the "Short" return flag does not equal 'yes' and Box 14 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F007.4">Mae’n rhaid cwblhau Blwch 15 os nad yw’r faner ffurflen dreth “Fer” yn hafal a ‘ie’ ac mae Blwch 14 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F007.1">9156</sch:diagnostic>
    <sch:diagnostic id="transactional.F007.1">Box 15 must equal the sum of Boxes 12, 13 and 14.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F007.1">Box 15 must equal the sum of Boxes 12, 13 and 14.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F007.1">Mae’n rhaid i Flwch 15 fod yn hafal a swm Blychau 12, 13 ac 14.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F012.1">9157</sch:diagnostic>
    <sch:diagnostic id="transactional.F012.1">Box 17 must not be greater than Box 16.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F012.1">Box 17 must not be greater than Box 16.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F012.1">Ni ddylai Blwch 17 fod yn fwy na Blwch 16.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F012.2">9158</sch:diagnostic>
    <sch:diagnostic id="transactional.F012.2">Box 17 can only be completed if Box 16 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F012.2">Box 17 can only be completed if Box 16 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F012.2">Gellir ond cwblhau Blwch 17 os yw Blwch 16 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F013.1">9159</sch:diagnostic>
    <sch:diagnostic id="transactional.F013.1">Box 18 must equal Box 16 minus Box 17.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F013.1">Box 18 must equal Box 16 minus Box 17.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F013.1">Mae’n rhaid i Flwch 18 fod yn hafal a Blwch 16 llai Blwch 17.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F014.9">9331</sch:diagnostic>
    <sch:diagnostic id="transactional.F014.9">Box 21 must be completed if Box 18 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F014.9">Box 21 must be completed if Box 18 is greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F014.9">Mae’n rhaid cwblhau Blwch 21 os yw Blwch 18 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F020.0">9160</sch:diagnostic>
    <sch:diagnostic id="transactional.F020.0">Box 19 must not be greater than the sum of Boxes 6, 8, 9, 10, 11, 15 and 18.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F020.0">Box 19 must not be greater than the sum of Boxes 6, 8, 9, 10, 11, 15 and 18.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F020.0">Box 19 must not be greater than the sum of Boxes 6, 8, 9, 10, 11, 15 and 18.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F139.1">9161</sch:diagnostic>
    <sch:diagnostic id="transactional.F139.1">Box 20 must not be greater than (the sum of Boxes 6, 8, 9, 10, 11, 15 and 18) minus Box 19.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F139.1">Box 20 must not be greater than (the sum of Boxes 6, 8, 9, 10, 11, 15 and 18) minus Box 19.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F139.1">Box 20 must not be greater than (the sum of Boxes 6, 8, 9, 10, 11, 15 and 18) minus Box 19.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F014.1">9332</sch:diagnostic>
    <sch:diagnostic id="transactional.F014.1">Box 21 must equal (the sum of Boxes 5, 6, 8, 9,10, 11, 12, 13, 14 and 18 ) minus (the sum of Boxes 19 and Box 20 ) )</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F014.1">Box 21 must equal (the sum of Boxes 5, 6, 8, 9,10, 11, 12, 13, 14 and 18 ) minus (the sum of Boxes 19 and Box 20 ) )</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F014.1">Mae’n rhaid i Flwch 21 fod yn hafal a (swm Blychau 5, 6, 8, 9,10, 11, 12, 13, 14 ac 18) llai (swm Blwch 19 a Blwch 20)</sch:diagnostic>
    <sch:diagnostic id="errorCode.F177.0">9164</sch:diagnostic>
    <sch:diagnostic id="transactional.F177.0">If Box 23 is 'Yes' then 'CT600G (Corporate Venturing Scheme)' must also be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F177.0">If Box 23 is 'Yes' then 'CT600G (Corporate Venturing Scheme)' must also be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F177.0">If Box 23 is 'Yes' then 'CT600G (Corporate Venturing Scheme)' must also be 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F177.1">9165</sch:diagnostic>
    <sch:diagnostic id="transactional.F177.1">Box 23 can only be 'Yes' if Box 22 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F177.1">Box 23 can only be 'Yes' if Box 22 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F177.1">Box 23 can only be 'Yes' if Box 22 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F015.1">9166</sch:diagnostic>
    <sch:diagnostic id="transactional.F015.1">Box 22 must not be greater than Box 21.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F015.1">Box 22 must not be greater than Box 21.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F015.1">Box 22 must not be greater than Box 21.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F018.1">9167</sch:diagnostic>
    <sch:diagnostic id="transactional.F018.1">Box 24 must not be greater than Box 21 minus Box 22.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F018.1">Box 24 must not be greater than Box 21 minus Box 22.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F018.1">Ni ddylai Blwch 24 fod yn fwy na Blwch 21 llai Blwch 22.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F084.1">9168</sch:diagnostic>
    <sch:diagnostic id="transactional.F084.1">Box 25 must not be greater than Box 21 minus (the sum of Boxes 22 and 24).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F084.1">Box 25 must not be greater than Box 21 minus (the sum of Boxes 22 and 24).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F084.1">Box 25 must not be greater than Box 21 minus (the sum of Boxes 22 and 24).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F085.1">9169</sch:diagnostic>
    <sch:diagnostic id="transactional.F085.1">Box 26 must not be greater than Box 21 minus (the sum of Boxes 22, 24,and 25).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F085.1">Box 26 must not be greater than Box 21 minus (the sum of Boxes 22, 24,and 25).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F085.1">Box 26 must not be greater than Box 21 minus (the sum of Boxes 22, 24,and 25).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F086.1">9170</sch:diagnostic>
    <sch:diagnostic id="transactional.F086.1">Box 27 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25 and 26).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F086.1">Box 27 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25 and 26).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F086.1">Box 27 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25 and 26).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F140.1">9171</sch:diagnostic>
    <sch:diagnostic id="transactional.F140.1">Box 28 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25, 26 and 27).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F140.1">Box 28 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25, 26 and 27).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F140.1">Box 28 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25, 26 and 27).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F198.3">9172</sch:diagnostic>
    <sch:diagnostic id="transactional.F198.3">Box 29 must be less than or equal to Box 132.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F198.3">Box 29 must be less than or equal to Box 132.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F198.3">Box 29 must be less than or equal to Box 132.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F198.4">9173</sch:diagnostic>
    <sch:diagnostic id="transactional.F198.4">Box 29 must not be greater than Box 21 minus (the sum of Boxes  22, 24, 25, 26, 27 and 28).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F198.4">Box 29 must not be greater than Box 21 minus (the sum of Boxes  22, 24, 25, 26, 27 and 28).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F198.4">Box 29 must not be greater than Box 21 minus (the sum of Boxes  22, 24, 25, 26, 27 and 28).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F904.0">9174</sch:diagnostic>
    <sch:diagnostic id="transactional.F904.0">Box 31 can only be 'Yes' if Box 30 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F904.0">Box 31 can only be 'Yes' if Box 30 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F904.0">Gall Blwch 31 ond bod yn ‘Ie’ os yw Blwch 30 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F016.1">9175</sch:diagnostic>
    <sch:diagnostic id="transactional.F016.1">Box 30 must be less than or equal to Box 122 if Box 31 is not 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F016.1">Box 30 must be less than or equal to Box 122 if Box 31 is not 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F016.1">Mae’n rhaid i Flwch 30 fod yn llai na, neu’n hafal a, Blwch 122 os nad ‘Ie’ yw Blwch 31.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F016.2">9176</sch:diagnostic>
    <sch:diagnostic id="transactional.F016.2">Box 30 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25, 26, 27, 28, and 29).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F016.2">Box 30 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25, 26, 27, 28, and 29).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F016.2">Ni ddylai Blwch 30 fod yn fwy na Blwch 21 llai (swm Blychau 22, 24, 25, 26, 27, 28, a 29).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F019.3">9178</sch:diagnostic>
    <sch:diagnostic id="transactional.F019.3">Box 32 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25, 26, 27, 28, 29 and 30).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F019.3">Box 32 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25, 26, 27, 28, 29 and 30).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F019.3">Ni ddylai Blwch 32 fod yn fwy na Blwch 21 llai (swm Blychau 22, 24, 25, 26, 27, 28, 29 a 30).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F021.2">9179</sch:diagnostic>
    <sch:diagnostic id="transactional.F021.2">Box 33 must not be greater than Box 21.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F021.2">Box 33 must not be greater than Box 21.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F021.2">Box 33 must not be greater than Box 21.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F021.3">9180</sch:diagnostic>
    <sch:diagnostic id="transactional.F021.3">Box 33 must equal (the sum of Boxes 22, 24, 25, 26, 27, 28, 29, 30 and 32).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F021.3">Box 33 must equal (the sum of Boxes 22, 24, 25, 26, 27, 28, 29, 30 and 32).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F021.3">Box 33 must equal (the sum of Boxes 22, 24, 25, 26, 27, 28, 29, 30 and 32).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F022.1">9333</sch:diagnostic>
    <sch:diagnostic id="transactional.F022.1">Box 34 must equal ( Box 21 minus ( the sum of Boxes 22, 24, 25, 26, 27, 28 , 29, 30 and 32) )</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F022.1">Box 34 must equal ( Box 21 minus ( the sum of Boxes 22, 24, 25, 26, 27, 28 , 29, 30 and 32) )</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F022.1">Mae’n rhaid i Flwch 34 fod yn hafal a (Blwch 21 llai (swm Blychau 22, 24, 25, 26, 27, 28 , 29, 30 a 32))</sch:diagnostic>
    <sch:diagnostic id="errorCode.F023.1">9334</sch:diagnostic>
    <sch:diagnostic id="transactional.F023.1">If Box 34 is present Box 35 must not be greater than Box 34</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F023.1">If Box 34 is present Box 35 must not be greater than Box 34</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F023.1">Os yw Blwch 34 yn bresennol, ni ddylai Blwch 35 fod yn fwy na Blwch 34</sch:diagnostic>
    <sch:diagnostic id="errorCode.F900.3">9335</sch:diagnostic>
    <sch:diagnostic id="transactional.F900.3">If Box 34 is present Box 37 must equal Box 34 minus (the sum of Boxes 35 and 36)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F900.3">If Box 34 is present Box 37 must equal Box 34 minus (the sum of Boxes 35 and 36)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F900.3">Os yw Blwch 34 yn bresennol, rhaid i Flwch 37 fod yn hafal a Blwch 34 llai (swm Blychau 35 a 36)</sch:diagnostic>
    <sch:diagnostic id="errorCode.F023.0">9336</sch:diagnostic>
    <sch:diagnostic id="transactional.F023.0">If Box 34 is absent Box 35 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25, 26, 27, 28, 29, 30 and 32)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F023.0">If Box 34 is absent Box 35 must not be greater than Box 21 minus (the sum of Boxes 22, 24, 25, 26, 27, 28, 29, 30 and 32)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F023.0">Os yw Blwch 34 yn absennol, ni ddylai Blwch 35 fod yn fwy na Blwch 21 llai (swm Blychau 22, 24, 25, 26, 27, 28, 29, 30 a 32)</sch:diagnostic>
    <sch:diagnostic id="errorCode.F025.1">9337</sch:diagnostic>
    <sch:diagnostic id="transactional.F025.1">Box 36 must not be greater than ( ( Box 21 minus ( the sum of Boxes 22, 24, 25, 26, 27, 28, 29, 30, and 32 ) ) minus box 35 )</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F025.1">Box 36 must not be greater than ( ( Box 21 minus ( the sum of Boxes 22, 24, 25, 26, 27, 28, 29, 30, and 32 ) ) minus box 35 )</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F025.1">Ni ddylai Blwch 36 fod yn fwy na ((Blwch 21 llai (swm Blychau 22, 24, 25, 26, 27, 28, 29, 30, a 32)) llai blwch 35)</sch:diagnostic>
    <sch:diagnostic id="errorCode.F025.2">9954</sch:diagnostic>
    <sch:diagnostic id="transactional.F025.2">If return type is 'New' and there is an entry greater than zero in Box 36 then C1 must be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F025.2">If return type is 'New' and there is an entry greater than zero in Box 36 then C1 must be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F025.2">Os ydy math y ffurflen dreth yn 'Newydd' ac mae cofnod sy’n fwy na sero ym Mlwch 36 yna rhaid cwblhau C1</sch:diagnostic>
    <sch:diagnostic id="errorCode.F025.0">9185</sch:diagnostic>
    <sch:diagnostic id="transactional.F025.0">Box 36 can only be completed if 'CT600C (Group and Consortium)' is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F025.0">Box 36 can only be completed if 'CT600C (Group and Consortium)' is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F025.0">Box 36 can only be completed if 'CT600C (Group and Consortium)' is 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F025.3">9955</sch:diagnostic>
    <sch:diagnostic id="transactional.F025.3">If return type is 'New' and there is amn entry greater than zero in Box 36 then  'Simplified Arrangement in Force' or 'Copy Of Notices of Consent Attached' must be present [Copy of notices of consent attached] must be present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F025.3">If return type is 'New' and there is amn entry greater than zero in Box 36 then  'Simplified Arrangement in Force' or 'Copy Of Notices of Consent Attached' must be present [Copy of notices of consent attached] must be present.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F025.3">Os ydy math y ffurflen dreth yn 'Newydd' ac mae cofnod sy’n fwy na sero ym Mlwch 36 yna rhaid bod ‘Trefniant syml mewn grym’ neu 'Copi o’r Hysbysiadau Cydsynio ynghlwm' [Copy of notices of consent attached] yn bresennol</sch:diagnostic>
    <sch:diagnostic id="errorCode.F900.1">9186</sch:diagnostic>
    <sch:diagnostic id="transactional.F900.1">Box 37 must equal the sum of Boxes 44, 47, 50, 54, 57 and 60.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F900.1">Box 37 must equal the sum of Boxes 44, 47, 50, 54, 57 and 60.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F900.1">Mae’n rhaid i Flwch 37 fod yn hafal a swm Blychau 44, 47, 50, 54, 57 a 60.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F900.2">9338</sch:diagnostic>
    <sch:diagnostic id="transactional.F900.2">If Box 34 is absent box 37 must equal Box 21 minus (the sum of Boxes 22, 24, 25, 26, 27, 28, 29, 30 and 32) minus (the sum of Boxes 35 and 36)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F900.2">If Box 34 is absent box 37 must equal Box 21 minus (the sum of Boxes 22, 24, 25, 26, 27, 28, 29, 30 and 32) minus (the sum of Boxes 35 and 36)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F900.2">Os yw Blwch 34 yn absennol, rhaid i Flwch 37 fod yn hafal a Blwch 21 llai (swm Blychau 22, 24, 25, 26, 27, 28, 29, 30 a 32) llai (swm Blychau 35 a 36)</sch:diagnostic>
    <sch:diagnostic id="errorCode.F900.0">9188</sch:diagnostic>
    <sch:diagnostic id="transactional.F900.0">Financial year two information must be provided if Box 37 is greater than 0 (zero) and the period 'To' date falls in the financial year following that of the period 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F900.0">Financial year two information must be provided if Box 37 is greater than 0 (zero) and the period 'To' date falls in the financial year following that of the period 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F900.0">Mae’n rhaid darparu gwybodaeth blwyddyn ariannol dau os yw Blwch 37 yn fwy na 0 (sero) a dyddiad ‘I’ y cyfnod yn syrthio yn y flwyddyn ariannol sy’n dilyn dyddiad ‘O’ y cyfnod.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F229.1">9189</sch:diagnostic>
    <sch:diagnostic id="transactional.F229.1">Box 169 can only be completed if the period 'To' date is on or after 01/04/2007.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F229.1">Box 169 can only be completed if the period 'To' date is on or after 01/04/2007.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F229.1">Box 169 can only be completed if the period 'To' date is on or after 01/04/2007.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F229.2">9190</sch:diagnostic>
    <sch:diagnostic id="transactional.F229.2">Box 169 must not be greater than Box 37.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F229.2">Box 169 must not be greater than Box 37.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F229.2">Box 169 must not be greater than Box 37.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F229.3">9956</sch:diagnostic>
    <sch:diagnostic id="transactional.F229.3">If Box 169 is completed then 'CT600I (Supplementary charge in respect of ring fence trade)' must be 'Yes' or return type must be 'Amended'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F229.3">If Box 169 is completed then 'CT600I (Supplementary charge in respect of ring fence trade)' must be 'Yes' or return type must be 'Amended'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F229.3">If Box 169 is completed then 'CT600I (Supplementary charge in respect of ring fence trade)' must be 'Yes' or return type must be 'Amended'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F213.0">9192</sch:diagnostic>
    <sch:diagnostic id="transactional.F213.0">Box 42 can only be 'Yes if Box 37 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F213.0">Box 42 can only be 'Yes if Box 37 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F213.0">Gall Blwch 42 ond bod yn ‘Ie’ os yw Blwch 37 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F213.1">9193</sch:diagnostic>
    <sch:diagnostic id="transactional.F213.1">Box 42 must not be 'Yes' if the type of company is 1 (Unit trust or open-ended investment company), 2 (Close investment - holding company) or 3 (Company in Liquidation (second or subsequent year of liquidation)).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F213.1">Box 42 must not be 'Yes' if the type of company is 1 (Unit trust or open-ended investment company), 2 (Close investment - holding company) or 3 (Company in Liquidation (second or subsequent year of liquidation)).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F213.1">Ni all Blwch 42 fod yn ‘Ie’ os yw’r math o gwmni yn 1 (Ymddiriedolaeth unedol neu gwmni buddsoddi penagored), 2 (Cwmni sy’n dal buddsoddiad cau) neu 3 (Cwmni mewn Datodiad (ail flwyddyn neu flwyddyn ddilynol y datodiad)).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F032.1">9195</sch:diagnostic>
    <sch:diagnostic id="transactional.F032.1">Box 43 must equal the equivalent financial year of the period 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F032.1">Box 43 must equal the equivalent financial year of the period 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F032.1">Mae’n rhaid i Flwch 43 fod yn hafal a blwyddyn ariannol gyfwerth o ddyddiad ‘O’ y cyfnod.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F032.2">9196</sch:diagnostic>
    <sch:diagnostic id="transactional.F032.2">Box 43 cannot be earlier than 1998.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F032.2">Box 43 cannot be earlier than 1998.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F032.2">Ni ddylai Blwch 43 fod yn gynharach na 1998.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F032.3">9197</sch:diagnostic>
    <sch:diagnostic id="transactional.F032.3">The sum of Boxes 44, 47 and 50 must equal Box 37 where the period 'From' and 'To' dates are in the same financial year. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F032.3">The sum of Boxes 44, 47 and 50 must equal Box 37 where the period 'From' and 'To' dates are in the same financial year. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F032.3">Mae’n rhaid i Flychau 44, 47 a 50 fod yn hafal a Blwch 37 lle mae dyddiadau ‘O’ ac ‘I’ y cyfnod yn yr un flwyddyn ariannol.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F032.4">9198</sch:diagnostic>
    <sch:diagnostic id="transactional.F032.4">Where the period 'From' and 'To' dates are in different financial years, the sum of Boxes 44, 47 and 50 must equal Box 37, apportioned to the first financial year.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F032.4">Where the period 'From' and 'To' dates are in different financial years, the sum of Boxes 44, 47 and 50 must equal Box 37, apportioned to the first financial year.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F032.4">Lle mae dyddiadau ‘O’ ac ‘I’ y cyfnod mewn blynyddoedd ariannol gwahanol, rhaid i swm Blychau 44, 47 a 50 fod yn hafal a Blwch 37, wedi ei ddosrannu i’r flwyddyn ariannol gyntaf.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F034.5">9199</sch:diagnostic>
    <sch:diagnostic id="transactional.F034.5">An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is 5 (Insurance).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F034.5">An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is 5 (Insurance).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F034.5">An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is 5 (Insurance).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F034.4">9200</sch:diagnostic>
    <sch:diagnostic id="transactional.F034.4">An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is not completed. If [SMALL CO RATE OF CT] or [RF SMALL CO RATE OF CT] is used then Box 42 must be completed. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F034.4">An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is not completed. If [SMALL CO RATE OF CT] or [RF SMALL CO RATE OF CT] is used then Box 42 must be completed. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F034.4">Rhaid defnyddio cyfradd dreth cymwys o naill ai [CYFRADD LAWN CT], [CYFRADD CWMNI BACH CT], [CYFRADD GYCHWYNNOL CT], [CYFRADD RF LLAWN CT] neu [RF CYFRADD CWMNI BACH CT] os nad yw'r math o gwmni wedi ei lenwi. Os defnyddir [CYFRADD CWMNI BACH CT] neu [RF CYFRADD CWMNI BACH CT], yna mae'n rhaid llenwi Blwch 42. </sch:diagnostic>
    <sch:diagnostic id="errorCode.F034.3">9201</sch:diagnostic>
    <sch:diagnostic id="transactional.F034.3">If the type of company is 4 (Investment trust with housing investment profits),  6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity) or 9 (Real Estate Investment Trust - Residual) then this must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F034.3">If the type of company is 4 (Investment trust with housing investment profits),  6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity) or 9 (Real Estate Investment Trust - Residual) then this must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F034.3">If the type of company is 4 (Investment trust with housing investment profits),  6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity) or 9 (Real Estate Investment Trust - Residual) then this must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:diagnostic>
    <sch:diagnostic id="errorCode.F034.1">9202</sch:diagnostic>
    <sch:diagnostic id="transactional.F034.1">The tax rate of [EQUIV. LOW CT RATE] must be used if the type of company is 1 (Unit trust or open-ended investment company).    </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F034.1">The tax rate of [EQUIV. LOW CT RATE] must be used if the type of company is 1 (Unit trust or open-ended investment company).    </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F034.1">Rhaid defnyddio cyfradd treth [EQUIV. LOW CT RATE] os yw’r math o gwmni yn 1 (Ymddiriedolaeth unedol neu gwmni buddsoddi penagored).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F034.2">9203</sch:diagnostic>
    <sch:diagnostic id="transactional.F034.2">The tax rate of [FULL RATE OF CT] must be used if the type of company is 2 (Close investment - holding company) or 3 (Company in Liquidation (second or subsequent year of liquidation)).     </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F034.2">The tax rate of [FULL RATE OF CT] must be used if the type of company is 2 (Close investment - holding company) or 3 (Company in Liquidation (second or subsequent year of liquidation)).     </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F034.2">Rhaid defnyddio cyfradd treth [FULL RATE OF CT] os yw’r math o gwmni yn 2 (Cwmni dal buddsoddiad cau) neu 3 (Cwmni mewn Datodiad (ail flwyddyn neu flwyddyn ddilynol y datodiad)). </sch:diagnostic>
    <sch:diagnostic id="errorCode.F035.0">9204</sch:diagnostic>
    <sch:diagnostic id="transactional.F035.0">Tax' must equal the 'Amount of profit' multiplied by 'Rate of tax'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F035.0">Tax' must equal the 'Amount of profit' multiplied by 'Rate of tax'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F035.0">Mae’n rhaid i ‘Treth’ fod yn hafal a ‘Swm yr elw’ wedi ei luosi a ‘Cyfradd treth’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N052b.0">9206</sch:diagnostic>
    <sch:diagnostic id="transactional.N052b.0">Financial year two information must not be completed if the accounting period falls within the same financial year.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N052b.0">Financial year two information must not be completed if the accounting period falls within the same financial year.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N052b.0">Ni ddylid cwblhau gwybodaeth blwyddyn ariannol dau os yw’r cyfnod cyfrifyddu yn syrthio o fewn yr un flwyddyn ariannol.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F039.0">9207</sch:diagnostic>
    <sch:diagnostic id="transactional.F039.0">Box 53 must equal Box 43 plus one.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F039.0">Box 53 must equal Box 43 plus one.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F039.0">Mae’n rhaid i Flwch 53 fod yn hafal a Blwch 43 plws un.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F041.5">9208</sch:diagnostic>
    <sch:diagnostic id="transactional.F041.5">The 'Rate of tax' must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] if the type of company is 5 (Insurance).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F041.5">The 'Rate of tax' must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] if the type of company is 5 (Insurance).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F041.5">The 'Rate of tax' must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] if the type of company is 5 (Insurance).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F041.4">9209</sch:diagnostic>
    <sch:diagnostic id="transactional.F041.4">The 'Rate of tax' must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] if the type of company is not completed. If [SMALL CO RATE OF CT] or [RF SMALL CO RATE OF CT] is used then Box 42 must be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F041.4">The 'Rate of tax' must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] if the type of company is not completed. If [SMALL CO RATE OF CT] or [RF SMALL CO RATE OF CT] is used then Box 42 must be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F041.4">The 'Rate of tax' must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] if the type of company is not completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F041.3">9210</sch:diagnostic>
    <sch:diagnostic id="transactional.F041.3">The 'Rate of tax' must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [STARTING RATE OF CT] if the type of company is 4 (Investment trust with housing investment profits), 6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity) or 9 (Real Estate Investment Trust - Residual).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F041.3">The 'Rate of tax' must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [STARTING RATE OF CT] if the type of company is 4 (Investment trust with housing investment profits), 6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity) or 9 (Real Estate Investment Trust - Residual).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F041.3">The 'Rate of tax' must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [STARTING RATE OF CT] if the type of company is 4 (Investment trust with housing investment profits), 6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity) or 9 (Real Estate Investment Trust - Residual).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F041.1">9211</sch:diagnostic>
    <sch:diagnostic id="transactional.F041.1">The 'Rate of tax' must equal [EQUIV. LOW CT RATE] if the type of company is 1 (Unit trust or open-ended investment company).    </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F041.1">The 'Rate of tax' must equal [EQUIV. LOW CT RATE] if the type of company is 1 (Unit trust or open-ended investment company).    </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F041.1">Mae’n rhaid i’r ‘Cyfradd treth’ fod yn hafal a [EQUIV. LOW CT RATE] os yw’r math o gwmni yn 1 (Ymddiriedolaeth unedol neu gwmni buddsoddi penagored). </sch:diagnostic>
    <sch:diagnostic id="errorCode.F041.2">9212</sch:diagnostic>
    <sch:diagnostic id="transactional.F041.2">The 'Rate of tax' must equal [FULL RATE OF CT] if the type of company' is 2 (Close investment - holding company) or 3 (Company in liquidation (second or subsequent year of liquidation)).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F041.2">The 'Rate of tax' must equal [FULL RATE OF CT] if the type of company' is 2 (Close investment - holding company) or 3 (Company in liquidation (second or subsequent year of liquidation)).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F041.2">Mae’n rhaid i’r ‘Cyfradd treth’ fod yn hafal a [FULL RATE OF CT] os yw’r math o gwmni yn 2 (Cwmni dal buddsoddiad cau) neu 3 (Cwmni mewn Datodiad (ail flwyddyn neu flwyddyn ddilynol y datodiad)).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F042.0">9213</sch:diagnostic>
    <sch:diagnostic id="transactional.F042.0">For the second financial year 'Tax' must equal the 'Amount of profit' multiplied by 'Rate of tax'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F042.0">For the second financial year 'Tax' must equal the 'Amount of profit' multiplied by 'Rate of tax'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F042.0">Am yr ail flwyddyn ariannol, mae’n rhaid i ‘Treth’ fod yn hafal a ‘Swm yr elw’ wedi ei luosi a ‘Cyfradd treth’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F046.0">9214</sch:diagnostic>
    <sch:diagnostic id="transactional.F046.0">Box 63 must equal the sum of Boxes 46, 49, 52, 56, 59 and 62.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F046.0">Box 63 must equal the sum of Boxes 46, 49, 52, 56, 59 and 62.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F046.0">Mae’n rhaid i Flwch 63 fod yn hafal a swm Blychau 46, 49, 52, 56, 59 a 62.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N002.12">9215</sch:diagnostic>
    <sch:diagnostic id="transactional.N002.12">Box 65 must be completed if Box 64 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N002.12">Box 65 must be completed if Box 64 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N002.12">Mae’n rhaid cwblhau Blwch 65 os yw Blwch 64 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F047.4">9216</sch:diagnostic>
    <sch:diagnostic id="transactional.F047.4">Box 64 must be less than Box 63.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F047.4">Box 64 must be less than Box 63.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F047.4">Mae’n rhaid i Flwch 64 fod yn llai na Blwch 63.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F047.0">9217</sch:diagnostic>
    <sch:diagnostic id="transactional.F047.0">Box 64 can only be completed if the type of company is 4 (Investment trust with housing investment profits),  5 (Insurance), 6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity), 9 (Real Estate Investment Trust Residual) or not completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F047.0">Box 64 can only be completed if the type of company is 4 (Investment trust with housing investment profits),  5 (Insurance), 6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity), 9 (Real Estate Investment Trust Residual) or not completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F047.0">Gellir ond cwblhau Blwch 64 os yw’r math o gwmni yn 4 (Ymddiriedolaeth buddsoddi gydag elw buddsoddi tai), 5 (Yswiriant), 6 (Clwb aelodau neu gymdeithas wirfoddol), 7 (Cwmni rheoli eiddo), 8 (Elusen neu dan berchnogaeth elusen) neu 9 (Cwmni Buddsoddi Eiddo Diriaethol – Gweddilliol) neu heb ei gwblhau.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F047.1">9317</sch:diagnostic>
    <sch:diagnostic id="transactional.F047.1">If Box 64 is completed then Box 42 must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F047.1">If Box 64 is completed then Box 42 must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F047.1">Os yw Blwch 64 wedi ei gwblhau, rhaid i Flwch 42 fod yn ‘Ie’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F215.1">9218</sch:diagnostic>
    <sch:diagnostic id="transactional.F215.1">Box 65 can only be completed if Box 63 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F215.1">Box 65 can only be completed if Box 63 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F215.1">Gellir ond cwblhau Blwch 65 os yw Blwch 63 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F215.2">9219</sch:diagnostic>
    <sch:diagnostic id="transactional.F215.2">Box 65 must equal Box 63 minus Box 64. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F215.2">Box 65 must equal Box 63 minus Box 64. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F215.2">Mae’n rhaid i Flwch 65 fod yn hafal a Blwch 63 llai Blwch 64.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N054b.1">9221</sch:diagnostic>
    <sch:diagnostic id="transactional.N054b.1">Boxes 66, 67, 68 and 69 must not be completed if the period 'From' date is on or after 01/04/2006. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N054b.1">Boxes 66, 67, 68 and 69 must not be completed if the period 'From' date is on or after 01/04/2006. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N054b.1">Boxes 66, 67, 68 and 69 must not be completed if the period 'From' date is on or after 01/04/2006. </sch:diagnostic>
    <sch:diagnostic id="errorCode.N054b.3">9222</sch:diagnostic>
    <sch:diagnostic id="transactional.N054b.3">Boxes 66, 67, 68 and 69 must not be completed if the period 'To' date is on or before 31/03/2004. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N054b.3">Boxes 66, 67, 68 and 69 must not be completed if the period 'To' date is on or before 31/03/2004. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N054b.3">Boxes 66, 67, 68 and 69 must not be completed if the period 'To' date is on or before 31/03/2004. </sch:diagnostic>
    <sch:diagnostic id="errorCode.N054b.0">9223</sch:diagnostic>
    <sch:diagnostic id="transactional.N054b.0">Boxes 66, 67, 68 and 69 can only be completed if Box 37 is greater than 0 (zero). </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N054b.0">Boxes 66, 67, 68 and 69 can only be completed if Box 37 is greater than 0 (zero). </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N054b.0">Boxes 66, 67, 68 and 69 can only be completed if Box 37 is greater than 0 (zero). </sch:diagnostic>
    <sch:diagnostic id="errorCode.N054b.4">9224</sch:diagnostic>
    <sch:diagnostic id="transactional.N054b.4">Boxes 66, 67, 68 and 69 can only be completed if Box 37 is equal to or less than [Non Corporate Distributions Limit]. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N054b.4">Boxes 66, 67, 68 and 69 can only be completed if Box 37 is equal to or less than [Non Corporate Distributions Limit]. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N054b.4">Boxes 66, 67, 68 and 69 can only be completed if Box 37 is equal to or less than [Non Corporate Distributions Limit]. </sch:diagnostic>
    <sch:diagnostic id="errorCode.F216.1">9225</sch:diagnostic>
    <sch:diagnostic id="transactional.F216.1">Box 66 must not be greater than [NCD RATE OF CT].</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F216.1">Box 66 must not be greater than [NCD RATE OF CT].</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F216.1">Ni ddylai Blwch 66 fod yn fwy na [NCD RATE OF CT].</sch:diagnostic>
    <sch:diagnostic id="errorCode.F216.0">9226</sch:diagnostic>
    <sch:diagnostic id="transactional.F216.0">Box 66 must equal (Box 65 divided by Box 37) multiplied by 100, if the period 'To' date is on or before 31/03/2006. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F216.0">Box 66 must equal (Box 65 divided by Box 37) multiplied by 100, if the period 'To' date is on or before 31/03/2006. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F216.0">Mae’n rhaid i Flwch 66 fod yn hafal a (Blwch 65 wedi ei rannu a Blwch 37) wedi ei luosi a 100, os yw dyddiad ‘I’ y cyfnod ar neu cyn 31/03/2006.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F217.1">9228</sch:diagnostic>
    <sch:diagnostic id="transactional.F217.1">Box 67 must not be greater than the sum of Boxes 54, 57 and 60 if the Accounting period straddles 01/04/2004.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F217.1">Box 67 must not be greater than the sum of Boxes 54, 57 and 60 if the Accounting period straddles 01/04/2004.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F217.1">Box 67 must not be greater than the sum of Boxes 54, 57 and 60 if the Accounting period straddles 01/04/2004.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F217.2">9229</sch:diagnostic>
    <sch:diagnostic id="transactional.F217.2">Box 67 must not be greater than the sum of Boxes 44, 47 and 50 if the Accounting period straddles 31/03/2006.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F217.2">Box 67 must not be greater than the sum of Boxes 44, 47 and 50 if the Accounting period straddles 31/03/2006.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F217.2">Box 67 must not be greater than the sum of Boxes 44, 47 and 50 if the Accounting period straddles 31/03/2006.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F217.6">9230</sch:diagnostic>
    <sch:diagnostic id="transactional.F217.6">Box 67 must not be greater than Box 37. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F217.6">Box 67 must not be greater than Box 37. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F217.6">Box 67 must not be greater than Box 37. </sch:diagnostic>
    <sch:diagnostic id="errorCode.F218.1">9231</sch:diagnostic>
    <sch:diagnostic id="transactional.F218.1">Box 68 must equal Box 67 multiplied by [NCD RATE OF CT] divided by 100.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F218.1">Box 68 must equal Box 67 multiplied by [NCD RATE OF CT] divided by 100.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F218.1">Box 68 must equal Box 67 multiplied by [NCD RATE OF CT] divided by 100.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F219.0">9232</sch:diagnostic>
    <sch:diagnostic id="transactional.F219.0">Box 69 must equal Box 37 minus Box 67, multiplied by Box 66 divided by 100 if the period 'To' date is on or before 31/03/2006. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F219.0">Box 69 must equal Box 37 minus Box 67, multiplied by Box 66 divided by 100 if the period 'To' date is on or before 31/03/2006. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F219.0">Mae’n rhaid i Flwch 69 fod yn hafal a Blwch 37 llai Blwch 67, wedi ei luosi a Blwch 66 wedi ei rannu a 100 os yw dyddiad ‘I’ y cyfnod ar neu cyn 31/03/2006.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F219.1">9233</sch:diagnostic>
    <sch:diagnostic id="transactional.F219.1">Box 69 must equal the sum of Boxes 44, 47 and 50 minus Box 67, multiplied by Box 66 divided by 100, if the Accounting period straddles 31/03/2006. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F219.1">Box 69 must equal the sum of Boxes 44, 47 and 50 minus Box 67, multiplied by Box 66 divided by 100, if the Accounting period straddles 31/03/2006. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F219.1">Mae’n rhaid i Flwch 69 fod yn hafal a swm Blychau 44, 47 a 50 llai Blwch 67, wedi ei luosi a Blwch 66 wedi ei rannu a 100, os yw’r Cyfnod Cyfrifyddu yn pontio dros 31/03/2006.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F220.0">9234</sch:diagnostic>
    <sch:diagnostic id="transactional.F220.0">If the return period 'To' date is after 31/03/2006 and non corporate distributions calculation is completed then box 70 must equal the sum of Boxes 56, 59 and 62 plus box 68 and box 69.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F220.0">If the return period 'To' date is after 31/03/2006 and non corporate distributions calculation is completed then box 70 must equal the sum of Boxes 56, 59 and 62 plus box 68 and box 69.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F220.0">Os yw dyddiad ‘I’ cyfnod y ffurflen dreth ar ol 31/03/2006 a chwblheir cyfrifiad dosbarthiad anghorfforaethol, rhaid i flwch 70 fod yn hafal a (swm Blychau 56, 59 a 62) plws (Blwch 68 a Blwch 69).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F051.3">9235</sch:diagnostic>
    <sch:diagnostic id="transactional.F051.3">Box 77 must be completed if Box 71 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F051.3">Box 77 must be completed if Box 71 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F051.3">Box 77 must be completed if Box 71 is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F051.4">9236</sch:diagnostic>
    <sch:diagnostic id="transactional.F051.4">Box 77 must be completed if Box 72 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F051.4">Box 77 must be completed if Box 72 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F051.4">Box 77 must be completed if Box 72 is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F051.5">9237</sch:diagnostic>
    <sch:diagnostic id="transactional.F051.5">Box 77 must be completed if Box 73 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F051.5">Box 77 must be completed if Box 73 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F051.5">Box 77 must be completed if Box 73 is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F051.6">9238</sch:diagnostic>
    <sch:diagnostic id="transactional.F051.6">Box 77 must be completed if Box 76 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F051.6">Box 77 must be completed if Box 76 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F051.6">Box 77 must be completed if Box 76 is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F178.2">9239</sch:diagnostic>
    <sch:diagnostic id="transactional.F178.2">Box 71 must not be greater than Box 70.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F178.2">Box 71 must not be greater than Box 70.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F178.2">Box 71 must not be greater than Box 70.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F178.0">9240</sch:diagnostic>
    <sch:diagnostic id="transactional.F178.0">Box 71 can only be completed if 'CT600G (Corporate Venturing Scheme)' is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F178.0">Box 71 can only be completed if 'CT600G (Corporate Venturing Scheme)' is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F178.0">Box 71 can only be completed if 'CT600G (Corporate Venturing Scheme)' is 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F202.2">9241</sch:diagnostic>
    <sch:diagnostic id="transactional.F202.2">Box 72 must not be greater than Box 70 minus Box 71.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F202.2">Box 72 must not be greater than Box 70 minus Box 71.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F202.2">Box 72 must not be greater than Box 70 minus Box 71.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F048.1">9242</sch:diagnostic>
    <sch:diagnostic id="transactional.F048.1">Box 73 must not be greater than Box 70 minus (the sum of Boxes 71 and 72).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F048.1">Box 73 must not be greater than Box 70 minus (the sum of Boxes 71 and 72).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F048.1">Box 73 must not be greater than Box 70 minus (the sum of Boxes 71 and 72).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F214.0">9244</sch:diagnostic>
    <sch:diagnostic id="transactional.F214.0">Box 74 can only be 'Yes' if Box 73 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F214.0">Box 74 can only be 'Yes' if Box 73 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F214.0">Box 74 can only be 'Yes' if Box 73 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F186.0">9245</sch:diagnostic>
    <sch:diagnostic id="transactional.F186.0">Box 75 can only be 'Yes' if Box 73 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F186.0">Box 75 can only be 'Yes' if Box 73 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F186.0">Box 75 can only be 'Yes' if Box 73 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F049.2">9246</sch:diagnostic>
    <sch:diagnostic id="transactional.F049.2">Box 76 must not be greater than Box 70 minus (the sum of Boxes 71, 72 and 73).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F049.2">Box 76 must not be greater than Box 70 minus (the sum of Boxes 71, 72 and 73).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F049.2">Box 76 must not be greater than Box 70 minus (the sum of Boxes 71, 72 and 73).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F051.2">9247</sch:diagnostic>
    <sch:diagnostic id="transactional.F051.2">Box 77 must equal the sum of Boxes 71, 72, 73 and 76.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F051.2">Box 77 must equal the sum of Boxes 71, 72, 73 and 76.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F051.2">Box 77 must equal the sum of Boxes 71, 72, 73 and 76.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F052.1">9248</sch:diagnostic>
    <sch:diagnostic id="transactional.F052.1">Box 78 must equal Box 70 minus Box 77.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F052.1">Box 78 must equal Box 70 minus Box 77.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F052.1">Box 78 must equal Box 70 minus Box 77.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F093.1">9339</sch:diagnostic>
    <sch:diagnostic id="transactional.F093.1">If Box 78 is present Box 83 must equal (the sum of Boxes 78, 79, 81 and 82)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F093.1">If Box 78 is present Box 83 must equal (the sum of Boxes 78, 79, 81 and 82)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F093.1">Os yw Blwch 78 yn bresennol, rhai i Flwch 83 fod yn hafal a (swm Blychau 78, 79, 81 ac 82) </sch:diagnostic>
    <sch:diagnostic id="errorCode.F093.3">9340</sch:diagnostic>
    <sch:diagnostic id="transactional.F093.3">Box 83 must be completed if the "Short" return flag does not equal 'yes' and Box 78 is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F093.3">Box 83 must be completed if the "Short" return flag does not equal 'yes' and Box 78 is present</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F093.3">Mae’n rhaid cwblhau Blwch 83 os nad yw’r faner ffurflen dreth “Fer” yn hafal a ‘ie’ ac mae Blwch 78 yn bresennol</sch:diagnostic>
    <sch:diagnostic id="errorCode.F096.0">9249</sch:diagnostic>
    <sch:diagnostic id="transactional.F096.0">Box 80 can only be 'Yes' if there is an entry in Box 79.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F096.0">Box 80 can only be 'Yes' if there is an entry in Box 79.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F096.0">Gall Blwch 80 ond bod yn ‘Ie’ os oes cofnod ym Mlwch 79.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F096.1">9250</sch:diagnostic>
    <sch:diagnostic id="transactional.F096.1">Box 80 can only be 'Yes' if there is an entry in Box A11.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F096.1">Box 80 can only be 'Yes' if there is an entry in Box A11.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F096.1">Gall Blwch 80 ond bod yn ‘Ie’ os oes cofnod ym Mlwch A11.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F096.2">9251</sch:diagnostic>
    <sch:diagnostic id="transactional.F096.2">Box 80 must not be 'Yes' if 'CT600A (Loans to Participators by Close Companies)' is not 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F096.2">Box 80 must not be 'Yes' if 'CT600A (Loans to Participators by Close Companies)' is not 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F096.2">Ni ddylai Blwch 80 fod yn ‘Ie’ os nad yw ‘CT600A (Benthyciadau i Gyfranogwyr gan Gwmniau Cau)’ yn ‘Ie’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F097.0">9252</sch:diagnostic>
    <sch:diagnostic id="transactional.F097.0">You must not enter an amount in Box 79 if the return type is 'New' and 'CT600A (Loans to Participators by Close Companies)' is not 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F097.0">You must not enter an amount in Box 79 if the return type is 'New' and 'CT600A (Loans to Participators by Close Companies)' is not 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F097.0">Ni ddylech nodi swm ym Mlwch 79 os yw’r math o ffurflen dreth yn ‘Newydd’ ac nid yw ‘CT600A (Benthyciadau i Gyfranogwyr gan Gwmniau Cau) yn ‘Ie’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F093.4">9341</sch:diagnostic>
    <sch:diagnostic id="transactional.F093.4">Box 83 must be completed if the "Short" return flag does not equal 'yes' and Box 79 is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F093.4">Box 83 must be completed if the "Short" return flag does not equal 'yes' and Box 79 is present</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F093.4">Mae’n rhaid cwblhau Blwch 83 os nad yw’r faner ffurflen dreth “Fer” yn hafal a ‘ie’ ac mae Blwch 79 yn bresennol</sch:diagnostic>
    <sch:diagnostic id="errorCode.F093.5">9342</sch:diagnostic>
    <sch:diagnostic id="transactional.F093.5">Box 83 must be completed if the "Short" return flag does not equal 'yes' and Box 81 is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F093.5">Box 83 must be completed if the "Short" return flag does not equal 'yes' and Box 81 is present</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F093.5">Mae’n rhaid cwblhau Blwch 83 os nad yw’r faner ffurflen dreth “Fer” yn hafal a ‘ie’ ac mae Blwch 81 yn bresennol</sch:diagnostic>
    <sch:diagnostic id="errorCode.F098.0">9253</sch:diagnostic>
    <sch:diagnostic id="transactional.F098.0">Box 81 can only be present in an original return if the CT600B (Controlled Foreign Companies) is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F098.0">Box 81 can only be present in an original return if the CT600B (Controlled Foreign Companies) is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F098.0">Box 81 can only be present in an original return if the CT600B (Controlled Foreign Companies) is 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F203.1">9254</sch:diagnostic>
    <sch:diagnostic id="transactional.F203.1">Box 82 can only be present in an original return if the CT600I (Supplementary charge in respect of ring fence trade) is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F203.1">Box 82 can only be present in an original return if the CT600I (Supplementary charge in respect of ring fence trade) is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F203.1">Box 82 can only be present in an original return if the CT600I (Supplementary charge in respect of ring fence trade) is 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F093.6">9343</sch:diagnostic>
    <sch:diagnostic id="transactional.F093.6">Box 83 must be completed if the "Short" return flag does not equal 'yes' and Box 82 is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F093.6">Box 83 must be completed if the "Short" return flag does not equal 'yes' and Box 82 is present</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F093.6">Mae’n rhaid cwblhau Blwch 83 os nad yw’r faner ffurflen dreth “Fer” yn hafal a ‘ie’ ac mae Blwch 82 yn bresennol</sch:diagnostic>
    <sch:diagnostic id="errorCode.F093.2">9344</sch:diagnostic>
    <sch:diagnostic id="transactional.F093.2">If Box 78 is absent Box 83 must equal Box 70 minus Box 77 plus (the sum of Boxes 79, 81 and 82)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F093.2">If Box 78 is absent Box 83 must equal Box 70 minus Box 77 plus (the sum of Boxes 79, 81 and 82)</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F093.2">Os yw Blwch 78 yn absennol, rhaid i Flwch 83 fod yn hafal a Blwch 70 llai Blwch 77 plws (swm Blychau 79, 81 a 82)</sch:diagnostic>
    <sch:diagnostic id="errorCode.F055.1">9345</sch:diagnostic>
    <sch:diagnostic id="transactional.F055.1">If Box 83 is present Box 85 must equal Box 84 minus Box 83.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F055.1">If Box 83 is present Box 85 must equal Box 84 minus Box 83.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F055.1">Os yw Blwch 83 yn bresennol, rhaid i Flwch 85 fod yn hafal a Blwch 84 llai Blwch 83</sch:diagnostic>
    <sch:diagnostic id="errorCode.F055.2">9346</sch:diagnostic>
    <sch:diagnostic id="transactional.F055.2">If Box 83 is absent then Box 85 must equal Box 84 plus Box 77 minus (the sum of Box 70, 79, 81 and 82 )</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F055.2">If Box 83 is absent then Box 85 must equal Box 84 plus Box 77 minus (the sum of Box 70, 79, 81 and 82 )</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F055.2">Os yw Blwch 83 yn absennol, rhaid i Flwch 85 fod yn hafal a Blwch 84 plws Blwch 77 llai (swm Blychau 70, 79, 81 a 82)</sch:diagnostic>
    <sch:diagnostic id="errorCode.F163.0">9347</sch:diagnostic>
    <sch:diagnostic id="transactional.F163.0">If Box 83 is present Box 86 must equal Box 83 minus Box 84, where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F163.0">If Box 83 is present Box 86 must equal Box 83 minus Box 84, where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F163.0">Os yw Blwch 83 yn bresennol, rhaid i Flwch 86 fod yn hafal a Blwch 83 llai Blwch 84, lle mae’r canlyniad yn hafal a, neu’n fwy na, 0 (sero). Os yw’r canlyniad yn negyddol, nodwch 0 (sero)</sch:diagnostic>
    <sch:diagnostic id="errorCode.F163.1">9348</sch:diagnostic>
    <sch:diagnostic id="transactional.F163.1">If Box 83 is absent then Box 86 must equal (the sum of Boxes 70, 79, 81 and 82) minus (the sum of Box 84 plus Box 77 ), where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F163.1">If Box 83 is absent then Box 86 must equal (the sum of Boxes 70, 79, 81 and 82) minus (the sum of Box 84 plus Box 77 ), where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F163.1">Os yw Blwch 83 yn bresennol, rhaid i Flwch 86 fod yn hafal a (swm Blychau 70, 79, 81 ac 82) llai (swm Blychau 84 plws Blwch 77), lle mae’r canlyniad yn hafal a, neu’n fwy na, 0 (sero). Os yw’r canlyniad yn negyddol, nodwch 0 (sero)</sch:diagnostic>
    <sch:diagnostic id="errorCode.F179.1">9258</sch:diagnostic>
    <sch:diagnostic id="transactional.F179.1">Box 87 can only be completed if the period 'To' date is on or after 01/04/2000.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F179.1">Box 87 can only be completed if the period 'To' date is on or after 01/04/2000.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F179.1">Box 87 can only be completed if the period 'To' date is on or after 01/04/2000.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F184.1">9259</sch:diagnostic>
    <sch:diagnostic id="transactional.F184.1">Box 88 can only be completed if the period 'To' date is on or after 01/04/2001.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F184.1">Box 88 can only be completed if the period 'To' date is on or after 01/04/2001.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F184.1">Box 88 can only be completed if the period 'To' date is on or after 01/04/2001.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F814.0">9260</sch:diagnostic>
    <sch:diagnostic id="transactional.F814.0">Box 170 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F814.0">Box 170 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F814.0">Box 170 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F180.0">9261</sch:diagnostic>
    <sch:diagnostic id="transactional.F180.0">Box 89 must equal Box 87 minus Box 86 where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F180.0">Box 89 must equal Box 87 minus Box 86 where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F180.0">Box 89 must equal Box 87 minus Box 86 where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F180.3">9262</sch:diagnostic>
    <sch:diagnostic id="transactional.F180.3">Box 89 can only be completed if the period 'To' date is on or after 01/04/2000.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F180.3">Box 89 can only be completed if the period 'To' date is on or after 01/04/2000.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F180.3">Box 89 can only be completed if the period 'To' date is on or after 01/04/2000.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F185.0">9263</sch:diagnostic>
    <sch:diagnostic id="transactional.F185.0">Box 90 must equal (the sum of Box 87 plus Box 88) minus (the sum of Box 86 plus Box 89) where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F185.0">Box 90 must equal (the sum of Box 87 plus Box 88) minus (the sum of Box 86 plus Box 89) where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F185.0">Box 90 must equal (the sum of Box 87 plus Box 88) minus (the sum of Box 86 plus Box 89) where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F185.3">9264</sch:diagnostic>
    <sch:diagnostic id="transactional.F185.3">Box 90 must not be greater than Box 88.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F185.3">Box 90 must not be greater than Box 88.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F185.3">Box 90 must not be greater than Box 88.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F185.4">9265</sch:diagnostic>
    <sch:diagnostic id="transactional.F185.4">Box 90 can only be completed if the period 'To' date is on or after 01/04/2001.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F185.4">Box 90 can only be completed if the period 'To' date is on or after 01/04/2001.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F185.4">Box 90 can only be completed if the period 'To' date is on or after 01/04/2001.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F815.0">9266</sch:diagnostic>
    <sch:diagnostic id="transactional.F815.0">Box 171 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F815.0">Box 171 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F815.0">Box 171 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F815.1">9267</sch:diagnostic>
    <sch:diagnostic id="transactional.F815.1">Box 171 must not be greater than Box 170.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F815.1">Box 171 must not be greater than Box 170.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F815.1">Box 171 must not be greater than Box 170.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F815.2">9268</sch:diagnostic>
    <sch:diagnostic id="transactional.F815.2">Box 171 must equal (the sum of Boxes 87, 88 and 170) minus (the sum of Boxes 86, 89 and 90) where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F815.2">Box 171 must equal (the sum of Boxes 87, 88 and 170) minus (the sum of Boxes 86, 89 and 90) where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F815.2">Box 171 must equal (the sum of Boxes 87, 88 and 170) minus (the sum of Boxes 86, 89 and 90) where the result is equal to or greater than 0 (zero). If the result is negative please enter 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F221.1">9269</sch:diagnostic>
    <sch:diagnostic id="transactional.F221.1">If the return type is 'New' and Box I10 is present then Box 161 must be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F221.1">If the return type is 'New' and Box I10 is present then Box 161 must be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F221.1">If the return type is 'New' and Box I10 is present then Box 161 must be completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F221.2">9270</sch:diagnostic>
    <sch:diagnostic id="transactional.F221.2">Box 161 must not be greater than Box 86.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F221.2">Box 161 must not be greater than Box 86.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F221.2">Box 161 must not be greater than Box 86.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F221.3">9271</sch:diagnostic>
    <sch:diagnostic id="transactional.F221.3">If Box 161 is completed and return type is 'New' then Box I10 must be completed and equal to Box 161.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F221.3">If Box 161 is completed and return type is 'New' then Box I10 must be completed and equal to Box 161.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F221.3">If Box 161 is completed and return type is 'New' then Box I10 must be completed and equal to Box 161.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F227.1">9272</sch:diagnostic>
    <sch:diagnostic id="transactional.F227.1">Box 166 must not be greater than Box 82.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F227.1">Box 166 must not be greater than Box 82.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F227.1">Box 166 must not be greater than Box 82.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F227.0">9273</sch:diagnostic>
    <sch:diagnostic id="transactional.F227.0">If the return type is 'New' and Box I11 is completed then Box 166 must also be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F227.0">If the return type is 'New' and Box I11 is completed then Box 166 must also be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F227.0">If the return type is 'New' and Box I11 is completed then Box 166 must also be completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F227.3">9274</sch:diagnostic>
    <sch:diagnostic id="transactional.F227.3">If Box 166 is completed and return type is 'New' then Box I11 must be completed and equal to Box 166.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F227.3">If Box 166 is completed and return type is 'New' then Box I11 must be completed and equal to Box 166.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F227.3">If Box 166 is completed and return type is 'New' then Box I11 must be completed and equal to Box 166.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N059b.0">9275</sch:diagnostic>
    <sch:diagnostic id="transactional.N059b.0">Only one of Boxes 92 and 93 can be completed unless both are zero (0). </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N059b.0">Only one of Boxes 92 and 93 can be completed unless both are zero (0). </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N059b.0">Dim ond un o Flychau 92 a 93 y gellir eu cwblhau heblaw bod y ddau yn 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F060.0">9276</sch:diagnostic>
    <sch:diagnostic id="transactional.F060.0">Box 92 must equal Box 86 minus (the sum of Boxes 87, 88, 170 and 91) where the result is equal to or greater than 0 (zero). If the result is negative Box 92 must not be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F060.0">Box 92 must equal Box 86 minus (the sum of Boxes 87, 88, 170 and 91) where the result is equal to or greater than 0 (zero). If the result is negative Box 92 must not be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F060.0">Mae’n rhaid i Flwch 92 fod yn hafal a Blwch 86 llai (swm Blychau 87, 88, 170 a 91) lle mae’r canlyniad yn hafal a, neu’n fwy na, 0 (sero). Os yw’r canlyniad yn negatif, ni ddylid cwblhau Blwch 92.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F061.0">9277</sch:diagnostic>
    <sch:diagnostic id="transactional.F061.0">Box 93 must equal (the sum of Boxes 87, 88, 170 and 91) minus Box 86 where the result is equal to or greater than 0 (zero). If the result is negative Box 93 must not be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F061.0">Box 93 must equal (the sum of Boxes 87, 88, 170 and 91) minus Box 86 where the result is equal to or greater than 0 (zero). If the result is negative Box 93 must not be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F061.0">Mae’n rhaid i Flwch 93 fod yn hafal a (swm Blychau 87, 88, 170 a 91) llai Blwch 86 lle mae’r canlyniad yn hafal a, neu’n fwy na, 0 (sero). Os yw’r canlyniad yn negatif ni ddylid cwblhau Blwch 93.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F228.2">9279</sch:diagnostic>
    <sch:diagnostic id="transactional.F228.2">Box 167 can only be 'Yes' if Box 101 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F228.2">Box 167 can only be 'Yes' if Box 101 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F228.2">Box 167 can only be 'Yes' if Box 101 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F228.3">9280</sch:diagnostic>
    <sch:diagnostic id="transactional.F228.3">Box 167 can only be 'Yes' if the period 'To' date is on or after the 01/04/2006.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F228.3">Box 167 can only be 'Yes' if the period 'To' date is on or after the 01/04/2006.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F228.3">Box 167 can only be 'Yes' if the period 'To' date is on or after the 01/04/2006.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F204.1">9281</sch:diagnostic>
    <sch:diagnostic id="transactional.F204.1">Box 99 can only be 'Yes' if at least one of the boxes 101, 102 or 103 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F204.1">Box 99 can only be 'Yes' if at least one of the boxes 101, 102 or 103 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F204.1">Box 99 can only be 'Yes' if at least one of the boxes 101, 102 or 103 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F204.0">9282</sch:diagnostic>
    <sch:diagnostic id="transactional.F204.0">Box 99 must not be 'Yes' if Box 100 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F204.0">Box 99 must not be 'Yes' if Box 100 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F204.0">Box 99 must not be 'Yes' if Box 100 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F205.0">9283</sch:diagnostic>
    <sch:diagnostic id="transactional.F205.0">Box 100 can only be 'Yes' if at least one of the boxes 101 or 103 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F205.0">Box 100 can only be 'Yes' if at least one of the boxes 101 or 103 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F205.0">Box 100 can only be 'Yes' if at least one of the boxes 101 or 103 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F205.3">9284</sch:diagnostic>
    <sch:diagnostic id="transactional.F205.3">Box 100 must not be 'Yes' if Box 99 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F205.3">Box 100 must not be 'Yes' if Box 99 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F205.3">Box 100 must not be 'Yes' if Box 99 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F181.1">9285</sch:diagnostic>
    <sch:diagnostic id="transactional.F181.1">If Box 101 is completed then at least one of the boxes 167, 99 or 100 should be 'Yes'. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F181.1">If Box 101 is completed then at least one of the boxes 167, 99 or 100 should be 'Yes'. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F181.1">If Box 101 is completed then at least one of the boxes 167, 99 or 100 should be 'Yes'. </sch:diagnostic>
    <sch:diagnostic id="errorCode.F206.1">9286</sch:diagnostic>
    <sch:diagnostic id="transactional.F206.1">Box 103 can only be completed if Box 99 or Box 100 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F206.1">Box 103 can only be completed if Box 99 or Box 100 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F206.1">Box 103 can only be completed if Box 99 or Box 100 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F207.1">9287</sch:diagnostic>
    <sch:diagnostic id="transactional.F207.1">Box 102 can only be completed if Boxes 99 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F207.1">Box 102 can only be completed if Boxes 99 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F207.1">Box 102 can only be completed if Boxes 99 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N062.1">9288</sch:diagnostic>
    <sch:diagnostic id="transactional.N062.1">The sum of Box 172 and Box 173 must not exceed the apportioned AIA limit.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N062.1">The sum of Box 172 and Box 173 must not exceed the apportioned AIA limit.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N062.1">Ni ddylai swm Blwch 172 a Blwch 173 fod yn uwch na’r terfyn AIA a ddosrannwyd.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F816.0">9289</sch:diagnostic>
    <sch:diagnostic id="transactional.F816.0">Box 172 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F816.0">Box 172 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F816.0">Gellir ond cwblhau Blwch 172 os yw dyddiad ‘I’ y cyfnod ar neu ar ol 01/04/2008.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F817.0">9290</sch:diagnostic>
    <sch:diagnostic id="transactional.F817.0">Box 173 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F817.0">Box 173 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F817.0">Gellir ond cwblhau Blwch 173 os yw dyddiad ‘I’ y cyfnod ar neu ar ol 01/04/2008.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F182.1">9291</sch:diagnostic>
    <sch:diagnostic id="transactional.F182.1">Box 117 can only be 'Yes' if Box 115 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F182.1">Box 117 can only be 'Yes' if Box 115 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F182.1">Gall Blwch 117 ond bod yn ‘Ie’ os yw Blwch 115 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F210.1">9292</sch:diagnostic>
    <sch:diagnostic id="transactional.F210.1">Box 119 can only be 'Yes' if the period 'To' date is on or before 31/03/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F210.1">Box 119 can only be 'Yes' if the period 'To' date is on or before 31/03/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F210.1">Box 119 can only be 'Yes' if the period 'To' date is on or before 31/03/2008.</sch:diagnostic>
    <sch:diagnostic id="errorCode.F210.2">9293</sch:diagnostic>
    <sch:diagnostic id="transactional.F210.2">Box 119 can only be 'Yes' if Box 118 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F210.2">Box 119 can only be 'Yes' if Box 118 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F210.2">Box 119 can only be 'Yes' if Box 118 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.F818.0">9294</sch:diagnostic>
    <sch:diagnostic id="transactional.F818.0">Box 174 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.F818.0">Box 174 can only be completed if the period 'To' date is on or after 01/04/2008.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.F818.0">Gellir ond cwblhau Blwch 174 os yw dyddiad ‘I’ y cyfnod ar neu ar ol 01/04/2008.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SurrenderMaximum.1">9952</sch:diagnostic>
    <sch:diagnostic id="transactional.SurrenderMaximum.1">The 'Maximum available for surrender as group relief' is completed so the amount 'Arising' must be greater than zero.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SurrenderMaximum.1">The 'Maximum available for surrender as group relief' is completed so the amount 'Arising' must be greater than zero.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SurrenderMaximum.2">9953</sch:diagnostic>
    <sch:diagnostic id="transactional.SurrenderMaximum.2">The 'Maximum available for surrender as group relief' must not be greater than the amount 'Arising'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SurrenderMaximum.2">The 'Maximum available for surrender as group relief' must not be greater than the amount 'Arising'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SurrenderMaximum.1.0">9952</sch:diagnostic>
    <sch:diagnostic id="transactional.SurrenderMaximum.1.0">The 'Maximum available for surrender as group relief' is completed so the amount 'Arising' must be greater than zero.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SurrenderMaximum.1.0">The 'Maximum available for surrender as group relief' is completed so the amount 'Arising' must be greater than zero.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SurrenderMaximum.2.0">9953</sch:diagnostic>
    <sch:diagnostic id="transactional.SurrenderMaximum.2.0">The 'Maximum available for surrender as group relief' must not be greater than the amount 'Arising'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SurrenderMaximum.2.0">The 'Maximum available for surrender as group relief' must not be greater than the amount 'Arising'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SurrenderMaximum.1.1">9952</sch:diagnostic>
    <sch:diagnostic id="transactional.SurrenderMaximum.1.1">The 'Maximum available for surrender as group relief' is completed so the amount 'Arising' must be greater than zero.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SurrenderMaximum.1.1">The 'Maximum available for surrender as group relief' is completed so the amount 'Arising' must be greater than zero.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SurrenderMaximum.2.1">9953</sch:diagnostic>
    <sch:diagnostic id="transactional.SurrenderMaximum.2.1">The 'Maximum available for surrender as group relief' must not be greater than the amount 'Arising'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SurrenderMaximum.2.1">The 'Maximum available for surrender as group relief' must not be greater than the amount 'Arising'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SurrenderMaximum.1.2">9952</sch:diagnostic>
    <sch:diagnostic id="transactional.SurrenderMaximum.1.2">The 'Maximum available for surrender as group relief' is completed so the amount 'Arising' must be greater than zero.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SurrenderMaximum.1.2">The 'Maximum available for surrender as group relief' is completed so the amount 'Arising' must be greater than zero.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SurrenderMaximum.2.2">9953</sch:diagnostic>
    <sch:diagnostic id="transactional.SurrenderMaximum.2.2">The 'Maximum available for surrender as group relief' must not be greater than the amount 'Arising'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SurrenderMaximum.2.2">The 'Maximum available for surrender as group relief' must not be greater than the amount 'Arising'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SurrenderMaximum.1.3">9952</sch:diagnostic>
    <sch:diagnostic id="transactional.SurrenderMaximum.1.3">The 'Maximum available for surrender as group relief' is completed so the amount 'Arising' must be greater than zero.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SurrenderMaximum.1.3">The 'Maximum available for surrender as group relief' is completed so the amount 'Arising' must be greater than zero.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SurrenderMaximum.2.3">9953</sch:diagnostic>
    <sch:diagnostic id="transactional.SurrenderMaximum.2.3">The 'Maximum available for surrender as group relief' must not be greater than the amount 'Arising'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SurrenderMaximum.2.3">The 'Maximum available for surrender as group relief' must not be greater than the amount 'Arising'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N070.1">9296</sch:diagnostic>
    <sch:diagnostic id="transactional.N070.1">Box 142 must equal Box 85.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N070.1">Box 142 must equal Box 85.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N070.1">Box 142 must equal Box 85.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N072.1">9299</sch:diagnostic>
    <sch:diagnostic id="transactional.N072.1">Box 167 must be 'Yes' as there is an entry in Box 168.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N072.1">Box 167 must be 'Yes' as there is an entry in Box 168.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N072.1">Box 167 must be 'Yes' as there is an entry in Box 168.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N072.2">9300</sch:diagnostic>
    <sch:diagnostic id="transactional.N072.2">Box 168 must not exceed Box 89</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N072.2">Box 168 must not exceed Box 89</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N072.2">Rhaid i Flwch 168 beidio â bod yn fwy na Blwch 89</sch:diagnostic>
    <sch:diagnostic id="errorCode.N073.0">9301</sch:diagnostic>
    <sch:diagnostic id="transactional.N073.0">Box 144 must equal Box 90.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N073.0">Box 144 must equal Box 90.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N073.0">Box 144 must equal Box 90.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N074.0">9302</sch:diagnostic>
    <sch:diagnostic id="transactional.N074.0">Box 175 must equal Box 171.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N074.0">Box 175 must equal Box 171.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N074.0">Box 175 must equal Box 171.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N078.1">9303</sch:diagnostic>
    <sch:diagnostic id="transactional.N078.1">You must attach the 'Joint Notice' as Box 146 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N078.1">You must attach the 'Joint Notice' as Box 146 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N078.1">You must attach the 'Joint Notice' as Box 146 is 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N080.1">9304</sch:diagnostic>
    <sch:diagnostic id="transactional.N080.1">Box 148 must not be greater than Box 145.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N080.1">Box 148 must not be greater than Box 145.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N080.1">Box 148 must not be greater than Box 145.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N095.0">9305</sch:diagnostic>
    <sch:diagnostic id="transactional.N095.0">A CT600A is present so 'CT600A (Loans to Participators by Close Companies)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N095.0">A CT600A is present so 'CT600A (Loans to Participators by Close Companies)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N095.0">Mae CT600A yn bresennol felly mae’n rhaid i ‘CT600A (Benthyciadau i Gyfranogwyr gan Gwmniau Cau)’ fod yn ‘Ie’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.LOAN.0">9400</sch:diagnostic>
    <sch:diagnostic id="transactional.LOAN.0">The maximum number of loans has been exceeded.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.LOAN.0">The maximum number of loans has been exceeded.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.LOAN.0">Aed yn uwch nag uchafswm nifer y benthyciadau.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA012.0">9401</sch:diagnostic>
    <sch:diagnostic id="transactional.SA012.0">Box A2 must equal the sum of all 'Amount of loan' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA012.0">Box A2 must equal the sum of all 'Amount of loan' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA012.0">Mae’n rhaid i Flwch A2 fod yn hafal a chyfanswm yr holl symiau ‘Swm y benthyciad’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA014.0">9402</sch:diagnostic>
    <sch:diagnostic id="transactional.SA014.0">Box A3 must equal Box A2 multiplied by [25%].</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA014.0">Box A3 must equal Box A2 multiplied by [25%].</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA014.0">Mae’n rhaid i Flwch A3 fod yn hafal a Blwch A2 wedi ei luosi a [25%].</sch:diagnostic>
    <sch:diagnostic id="errorCode.LOAN2.1">9403</sch:diagnostic>
    <sch:diagnostic id="transactional.LOAN2.1">The maximum number of loans has been exceeded.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.LOAN2.1">The maximum number of loans has been exceeded.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.LOAN2.1">Aed yn uwch nag uchafswm nifer y benthyciadau.</sch:diagnostic>
    <sch:diagnostic id="errorCode.LOAN2.2">9404</sch:diagnostic>
    <sch:diagnostic id="transactional.LOAN2.2">At least one of 'Amount repaid' or 'Amount released or written off' must be greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.LOAN2.2">At least one of 'Amount repaid' or 'Amount released or written off' must be greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.LOAN2.2">Mae’n rhaid i o leiaf un o ‘Swm a ad-dalwyd’ neu ‘Swm a ryddhawyd neu a ddiddymwyd’ fod yn uwch na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.LOAN2.0">9405</sch:diagnostic>
    <sch:diagnostic id="transactional.LOAN2.0">'Relief for amounts repaid released or written off' can only be claimed where 'Loans made during the return period' is completed. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.LOAN2.0">'Relief for amounts repaid released or written off' can only be claimed where 'Loans made during the return period' is completed. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.LOAN2.0">Gellir hawlio ‘Rhyddhad ar gyfer symiau a ad-dalwyd neu a ddiddymwyd’ dim ond lle cwblheir ‘Benthyciadau a wnaed yn ystod cyfnod y ffurflen dreth’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA018.0">9406</sch:diagnostic>
    <sch:diagnostic id="transactional.SA018.0">The 'Date of repayment release or write off' must not be be later than the period 'To' date plus nine months.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA018.0">The 'Date of repayment release or write off' must not be be later than the period 'To' date plus nine months.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA018.0">Ni ddylai’r ‘Dyddiad ad-dalu, rhyddhau neu ddiddymu’ fod yn hwyrach na dyddiad ‘I’ y cyfnod plws naw mis.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA039.0">9407</sch:diagnostic>
    <sch:diagnostic id="transactional.SA039.0">Box A4 must equal the sum of all 'Amount repaid' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA039.0">Box A4 must equal the sum of all 'Amount repaid' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA039.0">Mae’n rhaid i Flwch A4 fod yn hafal a chyfanswm yr holl symiau ‘Swm a ad-dalwyd’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA040.0">9408</sch:diagnostic>
    <sch:diagnostic id="transactional.SA040.0">Box A5 must equal the sum of all 'Amount released or written off' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA040.0">Box A5 must equal the sum of all 'Amount released or written off' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA040.0">Mae’n rhaid i Flwch A5 fod yn hafal a chyfanswm yr holl symiau ‘Swm a ryddhawyd neu a ddiddymwyd’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA042.0">9409</sch:diagnostic>
    <sch:diagnostic id="transactional.SA042.0">Box A6 must equal the sum of Boxes A4 and A5.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA042.0">Box A6 must equal the sum of Boxes A4 and A5.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA042.0">Mae’n rhaid i Flwch A6 fod yn hafal a swm Blychau A4 ac A5.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA043.0">9410</sch:diagnostic>
    <sch:diagnostic id="transactional.SA043.0">Box A7 must equal Box A6 multiplied by [25%].</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA043.0">Box A7 must equal Box A6 multiplied by [25%].</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA043.0">Mae’n rhaid i Flwch A7 fod yn hafal a Blwch A6 wedi ei luosi a [25%].</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA043.1">9411</sch:diagnostic>
    <sch:diagnostic id="transactional.SA043.1">Box A7 must be less than or equal to Box A3.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA043.1">Box A7 must be less than or equal to Box A3.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA043.1">Mae’n rhaid i Flwch A7 fod yn llai na, neu’n hafal a, Blwch A3. </sch:diagnostic>
    <sch:diagnostic id="errorCode.SECTION3CHECK.0">9412</sch:diagnostic>
    <sch:diagnostic id="transactional.SECTION3CHECK.0">'Relief for amounts repaid released or written off' can only be claimed where 'Loans made during the return period' is completed. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SECTION3CHECK.0">'Relief for amounts repaid released or written off' can only be claimed where 'Loans made during the return period' is completed. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SECTION3CHECK.0">Gellir hawlio ‘Rhyddhad ar gyfer symiau a ad-dalwyd neu a ddiddymwyd’ dim ond lle cwblheir ‘Benthyciadau a wnaed yn ystod cyfnod y ffurflen dreth’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.LOANLATERRELIEFNOW.0">9413</sch:diagnostic>
    <sch:diagnostic id="transactional.LOANLATERRELIEFNOW.0">Relief for amounts repaid released or written off more than nine months after the end of the period' can only be completed if the return is being submitted more than nine months after the end of the period in which the loan was repaid released or written off. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.LOANLATERRELIEFNOW.0">Relief for amounts repaid released or written off more than nine months after the end of the period' can only be completed if the return is being submitted more than nine months after the end of the period in which the loan was repaid released or written off. </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.LOANLATERRELIEFNOW.0">Gellir ond cwblhau ‘Rhyddhad ar gyfer symiau a ad-dalwyd, a ryddhawyd neu a ddiddymwyd mwy na naw mis ar ol diwedd y cyfnod’ pe cyflwynir y ffurflen dreth mwy na naw mis ar ol diwedd y cyfnod pan gafodd y benthyciad ei ad-dalu, ei ryddhau neu ei ddiddymu.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA045.0">9414</sch:diagnostic>
    <sch:diagnostic id="transactional.SA045.0">The 'End date of the Accounting period in which the loan was repaid released or written off' must not be earlier than the period 'To' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA045.0">The 'End date of the Accounting period in which the loan was repaid released or written off' must not be earlier than the period 'To' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA045.0">Ni ddylai ‘Dyddiad diwedd y cyfnod Cyfrifyddu pan gafodd y benthyciad ei ad-dalu, ei ryddhau neu ei ddiddymu’ fod yn gynharach na dyddiad ‘I’ y cyfnod.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA045.1">9415</sch:diagnostic>
    <sch:diagnostic id="transactional.SA045.1">The 'End date of the Accounting period in which the loan was repaid released or written off' must be earlier than the date of submission.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA045.1">The 'End date of the Accounting period in which the loan was repaid released or written off' must be earlier than the date of submission.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA045.1">Mae’n rhaid i ‘Dyddiad diwedd y cyfnod Cyfrifyddu pan gafodd y benthyciad ei ad-dalu, ei ryddhau neu ei ddiddymu’ fod yn gynharach na’r dyddiad cyflwyno.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA046.0">9416</sch:diagnostic>
    <sch:diagnostic id="transactional.SA046.0">This date must be exactly nine months after the end of the Accounting period in which the loan was repaid released or written off.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA046.0">This date must be exactly nine months after the end of the Accounting period in which the loan was repaid released or written off.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA046.0">Mae’n rhaid i’r dyddiad hwn fod yn union naw mis ar ol diwedd y cyfnod Cyfrifyddu pan gafodd y benthyciad ei ad-dalu, ei ryddhau neu ei ddiddymu.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA047.1">9417</sch:diagnostic>
    <sch:diagnostic id="transactional.SA047.1">The 'Date return sent' must not be later than today's date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA047.1">The 'Date return sent' must not be later than today's date.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA047.1">Ni ddylai’r ‘Dyddiad yr anfonwyd y ffurflen dreth’ fod yn hwyrach na dyddiad heddiw.</sch:diagnostic>
    <sch:diagnostic id="errorCode.LOAN3.0">9418</sch:diagnostic>
    <sch:diagnostic id="transactional.LOAN3.0">The maximum number of loans has been exceeded.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.LOAN3.0">The maximum number of loans has been exceeded.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.LOAN3.0">Aed yn uwch nag uchafswm nifer y benthyciadau.</sch:diagnostic>
    <sch:diagnostic id="errorCode.LOAN3.1">9419</sch:diagnostic>
    <sch:diagnostic id="transactional.LOAN3.1">At least one of 'Amount repaid' or 'Amount released or written off' must be greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.LOAN3.1">At least one of 'Amount repaid' or 'Amount released or written off' must be greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.LOAN3.1">Mae’n rhaid i o leiaf un o ‘Swm a ad-dalwyd’ neu ‘Swm a ryddhawyd neu a ddiddymwyd’ fod yn uwch na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA051.0">9420</sch:diagnostic>
    <sch:diagnostic id="transactional.SA051.0">The 'Date of repayment release or write off' must not be be later than the end of the Accounting period in which the loan was repaid released or written off </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA051.0">The 'Date of repayment release or write off' must not be be later than the end of the Accounting period in which the loan was repaid released or written off </sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA051.0">Mae’n rhaid i'r ‘Dyddiad ad-dalu, rhyddhau neu ddiddymu’ fod erbyn diwedd y cyfnod Cyfrifyddu fan pellaf, pan gafodd y benthyciad ei ad-dalu, ei ryddhau neu ei ddiddymu.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA072.0">9421</sch:diagnostic>
    <sch:diagnostic id="transactional.SA072.0">Box A8 must equal the sum of all 'Amount repaid' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA072.0">Box A8 must equal the sum of all 'Amount repaid' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA072.0">Mae’n rhaid i Flwch A8 fod yn hafal a chyfanswm yr holl symiau ‘Swm a ad-dalwyd’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA073.0">9422</sch:diagnostic>
    <sch:diagnostic id="transactional.SA073.0">Box A8 must equal the sum of all 'Amount released or written off' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA073.0">Box A8 must equal the sum of all 'Amount released or written off' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA073.0">Mae’n rhaid i Flwch A8 fod yn hafal a chyfanswm yr holl symiau ‘Swm a ryddhawyd neu a ddiddymwyd’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA075.0">9423</sch:diagnostic>
    <sch:diagnostic id="transactional.SA075.0">Box A10 must equal the sum of Boxes A8 and A9.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA075.0">Box A10 must equal the sum of Boxes A8 and A9.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA075.0">Mae’n rhaid i Flwch A10 fod yn hafal a swm Blychau A8 ac A9.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA076.0">9424</sch:diagnostic>
    <sch:diagnostic id="transactional.SA076.0">Box A11 must equal Box A10 multiplied by [25%].</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA076.0">Box A11 must equal Box A10 multiplied by [25%].</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA076.0">Mae’n rhaid i Flwch A11 fod yn hafal a Blwch A10 wedi ei luosi a [25%].</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA076.1">9425</sch:diagnostic>
    <sch:diagnostic id="transactional.SA076.1">Box A11 must be less than or equal to Box A3.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA076.1">Box A11 must be less than or equal to Box A3.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA076.1">Mae’n rhaid i Flwch A11 fod yn llai na, neu’n hafal a, Blwch A3.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA076.2">9426</sch:diagnostic>
    <sch:diagnostic id="transactional.SA076.2">Box A11 is completed therefore Box 80 must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA076.2">Box A11 is completed therefore Box 80 must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA076.2">Mae Blwch A11 wedi ei gwblhau, felly mae’n rhaid i Flwch 80 fod yn ‘Ie’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA078.0">9427</sch:diagnostic>
    <sch:diagnostic id="transactional.SA078.0">Box A13 must equal Box A3 minus (the sum of Boxes A7 and A11).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA078.0">Box A13 must equal Box A3 minus (the sum of Boxes A7 and A11).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA078.0">Mae’n rhaid i Flwch A13 fod yn hafal a Blwch A3 llai (swm Blychau A7 ac A11).</sch:diagnostic>
    <sch:diagnostic id="errorCode.SA078.1">9428</sch:diagnostic>
    <sch:diagnostic id="transactional.SA078.1">Box A13 must equal Box 79.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SA078.1">Box A13 must equal Box 79.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SA078.1">Mae’n rhaid i Flwch A13 fod yn hafal a Blwch 79.</sch:diagnostic>
    <sch:diagnostic id="errorCode.CT600B.0">9450</sch:diagnostic>
    <sch:diagnostic id="transactional.CT600B.0">The 'Tax on chargeable profits' total must be present if the sum of all the 'Tax on chargeable profits' is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CT600B.0">The 'Tax on chargeable profits' total must be present if the sum of all the 'Tax on chargeable profits' is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.CT600B.1">9451</sch:diagnostic>
    <sch:diagnostic id="transactional.CT600B.1">The 'Creditable tax' total must be present if the sum of all the entries in 'Creditable tax' is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CT600B.1">The 'Creditable tax' total must be present if the sum of all the entries in 'Creditable tax' is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.CT600B.2">9452</sch:diagnostic>
    <sch:diagnostic id="transactional.CT600B.2">The 'Reliefs in terms of tax' total must be present if the sum of all the entries in 'Reliefs in terms of tax' is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CT600B.2">The 'Reliefs in terms of tax' total must be present if the sum of all the entries in 'Reliefs in terms of tax' is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.CT600B.3">9453</sch:diagnostic>
    <sch:diagnostic id="transactional.CT600B.3">The 'ACT as restricted' total must be present if the sum of all the entries in 'ACT as restricted' is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CT600B.3">The 'ACT as restricted' total must be present if the sum of all the entries in 'ACT as restricted' is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.CT600B.4">9454</sch:diagnostic>
    <sch:diagnostic id="transactional.CT600B.4">The 'S747 tax chargeable' total must be present if any of the 'Chargeable profits', 'Tax on chargeable profits', 'Creditable tax', 'Reliefs in terms of tax' and 'ACT as restricted' are completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CT600B.4">The 'S747 tax chargeable' total must be present if any of the 'Chargeable profits', 'Tax on chargeable profits', 'Creditable tax', 'Reliefs in terms of tax' and 'ACT as restricted' are completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.CT600B.5">9462</sch:diagnostic>
    <sch:diagnostic id="transactional.CT600B.5">Supplementary page CT600B is present so 'Company Information' or 'Bank Levy' must be present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CT600B.5">Supplementary page CT600B is present so 'Company Information' or 'Bank Levy' must be present</sch:diagnostic>
    <sch:diagnostic id="errorCode.N096.0">9306</sch:diagnostic>
    <sch:diagnostic id="transactional.N096.0">A CT600B is present so 'CT600B (Controlled Foreign Companies)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N096.0">A CT600B is present so 'CT600B (Controlled Foreign Companies)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N096.0">A CT600B is present so 'CT600B (Controlled Foreign Companies)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SB010.0">9455</sch:diagnostic>
    <sch:diagnostic id="transactional.SB010.0">The 'S747 tax chargeable' total must equal the sum of 'Tax on chargeable profits' minus the sum of 'Creditable tax', 'Reliefs in terms of tax' and 'ACT as restricted'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SB010.0">The 'S747 tax chargeable' total must equal the sum of 'Tax on chargeable profits' minus the sum of 'Creditable tax', 'Reliefs in terms of tax' and 'ACT as restricted'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SB121.0">9456</sch:diagnostic>
    <sch:diagnostic id="transactional.SB121.0">The 'Tax on chargeable profits' total must equal the sum of all the 'Tax on chargeable profits' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SB121.0">The 'Tax on chargeable profits' total must equal the sum of all the 'Tax on chargeable profits' amounts.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SB122.0">9457</sch:diagnostic>
    <sch:diagnostic id="transactional.SB122.0">The 'Creditable tax' total must equal the sum of all the 'Creditable tax' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SB122.0">The 'Creditable tax' total must equal the sum of all the 'Creditable tax' amounts.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SB123.0">9458</sch:diagnostic>
    <sch:diagnostic id="transactional.SB123.0">The 'Reliefs in terms of tax' total must equal the sum of all the 'Reliefs in terms of tax' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SB123.0">The 'Reliefs in terms of tax' total must equal the sum of all the 'Reliefs in terms of tax' amounts.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SB124.0">9459</sch:diagnostic>
    <sch:diagnostic id="transactional.SB124.0">The 'ACT as restricted' total must equal the sum of all the 'ACT as restricted' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SB124.0">The 'ACT as restricted' total must equal the sum of all the 'ACT as restricted' amounts.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SB125.1">9463</sch:diagnostic>
    <sch:diagnostic id="transactional.SB125.1">The 'S747 tax chargeable' total must equal the sum of all the 'S747 tax chargeable' amounts plus the amount of 'Bank Levy'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SB125.1">The 'S747 tax chargeable' total must equal the sum of all the 'S747 tax chargeable' amounts plus the amount of 'Bank Levy'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SB125.0">9461</sch:diagnostic>
    <sch:diagnostic id="transactional.SB125.0">The 'S747 tax chargeable' total is completed therefore Box 81 must be present and equal to the 'S747 tax chargeable' total.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SB125.0">The 'S747 tax chargeable' total is completed therefore Box 81 must be present and equal to the 'S747 tax chargeable' total.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SB125.2">9464</sch:diagnostic>
    <sch:diagnostic id="transactional.SB125.2">The 'S747 tax chargeable' total must not be less than amount of 'Bank Levy'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SB125.2">The 'S747 tax chargeable' total must not be less than amount of 'Bank Levy'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N097.0">9307</sch:diagnostic>
    <sch:diagnostic id="transactional.N097.0">A CT600C is present so 'CT600C (Group and Consortium)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N097.0">A CT600C is present so 'CT600C (Group and Consortium)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N097.0">A CT600C is present so 'CT600C (Group and Consortium)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.GROUPANDCONSORTIUM.0">9500</sch:diagnostic>
    <sch:diagnostic id="transactional.GROUPANDCONSORTIUM.0">CT600C can only be present if at least one of 'Claims to group relief', 'Amounts surrendered as group relief', 'Claims to EUFT' or 'Amounts of EUFT' is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.GROUPANDCONSORTIUM.0">CT600C can only be present if at least one of 'Claims to group relief', 'Amounts surrendered as group relief', 'Claims to EUFT' or 'Amounts of EUFT' is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.CLAIMTOGROUPRELIEF.0">9518</sch:diagnostic>
    <sch:diagnostic id="transactional.CLAIMTOGROUPRELIEF.0">Claim authorisation' must be present if return type is 'new' and there is a claim to group relief</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CLAIMTOGROUPRELIEF.0">Claim authorisation' must be present if return type is 'new' and there is a claim to group relief</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC002.1">9501</sch:diagnostic>
    <sch:diagnostic id="transactional.SC002.1">The start and end dates of the Accounting period of the surrendering company can only be completed where the period is different from that covered by the return.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC002.1">The start and end dates of the Accounting period of the surrendering company can only be completed where the period is different from that covered by the return.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC002.2">9502</sch:diagnostic>
    <sch:diagnostic id="transactional.SC002.2">The Accounting period of the surrendering company 'From' date must be on or before the period covered by the return 'To' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC002.2">The Accounting period of the surrendering company 'From' date must be on or before the period covered by the return 'To' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC002.3">9503</sch:diagnostic>
    <sch:diagnostic id="transactional.SC002.3">The Accounting period of the surrendering company must not be longer than 12 months.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC002.3">The Accounting period of the surrendering company must not be longer than 12 months.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC002.4">9504</sch:diagnostic>
    <sch:diagnostic id="transactional.SC002.4">The Accounting period of the surrendering company 'To' date must not be before the Accounting period of the surrendering company 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC002.4">The Accounting period of the surrendering company 'To' date must not be before the Accounting period of the surrendering company 'From' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC002.5">9505</sch:diagnostic>
    <sch:diagnostic id="transactional.SC002.5">The Accounting period of the surrendering company 'To' date must be on or after the period covered by the return 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC002.5">The Accounting period of the surrendering company 'To' date must be on or after the period covered by the return 'From' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC021.0">9506</sch:diagnostic>
    <sch:diagnostic id="transactional.SC021.0">Box 36 must be completed and equal to Box C1.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC021.0">Box 36 must be completed and equal to Box C1.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC021.1">9507</sch:diagnostic>
    <sch:diagnostic id="transactional.SC021.1">Box C1 must equal the sum of Claims to group relief 'Amount Claimed'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC021.1">Box C1 must equal the sum of Claims to group relief 'Amount Claimed'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC160.0">9508</sch:diagnostic>
    <sch:diagnostic id="transactional.SC160.0">Claims to group relief 'Claim authorisation' must be completed if 'Simplified arrangement in force' is present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC160.0">Claims to group relief 'Claim authorisation' must be completed if 'Simplified arrangement in force' is present.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC160.1">9972</sch:diagnostic>
    <sch:diagnostic id="transactional.SC160.1">If 'Simplified arrangement in force' is present then C1 must be greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC160.1">If 'Simplified arrangement in force' is present then C1 must be greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC161.1">9510</sch:diagnostic>
    <sch:diagnostic id="transactional.SC161.1">If 'Copy of notices of consent' are completed then a PDF attachment of type 'Other' must be present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC161.1">If 'Copy of notices of consent' are completed then a PDF attachment of type 'Other' must be present.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC161.2">9973</sch:diagnostic>
    <sch:diagnostic id="transactional.SC161.2">If 'Copy of notices of consent' is present then C1 must be greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC161.2">If 'Copy of notices of consent' is present then C1 must be greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC032.0">9511</sch:diagnostic>
    <sch:diagnostic id="transactional.SC032.0">Amounts surrendered as group relief 'Surrender as group relief total' must equal the sum of 'Trading losses', 'Excess non-trade capital allowances over income from which they are primarily deductible', Non-trading deficit on loan relationships', 'Non-trading losses on intangible fixed assets', 'Excess charges over profits', 'Excess of Schedule A losses over profits', and 'Excess of management expenses over profits'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC032.0">Amounts surrendered as group relief 'Surrender as group relief total' must equal the sum of 'Trading losses', 'Excess non-trade capital allowances over income from which they are primarily deductible', Non-trading deficit on loan relationships', 'Non-trading losses on intangible fixed assets', 'Excess charges over profits', 'Excess of Schedule A losses over profits', and 'Excess of management expenses over profits'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC034.0">9512</sch:diagnostic>
    <sch:diagnostic id="transactional.SC034.0">The start and end dates of the Accounting period of the claimant company can only be completed where the period is different from that covered by the return.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC034.0">The start and end dates of the Accounting period of the claimant company can only be completed where the period is different from that covered by the return.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC034.2">9513</sch:diagnostic>
    <sch:diagnostic id="transactional.SC034.2">The Details of surrender Accounting period of claimant company 'From' date must be on or before the return period 'To' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC034.2">The Details of surrender Accounting period of claimant company 'From' date must be on or before the return period 'To' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC034.3">9514</sch:diagnostic>
    <sch:diagnostic id="transactional.SC034.3">The Details of surrender Accounting period of claimant company must not be longer than 12 months.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC034.3">The Details of surrender Accounting period of claimant company must not be longer than 12 months.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC034.4">9515</sch:diagnostic>
    <sch:diagnostic id="transactional.SC034.4">The Details of surrender Accounting period of claimant company 'To' date must not be before the Details of surrender Accounting period of claimant company 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC034.4">The Details of surrender Accounting period of claimant company 'To' date must not be before the Details of surrender Accounting period of claimant company 'From' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC034.5">9516</sch:diagnostic>
    <sch:diagnostic id="transactional.SC034.5">The Details of surrender Accounting period of claimant company 'To' date must be on or after the return period 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC034.5">The Details of surrender Accounting period of claimant company 'To' date must be on or after the return period 'From' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC061.1">9517</sch:diagnostic>
    <sch:diagnostic id="transactional.SC061.1">C2 must equal the sum of the Details of surrender 'Amount surrendered'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC061.1">C2 must equal the sum of the Details of surrender 'Amount surrendered'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC150.0">9974</sch:diagnostic>
    <sch:diagnostic id="transactional.SC150.0">If 'Simplified arrangement in force' is present then C1 must be greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC150.0">If 'Simplified arrangement in force' is present then C1 must be greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC151.0">9519</sch:diagnostic>
    <sch:diagnostic id="transactional.SC151.0">Amounts surrendered as group relief 'Declaration' must be completed if 'Notices of consent' is present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC151.0">Amounts surrendered as group relief 'Declaration' must be completed if 'Notices of consent' is present.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC151.3">9961</sch:diagnostic>
    <sch:diagnostic id="transactional.SC151.3">Notice of consent completed' must not be 'Yes' if 'Copy of notices of consent attached' is 'Yes'</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC151.3">Notice of consent completed' must not be 'Yes' if 'Copy of notices of consent attached' is 'Yes'</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC151.4">9975</sch:diagnostic>
    <sch:diagnostic id="transactional.SC151.4">If 'Notice of consent' is 'Yes'  then C2 must be greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC151.4">If 'Notice of consent' is 'Yes'  then C2 must be greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC152.0">9521</sch:diagnostic>
    <sch:diagnostic id="transactional.SC152.0">Copies of notices of consent' must not be present if Amounts surrendered as group relief 'Declaration' is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC152.0">Copies of notices of consent' must not be present if Amounts surrendered as group relief 'Declaration' is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC152.1">9522</sch:diagnostic>
    <sch:diagnostic id="transactional.SC152.1">If amounts surrendered of group relief 'Copies of notices of consent' is 'Yes' then a PDF attachment of type 'Other' must be present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC152.1">If amounts surrendered of group relief 'Copies of notices of consent' is 'Yes' then a PDF attachment of type 'Other' must be present.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC152.2">9976</sch:diagnostic>
    <sch:diagnostic id="transactional.SC152.2">If 'Copies of notices of consent' is 'Yes' then C2 must be greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC152.2">If 'Copies of notices of consent' is 'Yes' then C2 must be greater than 0 (zero)</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC153.0">9523</sch:diagnostic>
    <sch:diagnostic id="transactional.SC153.0">Details of company surrendering relief 'Company name' must match the return 'Company name'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC153.0">Details of company surrendering relief 'Company name' must match the return 'Company name'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC154.0">9543</sch:diagnostic>
    <sch:diagnostic id="transactional.SC154.0">Tax reference of the company surrendering relief' must equal the return 'Tax reference'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC154.0">Tax reference of the company surrendering relief' must equal the return 'Tax reference'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC155.1">9524</sch:diagnostic>
    <sch:diagnostic id="transactional.SC155.1">Details of company surrendering relief Accounting period must match the Accounting period of the return.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC155.1">Details of company surrendering relief Accounting period must match the Accounting period of the return.</sch:diagnostic>
    <sch:diagnostic id="errorCode.EUFTCLAIMED.1">9962</sch:diagnostic>
    <sch:diagnostic id="transactional.EUFTCLAIMED.1">If return type is 'New' and' EUFT claimed' is present then a PDF attachment of type 'Other' must be present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EUFTCLAIMED.1">If return type is 'New' and' EUFT claimed' is present then a PDF attachment of type 'Other' must be present.</sch:diagnostic>
    <sch:diagnostic id="errorCode.COMPANY3.0">9525</sch:diagnostic>
    <sch:diagnostic id="transactional.COMPANY3.0">EUFT notice of consent' must be present if return type is 'new' and EUFT is claimed</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.COMPANY3.0">EUFT notice of consent' must be present if return type is 'new' and EUFT is claimed</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC064.1">9526</sch:diagnostic>
    <sch:diagnostic id="transactional.SC064.1">The start and end dates of the Accounting period of the surrendering company can only be completed where the period is different from that covered by the return.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC064.1">The start and end dates of the Accounting period of the surrendering company can only be completed where the period is different from that covered by the return.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC064.2">9527</sch:diagnostic>
    <sch:diagnostic id="transactional.SC064.2">Accounting period of surrendering company start date must be on or before the return period 'To' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC064.2">Accounting period of surrendering company start date must be on or before the return period 'To' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC064.3">9528</sch:diagnostic>
    <sch:diagnostic id="transactional.SC064.3">Accounting period of surrendering company must not be longer than 12 months.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC064.3">Accounting period of surrendering company must not be longer than 12 months.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC064.4">9529</sch:diagnostic>
    <sch:diagnostic id="transactional.SC064.4">Accounting period of surrendering company 'End' date must be on or after the return period 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC064.4">Accounting period of surrendering company 'End' date must be on or after the return period 'From' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC064.5">9530</sch:diagnostic>
    <sch:diagnostic id="transactional.SC064.5">The details of company surrendering Accounting period 'End' date must be on or after the return period 'From' date. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC064.5">The details of company surrendering Accounting period 'End' date must be on or after the return period 'From' date. </sch:diagnostic>
    <sch:diagnostic id="errorCode.SC064.6">9977</sch:diagnostic>
    <sch:diagnostic id="transactional.SC064.6">The details of company surrendering Accounting period 'End' date must be on or before the return period 'To' date. </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC064.6">The details of company surrendering Accounting period 'End' date must be on or before the return period 'To' date. </sch:diagnostic>
    <sch:diagnostic id="errorCode.SC091.1">9531</sch:diagnostic>
    <sch:diagnostic id="transactional.SC091.1">Box C3 must equal the sum of Claims to EUFT 'Amount claimed' total.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC091.1">Box C3 must equal the sum of Claims to EUFT 'Amount claimed' total.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC094.0">9532</sch:diagnostic>
    <sch:diagnostic id="transactional.SC094.0">The start and end dates of the Accounting period of the claimant company can only be completed where the period is different from that covered by the return.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC094.0">The start and end dates of the Accounting period of the claimant company can only be completed where the period is different from that covered by the return.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC094.2">9533</sch:diagnostic>
    <sch:diagnostic id="transactional.SC094.2">Claims to EUFT Accounting period 'From' date must be on or before the return period 'To' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC094.2">Claims to EUFT Accounting period 'From' date must be on or before the return period 'To' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC094.3">9534</sch:diagnostic>
    <sch:diagnostic id="transactional.SC094.3">Claims to EUFT Accounting period of surrendering company must not be longer than 12 months.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC094.3">Claims to EUFT Accounting period of surrendering company must not be longer than 12 months.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC094.4">9535</sch:diagnostic>
    <sch:diagnostic id="transactional.SC094.4">Claims to EUFT Accounting period of surrendering company 'To' date must not be before the Accounting period of surrendering company 'From' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC094.4">Claims to EUFT Accounting period of surrendering company 'To' date must not be before the Accounting period of surrendering company 'From' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC094.5">9536</sch:diagnostic>
    <sch:diagnostic id="transactional.SC094.5">Accounting period of claimant company 'End' date must be on or after the return period 'To' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC094.5">Accounting period of claimant company 'End' date must be on or after the return period 'To' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SC094.5">Rhaid i ddyddiad 'Diwedd' cyfnod cyfrifyddu'r cwmni sy’n hawlio fod ar neu ar ôl dyddiad ‘I’ cyfnod Ffurflen Dreth y Cwmni</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC121.1">9537</sch:diagnostic>
    <sch:diagnostic id="transactional.SC121.1">Box C4 must equal the sum of Amounts of EUFT 'Amount surrendered'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC121.1">Box C4 must equal the sum of Amounts of EUFT 'Amount surrendered'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC180.0">9538</sch:diagnostic>
    <sch:diagnostic id="transactional.SC180.0">Amounts of EUFT surrendered 'Notice of consent' is present so the Amounts of EUFT surrendered 'Declaration' must be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC180.0">Amounts of EUFT surrendered 'Notice of consent' is present so the Amounts of EUFT surrendered 'Declaration' must be completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC181.0">9539</sch:diagnostic>
    <sch:diagnostic id="transactional.SC181.0">Copy of notice of consent' must not be present if Amounts of EUFT surrendered 'Declaration' is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC181.0">Copy of notice of consent' must not be present if Amounts of EUFT surrendered 'Declaration' is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC181.1">9540</sch:diagnostic>
    <sch:diagnostic id="transactional.SC181.1">If 'Copy of notices of consent' are present then a PDF attachment of type 'Other' must be present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC181.1">If 'Copy of notices of consent' are present then a PDF attachment of type 'Other' must be present.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC182.0">9541</sch:diagnostic>
    <sch:diagnostic id="transactional.SC182.0">Details of company surrendering EUFT 'Company name' must match the return 'Company name'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC182.0">Details of company surrendering EUFT 'Company name' must match the return 'Company name'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC183.0">9544</sch:diagnostic>
    <sch:diagnostic id="transactional.SC183.0">Tax reference of the company surrendering EUFT' must equal the return 'Tax reference'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC183.0">Tax reference of the company surrendering EUFT' must equal the return 'Tax reference'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SC184.1">9542</sch:diagnostic>
    <sch:diagnostic id="transactional.SC184.1">Details of company surrendering EUFT Accounting period must match the Accounting period of the return.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SC184.1">Details of company surrendering EUFT Accounting period must match the Accounting period of the return.</sch:diagnostic>
    <sch:diagnostic id="errorCode.CT600D.0">9550</sch:diagnostic>
    <sch:diagnostic id="transactional.CT600D.0">Either 'In year repayments' or 'Overseas life assurance business declaration' must be submitted.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CT600D.0">Either 'In year repayments' or 'Overseas life assurance business declaration' must be submitted.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N098.0">9308</sch:diagnostic>
    <sch:diagnostic id="transactional.N098.0">A CT600D is present so 'CT600D (Insurance)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N098.0">A CT600D is present so 'CT600D (Insurance)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N098.0">A CT600D is present so 'CT600D (Insurance)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.INYEARREPAYMENTS.1">9551</sch:diagnostic>
    <sch:diagnostic id="transactional.INYEARREPAYMENTS.1">Box D16 must be completed if Box D3 is greater than Box D15.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.INYEARREPAYMENTS.1">Box D16 must be completed if Box D3 is greater than Box D15.</sch:diagnostic>
    <sch:diagnostic id="errorCode.INYEARREPAYMENTS.2">9552</sch:diagnostic>
    <sch:diagnostic id="transactional.INYEARREPAYMENTS.2">Boxes D1, D2 and D3 can only be completed if the period covered by the return 'From' date is on or before 05/04/2004.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.INYEARREPAYMENTS.2">Boxes D1, D2 and D3 can only be completed if the period covered by the return 'From' date is on or before 05/04/2004.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SCHEDULE19AB.0">9553</sch:diagnostic>
    <sch:diagnostic id="transactional.SCHEDULE19AB.0">Box D1 or Box D2 must be completed if 'Repayments under schedule 19AB' is present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SCHEDULE19AB.0">Box D1 or Box D2 must be completed if 'Repayments under schedule 19AB' is present.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD003.0">9554</sch:diagnostic>
    <sch:diagnostic id="transactional.SD003.0">Box D13 must be completed if Box D2 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD003.0">Box D13 must be completed if Box D2 is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD003.1">9555</sch:diagnostic>
    <sch:diagnostic id="transactional.SD003.1">Box D2 can only be submitted if the return period 'From' date is on or before 31/03/1999.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD003.1">Box D2 can only be submitted if the return period 'From' date is on or before 31/03/1999.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD004.0">9556</sch:diagnostic>
    <sch:diagnostic id="transactional.SD004.0">Box D3 must equal Box D1 plus Box D2.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD004.0">Box D3 must equal Box D1 plus Box D2.</sch:diagnostic>
    <sch:diagnostic id="errorCode.GILTS.0">9557</sch:diagnostic>
    <sch:diagnostic id="transactional.GILTS.0">Box D4 or Box D5 must be completed if 'Gilts' is present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.GILTS.0">Box D4 or Box D5 must be completed if 'Gilts' is present.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD005.0">9558</sch:diagnostic>
    <sch:diagnostic id="transactional.SD005.0">Box D4 can only be submitted if the return period 'From' date is on or before 31/03/1999.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD005.0">Box D4 can only be submitted if the return period 'From' date is on or before 31/03/1999.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD006.0">9559</sch:diagnostic>
    <sch:diagnostic id="transactional.SD006.0">Box D5 can only be submitted if the return period 'From' date is on or before 31/03/1999.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD006.0">Box D5 can only be submitted if the return period 'From' date is on or before 31/03/1999.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD007.0">9560</sch:diagnostic>
    <sch:diagnostic id="transactional.SD007.0">Box D6 must equal Box D4 plus Box D5.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD007.0">Box D6 must equal Box D4 plus Box D5.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD010.0">9561</sch:diagnostic>
    <sch:diagnostic id="transactional.SD010.0">Box D9 must equal the sum of Boxes D6, D7 and D8.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD010.0">Box D9 must equal the sum of Boxes D6, D7 and D8.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD010.1">9562</sch:diagnostic>
    <sch:diagnostic id="transactional.SD010.1">Box D13 must be completed if Box D9 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD010.1">Box D13 must be completed if Box D9 is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD011.0">9563</sch:diagnostic>
    <sch:diagnostic id="transactional.SD011.0">Box D13 must be completed if Box D10 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD011.0">Box D13 must be completed if Box D10 is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD012.0">9564</sch:diagnostic>
    <sch:diagnostic id="transactional.SD012.0">Box D13 must be completed if Box D11 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD012.0">Box D13 must be completed if Box D11 is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD013.0">9565</sch:diagnostic>
    <sch:diagnostic id="transactional.SD013.0">Box D13 must be completed if Box D12 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD013.0">Box D13 must be completed if Box D12 is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.RELEVANTCREDITS.0">9566</sch:diagnostic>
    <sch:diagnostic id="transactional.RELEVANTCREDITS.0">Box D13 or Box D14 must be completed if 'Relevant Credits' is present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.RELEVANTCREDITS.0">Box D13 or Box D14 must be completed if 'Relevant Credits' is present.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD014.0">9567</sch:diagnostic>
    <sch:diagnostic id="transactional.SD014.0">Box D13 must equal the lower of Box D9 or (Box D2 plus Box D10) minus (Box D11 plus Box D12), but cannot be less than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD014.0">Box D13 must equal the lower of Box D9 or (Box D2 plus Box D10) minus (Box D11 plus Box D12), but cannot be less than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD014.1">9568</sch:diagnostic>
    <sch:diagnostic id="transactional.SD014.1">If the sum of (Box D2 plus Box D10) minus the sum of (Box D11 and Box D12) is not positive, then Box D13 must be (0) zero or absent.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD014.1">If the sum of (Box D2 plus Box D10) minus the sum of (Box D11 and Box D12) is not positive, then Box D13 must be (0) zero or absent.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD016.0">9569</sch:diagnostic>
    <sch:diagnostic id="transactional.SD016.0">Box D15 must equal Box D13 plus Box D14.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD016.0">Box D15 must equal Box D13 plus Box D14.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SD017.0">9570</sch:diagnostic>
    <sch:diagnostic id="transactional.SD017.0">Box D16 must equal Box D3 minus Box D15 if this sum is positive. Otherwise, Box D16 must equal 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SD017.0">Box D16 must equal Box D3 minus Box D15 if this sum is positive. Otherwise, Box D16 must equal 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.N099.0">9309</sch:diagnostic>
    <sch:diagnostic id="transactional.N099.0">A CT600E is present so 'CT600E (Charities and Community Amateur Sports Clubs)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N099.0">A CT600E is present so 'CT600E (Charities and Community Amateur Sports Clubs)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N099.0">Mae CT600E yn bresennol felly mae’n rhaid i ‘CT600E (Elusennau a Chlybiau Chwaraeon Amatur Cymunedol)’ fod yn ‘Ie’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.STATUS.1">9600</sch:diagnostic>
    <sch:diagnostic id="transactional.STATUS.1">At least one of the 'Claims to exemption' boxes must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.STATUS.1">At least one of the 'Claims to exemption' boxes must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.STATUS.1">Mae’n rhaid i o leiaf un o’r blychau ‘Cais am eithriad’ fod yn ‘Ie’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.REPAYMENTS.0">9601</sch:diagnostic>
    <sch:diagnostic id="transactional.REPAYMENTS.0">Box E3 must be completed if Box E2 is greater than Box E1.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.REPAYMENTS.0">Box E3 must be completed if Box E2 is greater than Box E1.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.REPAYMENTS.0">Mae’n rhaid i flwch E3 gael ei gwblhau os yw Blwch E2 yn fwy na Blwch E1.</sch:diagnostic>
    <sch:diagnostic id="errorCode.REPAYMENTS.1">9602</sch:diagnostic>
    <sch:diagnostic id="transactional.REPAYMENTS.1">Box E3c must be completed if Box E2b is greater than Box E1a.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.REPAYMENTS.1">Box E3c must be completed if Box E2b is greater than Box E1a.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.REPAYMENTS.1">Mae’n rhaid i flwch E3c gael ei gwblhau os yw Blwch E2b yn fwy na Blwch E1a.</sch:diagnostic>
    <sch:diagnostic id="errorCode.REPAYMENTS.2">9603</sch:diagnostic>
    <sch:diagnostic id="transactional.REPAYMENTS.2">Box E4 must be completed if Box E1 is greater than Box E2.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.REPAYMENTS.2">Box E4 must be completed if Box E1 is greater than Box E2.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.REPAYMENTS.2">Mae’n rhaid i flwch E4 gael ei gwblhau os yw Blwch E1 yn fwy na Blwch E2.</sch:diagnostic>
    <sch:diagnostic id="errorCode.REPAYMENTS.3">9604</sch:diagnostic>
    <sch:diagnostic id="transactional.REPAYMENTS.3">Box E4d must be completed if Box E1a is greater than Box E2b.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.REPAYMENTS.3">Box E4d must be completed if Box E1a is greater than Box E2b.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.REPAYMENTS.3">Mae’n rhaid i flwch E4d gael ei gwblhau os yw Blwch E1a yn fwy na Blwch E2b.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SE008.0">9605</sch:diagnostic>
    <sch:diagnostic id="transactional.SE008.0">If 'Total repayment or payment due' is completed either 'Further repayments or payment due' or 'Amounts overclaimed for period' must also be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SE008.0">If 'Total repayment or payment due' is completed either 'Further repayments or payment due' or 'Amounts overclaimed for period' must also be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SE008.0">Pe cwblheir ‘Cyfanswm yr ad-daliad neu'r taliad sy'n ddyledus’, rhaid cwblhau naill ai ‘Ad-daliadau neu daliadau pellach sy'n ddyledus’ neu ‘Symiau a or-hawliwyd am y cyfnod’ hefyd.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SE010.0">9606</sch:diagnostic>
    <sch:diagnostic id="transactional.SE010.0">Box E3 must not be completed if Box E2 is less than Box E1.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SE010.0">Box E3 must not be completed if Box E2 is less than Box E1.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SE010.0">Ni ddylid cwblhau Blwch E3 os yw Blwch E2 yn llai na Blwch E1.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SE011.0">9607</sch:diagnostic>
    <sch:diagnostic id="transactional.SE011.0">Box E3c must not be completed if Box E2b is less than Box E1a.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SE011.0">Box E3c must not be completed if Box E2b is less than Box E1a.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SE011.0">Ni ddylid cwblhau Blwch E3c os yw Blwch E2b yn llai na Blwch E1a.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SE012.0">9608</sch:diagnostic>
    <sch:diagnostic id="transactional.SE012.0">Box E4 must not be completed if Box E1 is less than Box E2.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SE012.0">Box E4 must not be completed if Box E1 is less than Box E2.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SE012.0">Ni ddylid cwblhau blwch E4 os yw Blwch E1 yn llai na Blwch E2.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SE013.0">9609</sch:diagnostic>
    <sch:diagnostic id="transactional.SE013.0">Box E4d must not be completed if Box E1a is less than Box E2b.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SE013.0">Box E4d must not be completed if Box E1a is less than Box E2b.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SE013.0">Ni ddylid cwblhau blwch E4d os yw Blwch E1a yn llai na Blwch E2b.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SE042.1">9610</sch:diagnostic>
    <sch:diagnostic id="transactional.SE042.1">E3 E3c Included amounts' can only be 'Yes' if either Box E3 or Box E3c is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SE042.1">E3 E3c Included amounts' can only be 'Yes' if either Box E3 or Box E3c is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SE042.1">Gall ‘E3 E3c Symiau Cynwysedig’ ond fod yn ‘Ie’ pe cwblheir naill ai Blwch E3 neu Flwch E3c.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SE023.0">9611</sch:diagnostic>
    <sch:diagnostic id="transactional.SE023.0">Box E14 can only be completed if Box E5 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SE023.0">Box E14 can only be completed if Box E5 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SE023.0">Gellir ond cwblhau Blwch E14 os yw Blwch E5 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.SE024.0">9612</sch:diagnostic>
    <sch:diagnostic id="transactional.SE024.0">Box E15 can only be completed if Box E7 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SE024.0">Box E15 can only be completed if Box E7 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SE024.0">Gellir ond cwblhau Blwch E15 os yw Blwch E7 yn fwy na 0 (sero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.SE039.1">9613</sch:diagnostic>
    <sch:diagnostic id="transactional.SE039.1">Box E26 must not be 'Yes' if Box E27 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SE039.1">Box E26 must not be 'Yes' if Box E27 is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SE039.1">Ni ddylai Blwch E26 fod yn ‘Ie’ pe cwblheir Blwch E27.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N100.0">9310</sch:diagnostic>
    <sch:diagnostic id="transactional.N100.0">A CT600F is present so 'CT600F (Tonnage tax)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N100.0">A CT600F is present so 'CT600F (Tonnage tax)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N100.0">A CT600F is present so 'CT600F (Tonnage tax)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TONNAGETAX.0">9650</sch:diagnostic>
    <sch:diagnostic id="transactional.TONNAGETAX.0">Form CT600F can only be present if at least one of 'Computation of tonnage tax profits' or 'Relevant shipping profits' is completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TONNAGETAX.0">Form CT600F can only be present if at least one of 'Computation of tonnage tax profits' or 'Relevant shipping profits' is completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SF001.1">9651</sch:diagnostic>
    <sch:diagnostic id="transactional.SF001.1">If the company was a party to a tonnage tax group election, the name of the tonnage tax group of which the company was a member must be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SF001.1">If the company was a party to a tonnage tax group election, the name of the tonnage tax group of which the company was a member must be completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SF001.2">9652</sch:diagnostic>
    <sch:diagnostic id="transactional.SF001.2">If the company was a party to a tonnage tax group election, the company must indicate whether the group met the 75% limit on chartered-in tonnage.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SF001.2">If the company was a party to a tonnage tax group election, the company must indicate whether the group met the 75% limit on chartered-in tonnage.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SF003.1">9653</sch:diagnostic>
    <sch:diagnostic id="transactional.SF003.1">The name of tonnage tax group must not be completed if the company was not a party to a tonnage tax group election.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SF003.1">The name of tonnage tax group must not be completed if the company was not a party to a tonnage tax group election.</sch:diagnostic>
    <sch:diagnostic id="errorCode.REPRESENTATIVECOMPANY.0">9654</sch:diagnostic>
    <sch:diagnostic id="transactional.REPRESENTATIVECOMPANY.0">Name of representative company must not be completed if the company was not a party to a tonnage tax group election.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.REPRESENTATIVECOMPANY.0">Name of representative company must not be completed if the company was not a party to a tonnage tax group election.</sch:diagnostic>
    <sch:diagnostic id="errorCode.REPRESENTATIVECOMPANY.1">9655</sch:diagnostic>
    <sch:diagnostic id="transactional.REPRESENTATIVECOMPANY.1">If the company was a party to a tonnage tax group election, enter either the 'Name' and 'Tax Reference' of the representative company or indicate that this is 'Not Applicable'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.REPRESENTATIVECOMPANY.1">If the company was a party to a tonnage tax group election, enter either the 'Name' and 'Tax Reference' of the representative company or indicate that this is 'Not Applicable'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SF009.1">9656</sch:diagnostic>
    <sch:diagnostic id="transactional.SF009.1">If the company was a party to a tonnage tax group election then it must indicate that the company meeting the 75% limit on chartered-in tonnage is 'Not Applicable'</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SF009.1">If the company was a party to a tonnage tax group election then it must indicate that the company meeting the 75% limit on chartered-in tonnage is 'Not Applicable'</sch:diagnostic>
    <sch:diagnostic id="errorCode.SF012.1">9657</sch:diagnostic>
    <sch:diagnostic id="transactional.SF012.1">If this company was not the representative company where there was a tonnage tax group arrangement, the group meeting the 75% limit on chartered-in tonnage must be 'Not Applicable'</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SF012.1">If this company was not the representative company where there was a tonnage tax group arrangement, the group meeting the 75% limit on chartered-in tonnage must be 'Not Applicable'</sch:diagnostic>
    <sch:diagnostic id="errorCode.SF012.2">9658</sch:diagnostic>
    <sch:diagnostic id="transactional.SF012.2">If this company was the representative company, then it must indicate that the group meeting the 75% limit on chartered-in tonnage is 'Yes' or 'No' </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SF012.2">If this company was the representative company, then it must indicate that the group meeting the 75% limit on chartered-in tonnage is 'Yes' or 'No' </sch:diagnostic>
    <sch:diagnostic id="errorCode.SF012.3">9659</sch:diagnostic>
    <sch:diagnostic id="transactional.SF012.3">The group meeting the 75% limit on chartered-in tonnage must not be completed if the company was not a party to a tonnage tax group election.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SF012.3">The group meeting the 75% limit on chartered-in tonnage must not be completed if the company was not a party to a tonnage tax group election.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SF015.0">9660</sch:diagnostic>
    <sch:diagnostic id="transactional.SF015.0">Offshore training allowance' must be completed if the company is subject to the special rules for offshore activities.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SF015.0">Offshore training allowance' must be completed if the company is subject to the special rules for offshore activities.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SF062.1">9663</sch:diagnostic>
    <sch:diagnostic id="transactional.SF062.1">Box F10 must equal the sum of  all the 'Tonnage tax profits' amounts rounded down to the nearest whole pound.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SF062.1">Box F10 must equal the sum of  all the 'Tonnage tax profits' amounts rounded down to the nearest whole pound.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N101.0">9311</sch:diagnostic>
    <sch:diagnostic id="transactional.N101.0">A CT600G is present so 'CT600G (Corporate Venturing Scheme)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N101.0">A CT600G is present so 'CT600G (Corporate Venturing Scheme)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N101.0">A CT600G is present so 'CT600G (Corporate Venturing Scheme)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.CORPORATEVENTURINGSCHEME.0">9700</sch:diagnostic>
    <sch:diagnostic id="transactional.CORPORATEVENTURINGSCHEME.0">A CT600G 'Corporate venturing scheme' is present so 'Investment Relief' or 'Relief for losses on disposal of shares' or 'Deferral relief' must be completed.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CORPORATEVENTURINGSCHEME.0">A CT600G 'Corporate venturing scheme' is present so 'Investment Relief' or 'Relief for losses on disposal of shares' or 'Deferral relief' must be completed.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG004.0">9701</sch:diagnostic>
    <sch:diagnostic id="transactional.SG004.0">Investment relief 'Date of issue (given on form CVS 3)' must be on or after 01/04/2000.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG004.0">Investment relief 'Date of issue (given on form CVS 3)' must be on or after 01/04/2000.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG004.1">9702</sch:diagnostic>
    <sch:diagnostic id="transactional.SG004.1">Investment relief 'Date of issue (given on form CVS 3)' must be on or before 31/03/2010.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG004.1">Investment relief 'Date of issue (given on form CVS 3)' must be on or before 31/03/2010.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG036.0">9703</sch:diagnostic>
    <sch:diagnostic id="transactional.SG036.0">If Box G1 is completed, Box 71 must be completed and equal to Box G1.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG036.0">If Box G1 is completed, Box 71 must be completed and equal to Box G1.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG036.1">9704</sch:diagnostic>
    <sch:diagnostic id="transactional.SG036.1">Box G1 must equal the sum of 'Amount of investment relief claimed net of any reduction for value received' amounts.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG036.1">Box G1 must equal the sum of 'Amount of investment relief claimed net of any reduction for value received' amounts.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG040.0">9705</sch:diagnostic>
    <sch:diagnostic id="transactional.SG040.0">Relief for losses on disposals of shares 'Date of issue of shares' must be on or after 01/04/2000.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG040.0">Relief for losses on disposals of shares 'Date of issue of shares' must be on or after 01/04/2000.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG040.1">9706</sch:diagnostic>
    <sch:diagnostic id="transactional.SG040.1">Relief for losses on disposals of shares 'Date of issue of shares' must be on or before 31/03/2010.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG040.1">Relief for losses on disposals of shares 'Date of issue of shares' must be on or before 31/03/2010.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG040.2">9707</sch:diagnostic>
    <sch:diagnostic id="transactional.SG040.2">Relief for losses on disposals of shares 'Date of issue of shares' must be on or before Relief for losses on disposals of shares 'Date of disposal of shares'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG040.2">Relief for losses on disposals of shares 'Date of issue of shares' must be on or before Relief for losses on disposals of shares 'Date of disposal of shares'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG041.0">9708</sch:diagnostic>
    <sch:diagnostic id="transactional.SG041.0">Relief for losses on disposals of shares 'Date of disposal of shares' must not be later than the date of submission.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG041.0">Relief for losses on disposals of shares 'Date of disposal of shares' must not be later than the date of submission.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG042.0">9709</sch:diagnostic>
    <sch:diagnostic id="transactional.SG042.0">Relief for losses on disposals of shares Accounting period of claim 'From' date must be on or before the Accounting period of claim 'To' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG042.0">Relief for losses on disposals of shares Accounting period of claim 'From' date must be on or before the Accounting period of claim 'To' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG042.1">9710</sch:diagnostic>
    <sch:diagnostic id="transactional.SG042.1">Relief for losses on disposals of shares Accounting period of claim 'From' date must not be more than 12 months earlier than Relief for losses on disposals of shares Accounting period of claim 'To' date.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG042.1">Relief for losses on disposals of shares Accounting period of claim 'From' date must not be more than 12 months earlier than Relief for losses on disposals of shares Accounting period of claim 'To' date.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG071.0">9711</sch:diagnostic>
    <sch:diagnostic id="transactional.SG071.0">Deferral relief 'Date of disposal or of other chargeable event' must not be later than the date of submission.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG071.0">Deferral relief 'Date of disposal or of other chargeable event' must not be later than the date of submission.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SG074.0">9712</sch:diagnostic>
    <sch:diagnostic id="transactional.SG074.0">Deferral relief 'Date of issue of new qualifying shares' must not be later than the date of submission.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SG074.0">Deferral relief 'Date of issue of new qualifying shares' must not be later than the date of submission.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N102.0">9312</sch:diagnostic>
    <sch:diagnostic id="transactional.N102.0">A CT600H is present so 'CT600H (Cross-border royalties)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N102.0">A CT600H is present so 'CT600H (Cross-border royalties)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N102.0">A CT600H is present so 'CT600H (Cross-border royalties)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SH008.0">9750</sch:diagnostic>
    <sch:diagnostic id="transactional.SH008.0">All 'Amount of tax deducted from payment' amounts, must equal 'Gross Amount of Royalty paid' multiplied by 'Rate of tax deducted from payment' divided by 100, and rounded to the nearest penny (round down for factions less than half a penny, and round up for fractions of half a penny or greater).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SH008.0">All 'Amount of tax deducted from payment' amounts, must equal 'Gross Amount of Royalty paid' multiplied by 'Rate of tax deducted from payment' divided by 100, and rounded to the nearest penny (round down for factions less than half a penny, and round up for fractions of half a penny or greater).</sch:diagnostic>
    <sch:diagnostic id="errorCode.global.5">9800</sch:diagnostic>
    <sch:diagnostic id="transactional.global.5">Box I8 must be completed if Box I7 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.global.5">Box I8 must be completed if Box I7 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.CT600I.0">9801</sch:diagnostic>
    <sch:diagnostic id="transactional.CT600I.0">Box I9 must be completed if CT600I Box B is 'Yes' and Box I1 minus Box I2 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.CT600I.0">Box I9 must be completed if CT600I Box B is 'Yes' and Box I1 minus Box I2 is greater than 0 (zero).</sch:diagnostic>
    <sch:diagnostic id="errorCode.N103.0">9313</sch:diagnostic>
    <sch:diagnostic id="transactional.N103.0">A CT600I is present so 'CT600I (Supplementary charge in respect of ring fence trade)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N103.0">A CT600I is present so 'CT600I (Supplementary charge in respect of ring fence trade)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N103.0">A CT600I is present so 'CT600I (Supplementary charge in respect of ring fence trade)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI006.0">9802</sch:diagnostic>
    <sch:diagnostic id="transactional.SI006.0">Box I4 must equal Box I2 plus Box I3.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI006.0">Box I4 must equal Box I2 plus Box I3.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI007.0">9803</sch:diagnostic>
    <sch:diagnostic id="transactional.SI007.0">If CT600I Box A is 'Yes' Box I5 must equal Box I1 plus Box I4.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI007.0">If CT600I Box A is 'Yes' Box I5 must equal Box I1 plus Box I4.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI007.1">9804</sch:diagnostic>
    <sch:diagnostic id="transactional.SI007.1">If CT600I Box B is 'Yes' Box I5 must equal Box I4 minus Box I1 or 0 (zero) if this is a negative amount.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI007.1">If CT600I Box B is 'Yes' Box I5 must equal Box I4 minus Box I1 or 0 (zero) if this is a negative amount.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI008.0">9805</sch:diagnostic>
    <sch:diagnostic id="transactional.SI008.0">Box I6 must not be greater than Box I5.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI008.0">Box I6 must not be greater than Box I5.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI014.0">9815</sch:diagnostic>
    <sch:diagnostic id="transactional.SI014.0">Box I12 must not be completed if the period 'To' date is on or before the 21/04/2009</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI014.0">Box I12 must not be completed if the period 'To' date is on or before the 21/04/2009</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI014.1">9816</sch:diagnostic>
    <sch:diagnostic id="transactional.SI014.1">Box I12 must not be greater than Box I5 minus Box I6</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI014.1">Box I12 must not be greater than Box I5 minus Box I6</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI009.0">9817</sch:diagnostic>
    <sch:diagnostic id="transactional.SI009.0">Box I7 must equal Box I5 minus (the sum of Boxes I6 and I12)</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI009.0">Box I7 must equal Box I5 minus (the sum of Boxes I6 and I12)</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI010.0">9807</sch:diagnostic>
    <sch:diagnostic id="transactional.SI010.0">Box 82 must be completed and equal to Box I8.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI010.0">Box 82 must be completed and equal to Box I8.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI010.1">9808</sch:diagnostic>
    <sch:diagnostic id="transactional.SI010.1">If the return period 'To' date is on or before 31/12/2008 then Box I8 must equal Box I7 multiplied by 0.1.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI010.1">If the return period 'To' date is on or before 31/12/2008 then Box I8 must equal Box I7 multiplied by 0.1.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI010.2">9809</sch:diagnostic>
    <sch:diagnostic id="transactional.SI010.2">If the return period 'From' date is on or after 01/01/2006 and the return period 'To' date is on or before 23/03/2011 then [I8] must equal [I7] multiplied by 0.2.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI010.2">If the return period 'From' date is on or after 01/01/2006 and the return period 'To' date is on or before 23/03/2011 then [I8] must equal [I7] multiplied by 0.2.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI010.3">9810</sch:diagnostic>
    <sch:diagnostic id="transactional.SI010.3">If the return period 'From' date is on or before 31/12/2005 and the return period 'To' date is on or after 01/01/2006 then part 1 must equal the number of days between the return period 'From' date and 31/12/2005 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive.  Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.1 plus part 2 multiplied by 0.2.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI010.3">If the return period 'From' date is on or before 31/12/2005 and the return period 'To' date is on or after 01/01/2006 then part 1 must equal the number of days between the return period 'From' date and 31/12/2005 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive.  Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.1 plus part 2 multiplied by 0.2.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI010.4">9818</sch:diagnostic>
    <sch:diagnostic id="transactional.SI010.4">If the return period 'From' date is on or after 24/03/2011 and the return period 'To' date is on or before 31/12/2014 then Box I8 must equal Box I7 multiplied by 0.32.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI010.4">If the return period 'From' date is on or after 24/03/2011 and the return period 'To' date is on or before 31/12/2014 then Box I8 must equal Box I7 multiplied by 0.32.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI010.5">9819</sch:diagnostic>
    <sch:diagnostic id="transactional.SI010.5">If the return period 'From' date is on or before 23/03/2011 and the return period 'To' date is on or after 24/03/2011 then part 1 must equal the number of days between the return period 'From' date and 23/03/2011 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive. Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.2 plus part 2 multiplied by 0.32.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI010.5">If the return period 'From' date is on or before 23/03/2011 and the return period 'To' date is on or after 24/03/2011 then part 1 must equal the number of days between the return period 'From' date and 23/03/2011 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive. Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.2 plus part 2 multiplied by 0.32.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI010.6">9820</sch:diagnostic>
    <sch:diagnostic id="transactional.SI010.6">If the return period 'From' date is on or after 01/01/2015 then Box I8 must equal Box I7 multiplied by 0.2</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI010.6">If the return period 'From' date is on or after 01/01/2015 then Box I8 must equal Box I7 multiplied by 0.2</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI010.7">9821</sch:diagnostic>
    <sch:diagnostic id="transactional.SI010.7">If the return period 'From' date is on or before 31/12/2014 and the return period 'To' date is on or after 01/01/2015 then part 1 must equal the number of days between the return period 'From' date and 31/12/2014 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive. Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.32 plus part 2 multiplied by 0.2.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI010.7">If the return period 'From' date is on or before 31/12/2014 and the return period 'To' date is on or after 01/01/2015 then part 1 must equal the number of days between the return period 'From' date and 31/12/2014 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive. Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.32 plus part 2 multiplied by 0.2.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI012.0">9813</sch:diagnostic>
    <sch:diagnostic id="transactional.SI012.0">Box 161 must be completed and equal to Box I10.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI012.0">Box 161 must be completed and equal to Box I10.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SI013.0">9814</sch:diagnostic>
    <sch:diagnostic id="transactional.SI013.0">Box 166 must be completed and equal to Box I11.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SI013.0">Box 166 must be completed and equal to Box I11.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N104.0">9314</sch:diagnostic>
    <sch:diagnostic id="transactional.N104.0">A CT600J is present so 'CT600J (Disclosure of tax avoidance schemes)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N104.0">A CT600J is present so 'CT600J (Disclosure of tax avoidance schemes)' must be 'Yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N104.0">Mae CT600J yn bresennol felly mae’n rhaid i ‘CT600J (Datgelu cynlluniau arbed treth)’ fod yn ‘Ie’.</sch:diagnostic>
    <sch:diagnostic id="errorCode.SJ002.0">9850</sch:diagnostic>
    <sch:diagnostic id="transactional.SJ002.0">The last day of the 'Accounting period in which the expected advantage arises' must be on or after 18/03/2004.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.SJ002.0">The last day of the 'Accounting period in which the expected advantage arises' must be on or after 18/03/2004.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.SJ002.0">Mae’n rhaid i ddyddiad olaf y ‘Cyfnod cyfrifyddu pan gwyd y mantais disgwyliedig’ fod ar neu ar ol 18/03/2004.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N107.1">9315</sch:diagnostic>
    <sch:diagnostic id="transactional.N107.1">If the period 'To' date is on or after 01/04/2010 and the date of submission is on or after 01/04/2011, the Accounts must be submitted in InlineXBRL format.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N107.1">If the period 'To' date is on or after 01/04/2010 and the date of submission is on or after 01/04/2011, the Accounts must be submitted in InlineXBRL format.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N107.1">Os yw dyddiad ‘I’ y cyfnod ar neu ar ol 01/04/2010 a’r dyddiad cyflwyno ar neu ar ol 01/04/2011, rhaid cyflwyno’r Cyfrifon yn y fformat InlineXBRL.</sch:diagnostic>
    <sch:diagnostic id="errorCode.N107.2">9316</sch:diagnostic>
    <sch:diagnostic id="transactional.N107.2">If the period 'To' date is on or after 01/04/2010 and the date of submission is on or after 01/04/2011, the Accounts must be submitted in InlineXBRL format.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.N107.2">If the period 'To' date is on or after 01/04/2010 and the date of submission is on or after 01/04/2011, the Accounts must be submitted in InlineXBRL format.</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.N107.2">Os yw dyddiad ‘I’ y cyfnod ar neu ar ol 01/04/2010 a’r dyddiad cyflwyno ar neu ar ol 01/04/2011, rhaid cyflwyno’r Cyfrifon yn y fformat InlineXBRL.</sch:diagnostic>
    <sch:diagnostic id="errorCode.ENCODEDINLINEXBRLDOCUMENT.1">9900</sch:diagnostic>
    <sch:diagnostic id="transactional.ENCODEDINLINEXBRLDOCUMENT.1">You have tried to submit multi page accounts or computations but have not identified the main or primary page with an Entry Point attribute.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.ENCODEDINLINEXBRLDOCUMENT.1">You have tried to submit multi page accounts or computations but have not identified the main or primary page with an Entry Point attribute.</sch:diagnostic>
    <sch:diagnostic id="errorCode.INLINEXBRLDOCUMENT.1">9901</sch:diagnostic>
    <sch:diagnostic id="transactional.INLINEXBRLDOCUMENT.1">You have tried to submit multi page accounts or computations but have not identified the main or primary page with an Entry Point attribute.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.INLINEXBRLDOCUMENT.1">You have tried to submit multi page accounts or computations but have not identified the main or primary page with an Entry Point attribute.</sch:diagnostic>
    <sch:diagnostic id="errorCode.ENCODEDINLINEXBRLDOCUMENT.2">9970</sch:diagnostic>
    <sch:diagnostic id="transactional.ENCODEDINLINEXBRLDOCUMENT.2">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.ENCODEDINLINEXBRLDOCUMENT.2">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.ENCODEDINLINEXBRLDOCUMENT.2">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic id="errorCode.INLINEXBRLDOCUMENT.2">9970</sch:diagnostic>
    <sch:diagnostic id="transactional.INLINEXBRLDOCUMENT.2">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.INLINEXBRLDOCUMENT.2">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.INLINEXBRLDOCUMENT.2">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic id="errorCode.EXTENSION.0">9902</sch:diagnostic>
    <sch:diagnostic id="transactional.EXTENSION.0">An extension taxonomy must not be provided if raw XBRL is submitted. Please contact your software supplier.  </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EXTENSION.0">An extension taxonomy must not be provided if raw XBRL is submitted. Please contact your software supplier.  </sch:diagnostic>
    <sch:diagnostic id="errorCode.ENCODEDINLINEXBRLDOCUMENT.1.0">9900</sch:diagnostic>
    <sch:diagnostic id="transactional.ENCODEDINLINEXBRLDOCUMENT.1.0">You have tried to submit multi page accounts or computations but have not identified the main or primary page with an Entry Point attribute.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.ENCODEDINLINEXBRLDOCUMENT.1.0">You have tried to submit multi page accounts or computations but have not identified the main or primary page with an Entry Point attribute.</sch:diagnostic>
    <sch:diagnostic id="errorCode.INLINEXBRLDOCUMENT.1.0">9901</sch:diagnostic>
    <sch:diagnostic id="transactional.INLINEXBRLDOCUMENT.1.0">You have tried to submit multi page accounts or computations but have not identified the main or primary page with an Entry Point attribute.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.INLINEXBRLDOCUMENT.1.0">You have tried to submit multi page accounts or computations but have not identified the main or primary page with an Entry Point attribute.</sch:diagnostic>
    <sch:diagnostic id="errorCode.ENCODEDINLINEXBRLDOCUMENT.2.0">9970</sch:diagnostic>
    <sch:diagnostic id="transactional.ENCODEDINLINEXBRLDOCUMENT.2.0">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.ENCODEDINLINEXBRLDOCUMENT.2.0">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.ENCODEDINLINEXBRLDOCUMENT.2.0">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic id="errorCode.INLINEXBRLDOCUMENT.2.0">9970</sch:diagnostic>
    <sch:diagnostic id="transactional.INLINEXBRLDOCUMENT.2.0">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.INLINEXBRLDOCUMENT.2.0">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic xml:lang="cy" id="transactional.cy.INLINEXBRLDOCUMENT.2.0">You have tried to submit multi page accounts or computations but have not provided file name attributes for each of the pages</sch:diagnostic>
    <sch:diagnostic id="errorCode.EXTENSION.0.0">9902</sch:diagnostic>
    <sch:diagnostic id="transactional.EXTENSION.0.0">An extension taxonomy must not be provided if raw XBRL is submitted. Please contact your software supplier.  </sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EXTENSION.0.0">An extension taxonomy must not be provided if raw XBRL is submitted. Please contact your software supplier.  </sch:diagnostic>
  </sch:diagnostics>
</sch:schema>
