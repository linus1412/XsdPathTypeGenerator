@@
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyInformation/ct:PeriodCovered/ct:From'>
       <sch:assert id='a_N012.1' diagnostics='errorCode.N012.1 transactional.N012.1 transactional.en.N012.1 transactional.cy.N012.1 ' test="translate(.,'-','') &gt;= translate('1998-07-02','-','')">From is valid if and only if it is on or after '1998-07-02'</sch:assert>
       <sch:assert id='a_N012.2' diagnostics='errorCode.N012.2 transactional.N012.2 transactional.en.N012.2 transactional.cy.N012.2 ' test='(round(date:seconds(normalize-space(.)) div 86400) &lt; round(date:seconds(normalize-space(date:date())) div 86400))'>From Date cannot be later than yesterday</sch:assert>
-      <sch:assert id='a_N012.0' diagnostics='errorCode.N012.0 transactional.N012.0 transactional.en.N012.0 ' test="(round(date:seconds(normalize-space((.))) div 86400) &lt;= round(date:seconds(normalize-space('2015-03-31')) div 86400))">[AP From Date] is valid only if this on or before '2015-03-31'</sch:assert>
+      <sch:assert id='a_N012.0' diagnostics='errorCode.N012.0 transactional.N012.0 transactional.en.N012.0 transactional.cy.N012.0 ' test="(round(date:seconds(normalize-space((.))) div 86400) &lt;= round(date:seconds(normalize-space('2015-03-31')) div 86400))">[AP From Date] is valid only if this on or before '2015-03-31'</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyInformation/ct:PeriodCovered/ct:To'>
       <sch:assert id='a_N013.0' diagnostics='errorCode.N013.0 transactional.N013.0 transactional.en.N013.0 transactional.cy.N013.0 ' test="translate(.,'-','') &gt;= translate('1999-07-01','-','')">To is valid if and only if it is on or after '1999-07-01'</sch:assert>
@@
       <sch:assert id='a_F032.4' diagnostics='errorCode.F032.4 transactional.F032.4 transactional.en.F032.4 transactional.cy.F032.4 ' test="date:year(normalize-space(date:add(normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space('-P3M')))) = date:year(normalize-space(date:add(normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To)),normalize-space('-P3M'))))                     or                       sum(../ct:Details/ct:Profit) = round(../../../ct:ChargeableProfits * round((date:seconds(normalize-space(date:difference(normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(concat( (.) + 1 , '-03-31'))))) div 86400) + 1) div round((date:seconds(normalize-space(date:difference(normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1))">Where [AP From Date] and [AP To Date] are in different financial years: Sum of all iterations of [44] must equal [37] divided by the number of days between [AP From Date] and [AP To Date] inclusive multiplied by the number of days between [AP From Date] and the end of financial year [43] (inclusive). Rounding is applied such that values from x.5 upwards are rounded up, and values less than x.5 are rounded down (where x represents a whole number).</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:CorporationTaxChargeable/ct:FinancialYearOne/ct:Details/ct:TaxRate'>
-      <sch:assert id='a_F034.5' diagnostics='errorCode.F034.5 transactional.F034.5 transactional.en.F034.5 transactional.cy.F034.5 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 5)                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))                     or                       ((math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1993-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1993-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1994-04-01')) div 86400))) *     22.5  +     number((round(date:seconds(normalize-space('1994-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [Company type] = '5' then [45] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [EQUIV. LOW CT RATE] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
-      <sch:assert id='a_F034.4' diagnostics='errorCode.F034.4 transactional.F034.4 transactional.en.F034.4 transactional.cy.F034.4 ' test="../../../../../ct:CompanyInformation/ct:CompanyType                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [Company type] is absent then [45] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
-      <sch:assert id='a_F034.3' diagnostics='errorCode.F034.3 transactional.F034.3 transactional.en.F034.3 transactional.cy.F034.3 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 4 or ../../../../../ct:CompanyInformation/ct:CompanyType = 6 or ../../../../../ct:CompanyInformation/ct:CompanyType = 7 or ../../../../../ct:CompanyInformation/ct:CompanyType = 8 or ../../../../../ct:CompanyInformation/ct:CompanyType = 9)                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))">If [Company type] = '4' or '6' or '7' or '8' or '9' then [45] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:assert>
+      <sch:assert id='a_F034.5' diagnostics='errorCode.F034.5 transactional.F034.5 transactional.en.F034.5 transactional.cy.F034.5 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 5)                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))                     or                       ((math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1993-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1993-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1994-04-01')) div 86400))) *     22.5  +     number((round(date:seconds(normalize-space('1994-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [Company type] = '5' then [45] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [EQUIV. LOW CT RATE] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
+      <sch:assert id='a_F034.4' diagnostics='errorCode.F034.4 transactional.F034.4 transactional.en.F034.4 transactional.cy.F034.4 ' test="../../../../../ct:CompanyInformation/ct:CompanyType                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [Company type] is absent then [45] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
+      <sch:assert id='a_F034.3' diagnostics='errorCode.F034.3 transactional.F034.3 transactional.en.F034.3 transactional.cy.F034.3 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 4 or ../../../../../ct:CompanyInformation/ct:CompanyType = 6 or ../../../../../ct:CompanyInformation/ct:CompanyType = 7 or ../../../../../ct:CompanyInformation/ct:CompanyType = 8 or ../../../../../ct:CompanyInformation/ct:CompanyType = 9)                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))">If [Company type] = '4' or '6' or '7' or '8' or '9' then [45] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:assert>
       <sch:assert id='a_F034.1' diagnostics='errorCode.F034.1 transactional.F034.1 transactional.en.F034.1 transactional.cy.F034.1 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 1) or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1993-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1993-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1994-04-01')) div 86400))) *     22.5  +     number((round(date:seconds(normalize-space('1994-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)">If [Company type] is 1, [45] must be [EQUIV. LOW CT RATE].</sch:assert>
       <sch:assert id='a_F034.2' diagnostics='errorCode.F034.2 transactional.F034.2 transactional.en.F034.2 transactional.cy.F034.2 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 2 or ../../../../../ct:CompanyInformation/ct:CompanyType = 3) or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)">If [Company type] is 2 or 3, [45] must be [FULL RATE OF CT].</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
@@
       <sch:assert id='a_F039.0' diagnostics='errorCode.F039.0 transactional.F039.0 transactional.en.F039.0 transactional.cy.F039.0 ' test='(math:abs((.) - ((../../ct:FinancialYearOne/ct:Year + 1))) &lt; 0.001)'>Year is valid if and only if it equals ( [43] plus 1 )</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:CompanyTaxCalculation/ct:CorporationTaxChargeable/ct:FinancialYearTwo/ct:Details/ct:TaxRate'>
-      <sch:assert id='a_F041.5' diagnostics='errorCode.F041.5 transactional.F041.5 transactional.en.F041.5 transactional.cy.F041.5 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 5)                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))                     or                       ((math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1993-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1993-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1994-04-01')) div 86400))) *     22.5  +     number((round(date:seconds(normalize-space('1994-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [Company type] = '5' then [55] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [EQUIV. LOW CT RATE] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
-      <sch:assert id='a_F041.4' diagnostics='errorCode.F041.4 transactional.F041.4 transactional.en.F041.4 transactional.cy.F041.4 ' test="../../../../../ct:CompanyInformation/ct:CompanyType                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [Company type] is absent then [55] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
-      <sch:assert id='a_F041.3' diagnostics='errorCode.F041.3 transactional.F041.3 transactional.en.F041.3 transactional.cy.F041.3 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 4 or ../../../../../ct:CompanyInformation/ct:CompanyType = 6 or ../../../../../ct:CompanyInformation/ct:CompanyType = 7 or ../../../../../ct:CompanyInformation/ct:CompanyType = 8 or ../../../../../ct:CompanyInformation/ct:CompanyType = 9)                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))">If [Company type] = '4' or '6' or '7' or '8' or '9' then [55] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:assert>
+      <sch:assert id='a_F041.5' diagnostics='errorCode.F041.5 transactional.F041.5 transactional.en.F041.5 transactional.cy.F041.5 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 5)                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))                     or                       ((math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1993-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1993-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1994-04-01')) div 86400))) *     22.5  +     number((round(date:seconds(normalize-space('1994-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [Company type] = '5' then [55] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [EQUIV. LOW CT RATE] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
+      <sch:assert id='a_F041.4' diagnostics='errorCode.F041.4 transactional.F041.4 transactional.en.F041.4 transactional.cy.F041.4 ' test="../../../../../ct:CompanyInformation/ct:CompanyType                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     30)) &lt; 0.001))                     or                       (((number(../../ct:Year) &gt;= 2007) and (../../../../ct:RingFenceProfitsIncluded or ../../../../ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded or ../../../../ct:TaxReconciliation/ct:TaxUnderS501AICTA1988included or ../../../../ct:S501AtaxCharge)) and (../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (math:abs((.) - (number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     19)) &lt; 0.001))">If [Company type] is absent then [55] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT] or [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT].</sch:assert>
+      <sch:assert id='a_F041.3' diagnostics='errorCode.F041.3 transactional.F041.3 transactional.en.F041.3 transactional.cy.F041.3 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 4 or ../../../../../ct:CompanyInformation/ct:CompanyType = 6 or ../../../../../ct:CompanyInformation/ct:CompanyType = 7 or ../../../../../ct:CompanyInformation/ct:CompanyType = 8 or ../../../../../ct:CompanyInformation/ct:CompanyType = 9)                     or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &lt;= 2014) and (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1996-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1996-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2007-04-01')) div 86400))) *     19  +     number((round(date:seconds(normalize-space('2007-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     20  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001))                     or                       ((../../../../ct:TaxCalculation/ct:StartingOrSmallCompaniesRate = 'yes') and (number(../../ct:Year) &gt;= 2000 and number(../../ct:Year) &lt;= 2005) and (math:abs((.) - (number((round(date:seconds(normalize-space('2000-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2002-04-01')) div 86400))) *     10  +     number((round(date:seconds(normalize-space('2002-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     0)) &lt; 0.001))">If [Company type] = '4' or '6' or '7' or '8' or '9' then [55] must equal an applicable value from the following selection: [FULL RATE OF CT]  or [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:assert>
       <sch:assert id='a_F041.1' diagnostics='errorCode.F041.1 transactional.F041.1 transactional.en.F041.1 transactional.cy.F041.1 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 1) or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1993-04-01')) div 86400))) *     25  +     number((round(date:seconds(normalize-space('1993-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1994-04-01')) div 86400))) *     22.5  +     number((round(date:seconds(normalize-space('1994-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)">If [Company type] is 1, [55] must be [EQUIV. LOW CT RATE].</sch:assert>
       <sch:assert id='a_F041.2' diagnostics='errorCode.F041.2 transactional.F041.2 transactional.en.F041.2 transactional.cy.F041.2 ' test="not(../../../../../ct:CompanyInformation/ct:CompanyType = 2 or ../../../../../ct:CompanyInformation/ct:CompanyType = 3) or                       (math:abs((.) - (number((round(date:seconds(normalize-space('1992-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1997-04-01')) div 86400))) *     33  +     number((round(date:seconds(normalize-space('1997-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('1999-04-01')) div 86400))) *     31  +     number((round(date:seconds(normalize-space('1999-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2008-04-01')) div 86400))) *     30  +     number((round(date:seconds(normalize-space('2008-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2011-04-01')) div 86400))) *     28  +     number((round(date:seconds(normalize-space('2011-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2012-04-01')) div 86400))) *     26  +     number((round(date:seconds(normalize-space('2012-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2013-04-01')) div 86400))) *     24  +     number((round(date:seconds(normalize-space('2013-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2014-04-01')) div 86400))) *     23  +     number((round(date:seconds(normalize-space('2014-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *      number((round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400) &lt; round(date:seconds(normalize-space('2015-04-01')) div 86400))) *     21  +     number((round(date:seconds(normalize-space('2015-04-01')) div 86400) &lt;= round(date:seconds(normalize-space(concat(../../ct:Year, '-04-01'))) div 86400))) *     20)) &lt; 0.001)">If [Company type] is 2 or 3, [55] must be [FULL RATE OF CT].</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
@@
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:RingFenceTrade/ct:Tax'>
       <sch:assert id='a_SI010.0' diagnostics='errorCode.SI010.0 transactional.SI010.0 transactional.en.SI010.0 ' test='../../ct:CompanyTaxCalculation/ct:S501AtaxCharge and ../../ct:CompanyTaxCalculation/ct:S501AtaxCharge = (.)'>If [I8] is submitted then [82] must be present and equal to [I8].</sch:assert>
       <sch:assert id='a_SI010.1' diagnostics='errorCode.SI010.1 transactional.SI010.1 transactional.en.SI010.1 ' test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space('2005-12-31')) div 86400))) or (math:abs((.) - (../ct:NetProfits * 0.1)) &lt; 0.001)">If [AP To Date] is on or before '2005-12-31' then [I8] must equal [I7] * 0.1.</sch:assert>
       <sch:assert id='a_SI010.2' diagnostics='errorCode.SI010.2 transactional.SI010.2 transactional.en.SI010.2 ' test="not((round(date:seconds(normalize-space('2006-01-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))              or               not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space('2011-03-23')) div 86400)))             or               (math:abs((.) - (../ct:NetProfits * 0.2)) &lt; 0.001)">If [AP From Date] is on or after '2006-01-01' and [AP To Date] is on or before '2011-03-23' then [I8] must equal [I7] * 0.2.</sch:assert>
-      <sch:assert id='a_SI010.3' diagnostics='errorCode.SI010.3 transactional.SI010.3 transactional.en.SI010.3 ' test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space('2005-12-31')) div 86400)))          or not((round(date:seconds(normalize-space('2006-01-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))          or (math:abs((.) - ((round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2005-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1)) * 0.1) + ((../ct:NetProfits - round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2005-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1))) * 0.2))) &lt; 0.001)">If [AP From Date] is on or before '2005-12-31' and [AP To Date] is on or after '2006-01-01' then calculate as follows: part1 = number of days between [AP From Date] and '2005-12-31' inclusive multiplied by [I7] and divided by number of days between [AP From Date] and [AP To Date] inclusive; part2 = [I7] minus part1; [I8] must equal part1 * 0.1 + part2 * 0.2.</sch:assert>
+      <sch:assert id='a_SI010.3' diagnostics='errorCode.SI010.3 transactional.SI010.3 transactional.en.SI010.3 ' test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space('2005-12-31')) div 86400)))          or not((round(date:seconds(normalize-space('2006-01-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))          or (math:abs((.) - ((round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2005-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1)) * 0.1) + ((../ct:NetProfits - round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2005-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1))) * 0.2))) &lt; 0.001)">If [AP From Date] is on or before '2005-12-31' and [AP To Date] is on or after '2006-01-01' then calculate as follows: part1 = number of days between [AP From Date] and '2005-12-31' inclusive multiplied by [I7] and divided by number of days between [AP From Date] and [AP To Date] inclusive; part2 = [I7] minus part1; [I8] must equal part1 * 0.1 + part2 * 0.2. To round part1: If the pence figure is equal to or greater than 50p then round part1 up, otherwise round part1 down, to the nearest whole pound.</sch:assert>
       <sch:assert id='a_SI010.4' diagnostics='errorCode.SI010.4 transactional.SI010.4 transactional.en.SI010.4 ' test="not((round(date:seconds(normalize-space('2011-03-24')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400)))              or               not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400) &lt;= round(date:seconds(normalize-space('2014-12-31')) div 86400)))             or               (math:abs((.) - (../ct:NetProfits * 0.32)) &lt; 0.001)">If [AP From Date] is on or after '2011-03-24' and [AP To Date] is on or before '2014-12-31' then [I8] must equal [I7] * 0.32.</sch:assert>
-      <sch:assert id='a_SI010.5' diagnostics='errorCode.SI010.5 transactional.SI010.5 transactional.en.SI010.5 ' test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space('2011-03-23')) div 86400)))          or not((round(date:seconds(normalize-space('2011-03-24')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))          or (math:abs((.) - ((round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2011-03-23&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1)) * 0.2) + ((../ct:NetProfits - round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2011-03-23&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1))) * 0.32))) &lt; 0.001)">If [AP From Date] is on or before '2011-03-23' and [AP To Date] is on or after '2011-03-24' then calculate as follows: part1 = number of days between [AP From Date] and '2011-03-23' inclusive multiplied by [I7] and divided by number of days between [AP From Date] and [AP To Date] inclusive; part2 = [I7] minus part1; [I8] must equal part1 * 0.2 + part2 * 0.32.</sch:assert>
-      <sch:assert id='a_SI010.6' diagnostics='errorCode.SI010.6 transactional.SI010.6 transactional.en.SI010.6 ' test="(round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2015-01-01')) div 86400))             or               (math:abs((.) - (../ct:NetProfits * 0.3)) &lt; 0.001)">If [AP From Date] is on or after '2015-01-01' then [I8] must equal [I7] * 0.3</sch:assert>
-      <sch:assert id='a_SI010.7' diagnostics='errorCode.SI010.7 transactional.SI010.7 transactional.en.SI010.7 ' test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space('2014-12-31')) div 86400)))          or not((round(date:seconds(normalize-space('2015-01-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))          or (math:abs((.) - ((round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2014-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1)) * 0.32) + ((../ct:NetProfits - round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2014-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1))) * 0.3))) &lt; 0.001)">If [AP From Date] is on or before '2014-12-31' and [AP To Date] is on or after '2015-01-01' then calculate as follows: part1 = number of days between [AP From Date] and '2014-12-31' inclusive multiplied by [I7] and divided by number of days between [AP From Date] and [AP To Date] inclusive; part2 = [I7] minus part1; [I8] must equal part1 * 0.32 + part2 * 0.3.</sch:assert>
+      <sch:assert id='a_SI010.5' diagnostics='errorCode.SI010.5 transactional.SI010.5 transactional.en.SI010.5 ' test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space('2011-03-23')) div 86400)))          or not((round(date:seconds(normalize-space('2011-03-24')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))          or (math:abs((.) - ((round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2011-03-23&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1)) * 0.2) + ((../ct:NetProfits - round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2011-03-23&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1))) * 0.32))) &lt; 0.001)">If [AP From Date] is on or before '2011-03-23' and [AP To Date] is on or after '2011-03-24' then calculate as follows: part1 = number of days between [AP From Date] and '2011-03-23' inclusive multiplied by [I7] and divided by number of days between [AP From Date] and [AP To Date] inclusive; part2 = [I7] minus part1; [I8] must equal part1 * 0.2 + part2 * 0.32. To round part1: If the pence figure is equal to or greater than 50p then round part1 up, otherwise round part1 down, to the nearest whole pound.</sch:assert>
+      <sch:assert id='a_SI010.6' diagnostics='errorCode.SI010.6 transactional.SI010.6 transactional.en.SI010.6 ' test="(round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt; round(date:seconds(normalize-space('2015-01-01')) div 86400))             or               (math:abs((.) - (../ct:NetProfits * 0.2)) &lt; 0.001)">If [AP From Date] is on or after '2015-01-01' then [I8] must equal [I7] * 0.2</sch:assert>
+      <sch:assert id='a_SI010.7' diagnostics='errorCode.SI010.7 transactional.SI010.7 transactional.en.SI010.7 ' test="not((round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)) div 86400) &lt;= round(date:seconds(normalize-space('2014-12-31')) div 86400)))          or not((round(date:seconds(normalize-space('2015-01-01')) div 86400) &lt;= round(date:seconds(normalize-space(../../ct:CompanyInformation/ct:PeriodCovered/ct:To)) div 86400)))          or (math:abs((.) - ((round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2014-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1)) * 0.32) + ((../ct:NetProfits - round((round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(&quot;2014-12-31&quot;)))) div 86400) + 1) * ../ct:NetProfits div (round(date:seconds(normalize-space(date:difference(normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:From)),normalize-space(string(../../ct:CompanyInformation/ct:PeriodCovered/ct:To))))) div 86400) + 1))) * 0.2))) &lt; 0.001)">If [AP From Date] is on or before '2014-12-31' and [AP To Date] is on or after '2015-01-01' then calculate as follows: part1 = number of days between [AP From Date] and '2014-12-31' inclusive multiplied by [I7] and divided by number of days between [AP From Date] and [AP To Date] inclusive; part2 = [I7] minus part1; [I8] must equal part1 * 0.32 + part2 * 0.2. To round part1: If the pence figure is equal to or greater than 50p then round part1 up, otherwise round part1 down, to the nearest whole pound.</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/ct:IRenvelope/ct:CompanyTaxReturn/ct:RingFenceTrade/ct:RingFenceCorpTaxIncluded'>
       <sch:assert id='a_SI012.0' diagnostics='errorCode.SI012.0 transactional.SI012.0 transactional.en.SI012.0 ' test='../../ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded and ../../ct:CompanyTaxCalculation/ct:TaxReconciliation/ct:RingFenceCorpTaxIncluded = (.)'>If [I10] is submitted then [161] must be present and equal to [I10].</sch:assert>
@@
     <sch:diagnostic id='transactional.en.N012.2' xml:lang='en'>The period 'From' date cannot be later than yesterday.</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N012.2' xml:lang='cy'>Ni all dyddiad y ‘O’ cyfnod fod yn hwyrach na ddoe.</sch:diagnostic>
     <sch:diagnostic id='errorCode.N012.0'>9978</sch:diagnostic>
     <sch:diagnostic id='transactional.N012.0'>The period 'From' date must be on or before 31/03/2015.</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N012.0' xml:lang='en'>The period 'From' date must be on or before 31/03/2015.</sch:diagnostic>
+    <sch:diagnostic id='transactional.cy.N012.0' xml:lang='cy'>Mae’n rhaid i’r dyddiad 'O' fod ar neu cyn 31/03/2015.</sch:diagnostic>
     <sch:diagnostic id='errorCode.N013.0'>9104</sch:diagnostic>
     <sch:diagnostic id='transactional.N013.0'>The period 'To' date must be on or after 01/07/1999.</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N013.0' xml:lang='en'>The period 'To' date must be on or after 01/07/1999.</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N013.0' xml:lang='cy'>Mae’n rhaid i’r dyddiad ‘I’ fod ar neu ar ol 01/07/1999.</sch:diagnostic>
     <sch:diagnostic id='errorCode.N013.1'>9105</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.en.N022.0' xml:lang='en'>Your entry for 'Compensating adjustment claimed' or 'Company qualifies for SME exemption' can only be 'Yes' if the period 'To' date is on or after 01/04/2004.</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N022.0' xml:lang='cy'>Gall eich cofnod ar gyfer ‘Addasiad cyfadfer a hawliwyd’ neu ‘Cwmni’n gymwys ar gyfer eithriad SME’ ond bod yn ‘Ie’ os yw dyddiad ‘I’ y cyfnod ar neu ar ol 01/04/2004.</sch:diagnostic>
     <sch:diagnostic id='errorCode.N028.2'>9112</sch:diagnostic>
     <sch:diagnostic id='transactional.N028.2'>You can only provide a set of PDF accounts if you also complete the ‘No accounts reason’ with the value of ‘PDF accounts attached with Explanation’ </sch:diagnostic>
     <sch:diagnostic id='transactional.en.N028.2' xml:lang='en'>You can only provide a set of PDF accounts if you also complete the ‘No accounts reason’ with the value of ‘PDF accounts attached with Explanation’ </sch:diagnostic>
-    <sch:diagnostic id='transactional.cy.N028.2' xml:lang='cy'>You can only provide a set of PDF accounts if you also complete the ‘No accounts reason’ with the value of ‘PDF accounts attached with Explanation’ </sch:diagnostic>
+    <sch:diagnostic id='transactional.cy.N028.2' xml:lang='cy'>Gallwch dim ond rhoi set o gyfrifon PDF os ydych hefyd yn llenwi'r 'Rheswm dim cyfrifon' gyda'r gwerth 'Cyfrifon PDF sydd wedi eu hatodi ynghyd ag Esboniad'</sch:diagnostic>
     <sch:diagnostic id='errorCode.N025.0'>9113</sch:diagnostic>
     <sch:diagnostic id='transactional.N025.0'>You must provide a set of iXBRL accounts if the ‘No accounts reason’ is absent</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N025.0' xml:lang='en'>You must provide a set of iXBRL accounts if the ‘No accounts reason’ is absent</sch:diagnostic>
-    <sch:diagnostic id='transactional.cy.N025.0' xml:lang='cy'>You must provide a set of iXBRL accounts if the ‘No accounts reason’ is absent</sch:diagnostic>
+    <sch:diagnostic id='transactional.cy.N025.0' xml:lang='cy'>Mae'n rhaid i chi gyflwyno set o gyfrifon iXBRL os yw'r 'Rheswm dim cyfrifon' yn absennol</sch:diagnostic>
     <sch:diagnostic id='errorCode.N025.1'>9114</sch:diagnostic>
     <sch:diagnostic id='transactional.N025.1'>If ‘No accounts reason’ is absent or has been completed with ‘PDF accounts attached with Explanation’ you must complete either ‘This period accounts’ or ‘Different period account’.</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N025.1' xml:lang='en'>If ‘No accounts reason’ is absent or has been completed with ‘PDF accounts attached with Explanation’ you must complete either ‘This period accounts’ or ‘Different period account’.</sch:diagnostic>
-    <sch:diagnostic id='transactional.cy.N025.1' xml:lang='cy'>If ‘No accounts reason’ is absent or has been completed with ‘PDF accounts attached with Explanation’ you must complete either ‘This period accounts’ or ‘Different period account’.</sch:diagnostic>
+    <sch:diagnostic id='transactional.cy.N025.1' xml:lang='cy'>Os yw'r 'Rheswm dim cyfrifon' yn absennol neu wedi ei lenwi gyda 'Cyfrifon PDF sydd wedi eu hatodi ynghyd ag Esboniad', rhaid i chi lenwi naill ai 'Cyfrifon y cyfnod hwn' neu 'Cyfrifon cyfnod gwahanol'</sch:diagnostic>
     <sch:diagnostic id='errorCode.N025.2'>9116</sch:diagnostic>
     <sch:diagnostic id='transactional.N025.2'>If ‘No accounts reason’ is present and has not been completed with ‘PDF accounts attached with Explanation’ you must not complete either ‘This period accounts’ or ‘Different period account’.</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N025.2' xml:lang='en'>If ‘No accounts reason’ is present and has not been completed with ‘PDF accounts attached with Explanation’ you must not complete either ‘This period accounts’ or ‘Different period account’.</sch:diagnostic>
-    <sch:diagnostic id='transactional.cy.N025.2' xml:lang='cy'>If ‘No accounts reason’ is present and has not been completed with ‘PDF accounts attached with Explanation’ you must not complete either ‘This period accounts’ or ‘Different period account’.</sch:diagnostic>
+    <sch:diagnostic id='transactional.cy.N025.2' xml:lang='cy'>Os yw 'Rheswm dim cyfrifon' yn bresennol ac nid yw wedi ei lenwi gyda 'Cyfrifon PDF sydd wedi eu hatodi ynghyd ag Esboniad', ni ddylech lenwi naill ai 'Cyfrifon y cyfnod hwn' neu 'Cyfrifon cyfnod gwahanol'</sch:diagnostic>
     <sch:diagnostic id='errorCode.N028.3'>9349</sch:diagnostic>
     <sch:diagnostic id='transactional.N028.3'> iXBRL Accounts are attached so ‘No accounts reason’ must not be completed.</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N028.3' xml:lang='en'> iXBRL Accounts are attached so ‘No accounts reason’ must not be completed.</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N028.3' xml:lang='cy'>Mae cyfrifon wedi eu hatodi felly ni ddylid rhoi rheswm ar gyfer dim cyfrifon.</sch:diagnostic>
     <sch:diagnostic id='errorCode.N028.4'>9115</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.en.N028.4' xml:lang='en'>'Amendment - accounts already submitted' is not a valid reason for a 'New' return.</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N028.4' xml:lang='cy'>Nid yw ‘Addasiad – cyfrifon eisoes wedi eu cyflwyno’ yn rheswm dilys dros ffurflen dreth ‘Newydd’. </sch:diagnostic>
     <sch:diagnostic id='errorCode.N028.5'>9971</sch:diagnostic>
     <sch:diagnostic id='transactional.N028.5'> If ‘No accounts reason’ is completed with "PDF accounts attached with explanation", you must provide a set of PDF Accounts.</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N028.5' xml:lang='en'> If ‘No accounts reason’ is completed with "PDF accounts attached with explanation", you must provide a set of PDF Accounts.</sch:diagnostic>
-    <sch:diagnostic id='transactional.cy.N028.5' xml:lang='cy'> If ‘No accounts reason’ is completed with "PDF accounts attached with explanation", you must provide a set of PDF Accounts.</sch:diagnostic>
+    <sch:diagnostic id='transactional.cy.N028.5' xml:lang='cy'>Os yw'r 'Rheswm dim cyfrifon' wedi ei lenwi gyda 'Cyfrifon PDF sydd wedi eu hatodi ynghyd ag esboniad', mae'n rhaid i chi gyflwyno set o Gyfrifon PDF</sch:diagnostic>
     <sch:diagnostic id='errorCode.N028a.0'>9965</sch:diagnostic>
     <sch:diagnostic id='transactional.N028a.0'>You must provide a Tax Computation with the Return if there is no valid reason not to supply it</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N028a.0' xml:lang='en'>You must provide a Tax Computation with the Return if there is no valid reason not to supply it</sch:diagnostic>
-    <sch:diagnostic id='transactional.cy.N028a.0' xml:lang='cy'>You must provide a Tax Computation with the Return if there is no valid reason not to supply it</sch:diagnostic>
+    <sch:diagnostic id='transactional.cy.N028a.0' xml:lang='cy'>Mae'n rhaid i chi gyflwyno Cyfrifiant Treth gyda'r Ffurflen Dreth os nad oes rheswm dilys dros beidio â'i chyflwyno</sch:diagnostic>
     <sch:diagnostic id='errorCode.N028a.1'>9966</sch:diagnostic>
     <sch:diagnostic id='transactional.N028a.1'>You cannot provide both an Inline XBRL and PDF Tax Computation with the return</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N028a.1' xml:lang='en'>You cannot provide both an Inline XBRL and PDF Tax Computation with the return</sch:diagnostic>
-    <sch:diagnostic id='transactional.cy.N028a.1' xml:lang='cy'>You cannot provide both an Inline XBRL and PDF Tax Computation with the return</sch:diagnostic>
+    <sch:diagnostic id='transactional.cy.N028a.1' xml:lang='cy'>Ni allwch gyflwyno Inline XBRL a Chyfrifiant Treth PDF gyda'r ffurflen dreth</sch:diagnostic>
     <sch:diagnostic id='errorCode.N028d.4'>9117</sch:diagnostic>
     <sch:diagnostic id='transactional.N028d.4'>Computations are attached so a reason for no Computations must not be provided.</sch:diagnostic>
     <sch:diagnostic id='transactional.en.N028d.4' xml:lang='en'>Computations are attached so a reason for no Computations must not be provided.</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.N028d.4' xml:lang='cy'>Mae cyfrifiannau wedi eu hatodi felly ni ddylid rhoi rheswm ar gyfer dim cyfrifiannau.</sch:diagnostic>
     <sch:diagnostic id='errorCode.N028d.5'>9118</sch:diagnostic>
@@
     <sch:diagnostic id='errorCode.F034.5'>9199</sch:diagnostic>
     <sch:diagnostic id='transactional.F034.5'>An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is 5 (Insurance).</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F034.5' xml:lang='en'>An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is 5 (Insurance).</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.F034.5' xml:lang='cy'>An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is 5 (Insurance).</sch:diagnostic>
     <sch:diagnostic id='errorCode.F034.4'>9200</sch:diagnostic>
-    <sch:diagnostic id='transactional.F034.4'>An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is not completed. If [SMALL CO RATE OF CT] or [RF SMALL CO RATE OF CT] is used then Box 42 must be completed.</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.F034.4' xml:lang='en'>An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is not completed. If [SMALL CO RATE OF CT] or [RF SMALL CO RATE OF CT] is used then Box 42 must be completed.</sch:diagnostic>
-    <sch:diagnostic id='transactional.cy.F034.4' xml:lang='cy'>An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [EQUIV. LOW CT RATE], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is not completed.</sch:diagnostic>
+    <sch:diagnostic id='transactional.F034.4'>An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is not completed. If [SMALL CO RATE OF CT] or [RF SMALL CO RATE OF CT] is used then Box 42 must be completed. </sch:diagnostic>
+    <sch:diagnostic id='transactional.en.F034.4' xml:lang='en'>An applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT], [STARTING RATE OF CT], [FULL RF RATE OF CT] or [RF SMALL CO RATE OF CT] must be used if the type of company is not completed. If [SMALL CO RATE OF CT] or [RF SMALL CO RATE OF CT] is used then Box 42 must be completed. </sch:diagnostic>
+    <sch:diagnostic id='transactional.cy.F034.4' xml:lang='cy'>Rhaid defnyddio cyfradd dreth cymwys o naill ai [CYFRADD LAWN CT], [CYFRADD CWMNI BACH CT], [CYFRADD GYCHWYNNOL CT], [CYFRADD RF LLAWN CT] neu [RF CYFRADD CWMNI BACH CT] os nad yw'r math o gwmni wedi ei lenwi. Os defnyddir [CYFRADD CWMNI BACH CT] neu [RF CYFRADD CWMNI BACH CT], yna mae'n rhaid llenwi Blwch 42. </sch:diagnostic>
     <sch:diagnostic id='errorCode.F034.3'>9201</sch:diagnostic>
     <sch:diagnostic id='transactional.F034.3'>If the type of company is 4 (Investment trust with housing investment profits),  6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity) or 9 (Real Estate Investment Trust - Residual) then this must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:diagnostic>
     <sch:diagnostic id='transactional.en.F034.3' xml:lang='en'>If the type of company is 4 (Investment trust with housing investment profits),  6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity) or 9 (Real Estate Investment Trust - Residual) then this must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:diagnostic>
     <sch:diagnostic id='transactional.cy.F034.3' xml:lang='cy'>If the type of company is 4 (Investment trust with housing investment profits),  6 (Members' club or voluntary association), 7 (Property management company), 8 (Charity or owed by a charity) or 9 (Real Estate Investment Trust - Residual) then this must equal an applicable tax rate from one of [FULL RATE OF CT], [SMALL CO RATE OF CT] or [STARTING RATE OF CT].</sch:diagnostic>
     <sch:diagnostic id='errorCode.F034.1'>9202</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.en.SI010.4' xml:lang='en'>If the return period 'From' date is on or after 24/03/2011 and the return period 'To' date is on or before 31/12/2014 then Box I8 must equal Box I7 multiplied by 0.32.</sch:diagnostic>
     <sch:diagnostic id='errorCode.SI010.5'>9819</sch:diagnostic>
     <sch:diagnostic id='transactional.SI010.5'>If the return period 'From' date is on or before 23/03/2011 and the return period 'To' date is on or after 24/03/2011 then part 1 must equal the number of days between the return period 'From' date and 23/03/2011 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive. Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.2 plus part 2 multiplied by 0.32.</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SI010.5' xml:lang='en'>If the return period 'From' date is on or before 23/03/2011 and the return period 'To' date is on or after 24/03/2011 then part 1 must equal the number of days between the return period 'From' date and 23/03/2011 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive. Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.2 plus part 2 multiplied by 0.32.</sch:diagnostic>
     <sch:diagnostic id='errorCode.SI010.6'>9820</sch:diagnostic>
-    <sch:diagnostic id='transactional.SI010.6'>If the return period 'From' date is on or after 01/01/2015 then Box I8 must equal Box I7 multiplied by 0.3</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.SI010.6' xml:lang='en'>If the return period 'From' date is on or after 01/01/2015 then Box I8 must equal Box I7 multiplied by 0.3</sch:diagnostic>
+    <sch:diagnostic id='transactional.SI010.6'>If the return period 'From' date is on or after 01/01/2015 then Box I8 must equal Box I7 multiplied by 0.2</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SI010.6' xml:lang='en'>If the return period 'From' date is on or after 01/01/2015 then Box I8 must equal Box I7 multiplied by 0.2</sch:diagnostic>
     <sch:diagnostic id='errorCode.SI010.7'>9821</sch:diagnostic>
-    <sch:diagnostic id='transactional.SI010.7'>If the return period 'From' date is on or before 31/12/2014 and the return period 'To' date is on or after 01/01/2015 then part 1 must equal the number of days between the return period 'From' date and 31/12/2014 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive. Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.32 plus part 2 multiplied by 0.3.</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.SI010.7' xml:lang='en'>If the return period 'From' date is on or before 31/12/2014 and the return period 'To' date is on or after 01/01/2015 then part 1 must equal the number of days between the return period 'From' date and 31/12/2014 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive. Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.32 plus part 2 multiplied by 0.3.</sch:diagnostic>
+    <sch:diagnostic id='transactional.SI010.7'>If the return period 'From' date is on or before 31/12/2014 and the return period 'To' date is on or after 01/01/2015 then part 1 must equal the number of days between the return period 'From' date and 31/12/2014 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive. Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.32 plus part 2 multiplied by 0.2.</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.SI010.7' xml:lang='en'>If the return period 'From' date is on or before 31/12/2014 and the return period 'To' date is on or after 01/01/2015 then part 1 must equal the number of days between the return period 'From' date and 31/12/2014 inclusive multiplied by Box I7 and divided by the number of days between the return period 'From' date and the return period 'To' date inclusive. Part 2 must equal Box I7 minus part 1 and Box I8 must equal part 1 multiplied by 0.32 plus part 2 multiplied by 0.2.</sch:diagnostic>
     <sch:diagnostic id='errorCode.SI012.0'>9813</sch:diagnostic>
     <sch:diagnostic id='transactional.SI012.0'>Box 161 must be completed and equal to Box I10.</sch:diagnostic>
     <sch:diagnostic id='transactional.en.SI012.0' xml:lang='en'>Box 161 must be completed and equal to Box I10.</sch:diagnostic>
     <sch:diagnostic id='errorCode.SI013.0'>9814</sch:diagnostic>
     <sch:diagnostic id='transactional.SI013.0'>Box 166 must be completed and equal to Box I11.</sch:diagnostic>
